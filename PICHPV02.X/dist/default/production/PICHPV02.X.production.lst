

Microchip Technology PIC LITE Macro Assembler V1.37 build -260352376 
                                                                                               Thu Jun 16 04:31:18 2016

Microchip Technology Omniscient Code Generator v1.37 (Free mode) build 201603110536
     1                           	processor	16F73
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2
    38                           	psect	text25,local,class=CODE,merge=1,delta=2
    39                           	psect	text26,local,class=CODE,merge=1,delta=2
    40                           	psect	text27,local,class=CODE,merge=1,delta=2
    41                           	psect	text28,local,class=CODE,merge=1,delta=2
    42                           	psect	intentry,global,class=CODE,delta=2
    43                           	dabs	1,0x7E,2
    44  0000                     	;# 
    45  0001                     	;# 
    46  0002                     	;# 
    47  0003                     	;# 
    48  0004                     	;# 
    49  0005                     	;# 
    50  0006                     	;# 
    51  0007                     	;# 
    52  000A                     	;# 
    53  000B                     	;# 
    54  000C                     	;# 
    55  000D                     	;# 
    56  000E                     	;# 
    57  000E                     	;# 
    58  000F                     	;# 
    59  0010                     	;# 
    60  0011                     	;# 
    61  0012                     	;# 
    62  0013                     	;# 
    63  0014                     	;# 
    64  0015                     	;# 
    65  0015                     	;# 
    66  0016                     	;# 
    67  0017                     	;# 
    68  0018                     	;# 
    69  0019                     	;# 
    70  001A                     	;# 
    71  001B                     	;# 
    72  001B                     	;# 
    73  001C                     	;# 
    74  001D                     	;# 
    75  001E                     	;# 
    76  001F                     	;# 
    77  0081                     	;# 
    78  0085                     	;# 
    79  0086                     	;# 
    80  0087                     	;# 
    81  008C                     	;# 
    82  008D                     	;# 
    83  008E                     	;# 
    84  0092                     	;# 
    85  0093                     	;# 
    86  0094                     	;# 
    87  0098                     	;# 
    88  0099                     	;# 
    89  009F                     	;# 
    90  010C                     	;# 
    91  010D                     	;# 
    92  010E                     	;# 
    93  010F                     	;# 
    94  018C                     	;# 
    95  0000                     	;# 
    96  0001                     	;# 
    97  0002                     	;# 
    98  0003                     	;# 
    99  0004                     	;# 
   100  0005                     	;# 
   101  0006                     	;# 
   102  0007                     	;# 
   103  000A                     	;# 
   104  000B                     	;# 
   105  000C                     	;# 
   106  000D                     	;# 
   107  000E                     	;# 
   108  000E                     	;# 
   109  000F                     	;# 
   110  0010                     	;# 
   111  0011                     	;# 
   112  0012                     	;# 
   113  0013                     	;# 
   114  0014                     	;# 
   115  0015                     	;# 
   116  0015                     	;# 
   117  0016                     	;# 
   118  0017                     	;# 
   119  0018                     	;# 
   120  0019                     	;# 
   121  001A                     	;# 
   122  001B                     	;# 
   123  001B                     	;# 
   124  001C                     	;# 
   125  001D                     	;# 
   126  001E                     	;# 
   127  001F                     	;# 
   128  0081                     	;# 
   129  0085                     	;# 
   130  0086                     	;# 
   131  0087                     	;# 
   132  008C                     	;# 
   133  008D                     	;# 
   134  008E                     	;# 
   135  0092                     	;# 
   136  0093                     	;# 
   137  0094                     	;# 
   138  0098                     	;# 
   139  0099                     	;# 
   140  009F                     	;# 
   141  010C                     	;# 
   142  010D                     	;# 
   143  010E                     	;# 
   144  010F                     	;# 
   145  018C                     	;# 
   146  0000                     	;# 
   147  0001                     	;# 
   148  0002                     	;# 
   149  0003                     	;# 
   150  0004                     	;# 
   151  0005                     	;# 
   152  0006                     	;# 
   153  0007                     	;# 
   154  000A                     	;# 
   155  000B                     	;# 
   156  000C                     	;# 
   157  000D                     	;# 
   158  000E                     	;# 
   159  000E                     	;# 
   160  000F                     	;# 
   161  0010                     	;# 
   162  0011                     	;# 
   163  0012                     	;# 
   164  0013                     	;# 
   165  0014                     	;# 
   166  0015                     	;# 
   167  0015                     	;# 
   168  0016                     	;# 
   169  0017                     	;# 
   170  0018                     	;# 
   171  0019                     	;# 
   172  001A                     	;# 
   173  001B                     	;# 
   174  001B                     	;# 
   175  001C                     	;# 
   176  001D                     	;# 
   177  001E                     	;# 
   178  001F                     	;# 
   179  0081                     	;# 
   180  0085                     	;# 
   181  0086                     	;# 
   182  0087                     	;# 
   183  008C                     	;# 
   184  008D                     	;# 
   185  008E                     	;# 
   186  0092                     	;# 
   187  0093                     	;# 
   188  0094                     	;# 
   189  0098                     	;# 
   190  0099                     	;# 
   191  009F                     	;# 
   192  010C                     	;# 
   193  010D                     	;# 
   194  010E                     	;# 
   195  010F                     	;# 
   196  018C                     	;# 
   197  0000                     	;# 
   198  0001                     	;# 
   199  0002                     	;# 
   200  0003                     	;# 
   201  0004                     	;# 
   202  0005                     	;# 
   203  0006                     	;# 
   204  0007                     	;# 
   205  000A                     	;# 
   206  000B                     	;# 
   207  000C                     	;# 
   208  000D                     	;# 
   209  000E                     	;# 
   210  000E                     	;# 
   211  000F                     	;# 
   212  0010                     	;# 
   213  0011                     	;# 
   214  0012                     	;# 
   215  0013                     	;# 
   216  0014                     	;# 
   217  0015                     	;# 
   218  0015                     	;# 
   219  0016                     	;# 
   220  0017                     	;# 
   221  0018                     	;# 
   222  0019                     	;# 
   223  001A                     	;# 
   224  001B                     	;# 
   225  001B                     	;# 
   226  001C                     	;# 
   227  001D                     	;# 
   228  001E                     	;# 
   229  001F                     	;# 
   230  0081                     	;# 
   231  0085                     	;# 
   232  0086                     	;# 
   233  0087                     	;# 
   234  008C                     	;# 
   235  008D                     	;# 
   236  008E                     	;# 
   237  0092                     	;# 
   238  0093                     	;# 
   239  0094                     	;# 
   240  0098                     	;# 
   241  0099                     	;# 
   242  009F                     	;# 
   243  010C                     	;# 
   244  010D                     	;# 
   245  010E                     	;# 
   246  010F                     	;# 
   247  018C                     	;# 
   248  0000                     	;# 
   249  0001                     	;# 
   250  0002                     	;# 
   251  0003                     	;# 
   252  0004                     	;# 
   253  0005                     	;# 
   254  0006                     	;# 
   255  0007                     	;# 
   256  000A                     	;# 
   257  000B                     	;# 
   258  000C                     	;# 
   259  000D                     	;# 
   260  000E                     	;# 
   261  000E                     	;# 
   262  000F                     	;# 
   263  0010                     	;# 
   264  0011                     	;# 
   265  0012                     	;# 
   266  0013                     	;# 
   267  0014                     	;# 
   268  0015                     	;# 
   269  0015                     	;# 
   270  0016                     	;# 
   271  0017                     	;# 
   272  0018                     	;# 
   273  0019                     	;# 
   274  001A                     	;# 
   275  001B                     	;# 
   276  001B                     	;# 
   277  001C                     	;# 
   278  001D                     	;# 
   279  001E                     	;# 
   280  001F                     	;# 
   281  0081                     	;# 
   282  0085                     	;# 
   283  0086                     	;# 
   284  0087                     	;# 
   285  008C                     	;# 
   286  008D                     	;# 
   287  008E                     	;# 
   288  0092                     	;# 
   289  0093                     	;# 
   290  0094                     	;# 
   291  0098                     	;# 
   292  0099                     	;# 
   293  009F                     	;# 
   294  010C                     	;# 
   295  010D                     	;# 
   296  010E                     	;# 
   297  010F                     	;# 
   298  018C                     	;# 
   299                           
   300                           	psect	idataBANK0
   301  09E2                     __pidataBANK0:	
   302                           
   303                           ;initializer for _EEVSTEP
   304  09E2  345E               	retlw	94
   305  09E3  3401               	retlw	1
   306                           
   307                           ;initializer for _Clock
   308  09E4  343C               	retlw	60
   309                           
   310                           ;initializer for _InterTimes
   311  09E5  343D               	retlw	61
   312                           
   313                           ;initializer for _Minutes
   314  09E6  3414               	retlw	20
   315                           
   316                           	psect	stringtext
   317  0100                     __pstringtext:	
   318  0100                     stringtab:	
   319  0100                     __stringtab:	
   320                           
   321                           ;	String table - string pointers are 2 bytes each
   322  0100  1BFF               	btfsc	btemp+1,7
   323  0101  290A               	ljmp	stringcode
   324  0102  1383               	bcf	3,7
   325  0103  187F               	btfsc	btemp+1,0
   326  0104  1783               	bsf	3,7
   327  0105  0800               	movf	0,w
   328  0106  0A84               	incf	4,f
   329  0107  1903               	skipnz
   330  0108  0AFF               	incf	btemp+1,f
   331  0109  0008               	return
   332  010A                     stringcode:	
   333  010A  087F               	movf	btemp+1,w
   334  010B  397F               	andlw	127
   335  010C  008A               	movwf	10
   336  010D  0804               	movf	4,w
   337  010E  0A84               	incf	4,f
   338  010F  1903               	skipnz
   339  0110  0AFF               	incf	btemp+1,f
   340  0111  0082               	movwf	2
   341  0112                     __stringbase:	
   342  0112                     __end_of__stringtab:	
   343  0112                     _fkTempTab:	
   344  0112  34DA               	retlw	218
   345  0113  34FF               	retlw	255
   346  0114  34DB               	retlw	219
   347  0115  34FF               	retlw	255
   348  0116  34DC               	retlw	220
   349  0117  34FF               	retlw	255
   350  0118  34DE               	retlw	222
   351  0119  34FF               	retlw	255
   352  011A  34DF               	retlw	223
   353  011B  34FF               	retlw	255
   354  011C  34E0               	retlw	224
   355  011D  34FF               	retlw	255
   356  011E  34E1               	retlw	225
   357  011F  34FF               	retlw	255
   358  0120  34E2               	retlw	226
   359  0121  34FF               	retlw	255
   360  0122  34E3               	retlw	227
   361  0123  34FF               	retlw	255
   362  0124  34E4               	retlw	228
   363  0125  34FF               	retlw	255
   364  0126  34E5               	retlw	229
   365  0127  34FF               	retlw	255
   366  0128  34E6               	retlw	230
   367  0129  34FF               	retlw	255
   368  012A  34E7               	retlw	231
   369  012B  34FF               	retlw	255
   370  012C  34E8               	retlw	232
   371  012D  34FF               	retlw	255
   372  012E  34E9               	retlw	233
   373  012F  34FF               	retlw	255
   374  0130  34EA               	retlw	234
   375  0131  34FF               	retlw	255
   376  0132  34EB               	retlw	235
   377  0133  34FF               	retlw	255
   378  0134  34EB               	retlw	235
   379  0135  34FF               	retlw	255
   380  0136  34EC               	retlw	236
   381  0137  34FF               	retlw	255
   382  0138  34ED               	retlw	237
   383  0139  34FF               	retlw	255
   384  013A  34EE               	retlw	238
   385  013B  34FF               	retlw	255
   386  013C  34EF               	retlw	239
   387  013D  34FF               	retlw	255
   388  013E  34EF               	retlw	239
   389  013F  34FF               	retlw	255
   390  0140  34F0               	retlw	240
   391  0141  34FF               	retlw	255
   392  0142  34F1               	retlw	241
   393  0143  34FF               	retlw	255
   394  0144  34F1               	retlw	241
   395  0145  34FF               	retlw	255
   396  0146  34F2               	retlw	242
   397  0147  34FF               	retlw	255
   398  0148  34F3               	retlw	243
   399  0149  34FF               	retlw	255
   400  014A  34F3               	retlw	243
   401  014B  34FF               	retlw	255
   402  014C  34F4               	retlw	244
   403  014D  34FF               	retlw	255
   404  014E  34F5               	retlw	245
   405  014F  34FF               	retlw	255
   406  0150  34F5               	retlw	245
   407  0151  34FF               	retlw	255
   408  0152  34F6               	retlw	246
   409  0153  34FF               	retlw	255
   410  0154  34F7               	retlw	247
   411  0155  34FF               	retlw	255
   412  0156  34F7               	retlw	247
   413  0157  34FF               	retlw	255
   414  0158  34F8               	retlw	248
   415  0159  34FF               	retlw	255
   416  015A  34F8               	retlw	248
   417  015B  34FF               	retlw	255
   418  015C  34F9               	retlw	249
   419  015D  34FF               	retlw	255
   420  015E  34FA               	retlw	250
   421  015F  34FF               	retlw	255
   422  0160  34FA               	retlw	250
   423  0161  34FF               	retlw	255
   424  0162  34FB               	retlw	251
   425  0163  34FF               	retlw	255
   426  0164  34FB               	retlw	251
   427  0165  34FF               	retlw	255
   428  0166  34FC               	retlw	252
   429  0167  34FF               	retlw	255
   430  0168  34FC               	retlw	252
   431  0169  34FF               	retlw	255
   432  016A  34FD               	retlw	253
   433  016B  34FF               	retlw	255
   434  016C  34FD               	retlw	253
   435  016D  34FF               	retlw	255
   436  016E  34FE               	retlw	254
   437  016F  34FF               	retlw	255
   438  0170  34FE               	retlw	254
   439  0171  34FF               	retlw	255
   440  0172  34FF               	retlw	255
   441  0173  34FF               	retlw	255
   442  0174  34FF               	retlw	255
   443  0175  34FF               	retlw	255
   444  0176  3400               	retlw	0
   445  0177  3400               	retlw	0
   446  0178  3400               	retlw	0
   447  0179  3400               	retlw	0
   448  017A  3401               	retlw	1
   449  017B  3400               	retlw	0
   450  017C  3401               	retlw	1
   451  017D  3400               	retlw	0
   452  017E  3402               	retlw	2
   453  017F  3400               	retlw	0
   454  0180  3402               	retlw	2
   455  0181  3400               	retlw	0
   456  0182  3403               	retlw	3
   457  0183  3400               	retlw	0
   458  0184  3403               	retlw	3
   459  0185  3400               	retlw	0
   460  0186  3404               	retlw	4
   461  0187  3400               	retlw	0
   462  0188  3404               	retlw	4
   463  0189  3400               	retlw	0
   464  018A  3405               	retlw	5
   465  018B  3400               	retlw	0
   466  018C  3405               	retlw	5
   467  018D  3400               	retlw	0
   468  018E  3406               	retlw	6
   469  018F  3400               	retlw	0
   470  0190  3406               	retlw	6
   471  0191  3400               	retlw	0
   472  0192  3407               	retlw	7
   473  0193  3400               	retlw	0
   474  0194  3407               	retlw	7
   475  0195  3400               	retlw	0
   476  0196  3408               	retlw	8
   477  0197  3400               	retlw	0
   478  0198  3408               	retlw	8
   479  0199  3400               	retlw	0
   480  019A  3408               	retlw	8
   481  019B  3400               	retlw	0
   482  019C  3409               	retlw	9
   483  019D  3400               	retlw	0
   484  019E  3409               	retlw	9
   485  019F  3400               	retlw	0
   486  01A0  340A               	retlw	10
   487  01A1  3400               	retlw	0
   488  01A2  340A               	retlw	10
   489  01A3  3400               	retlw	0
   490  01A4  340B               	retlw	11
   491  01A5  3400               	retlw	0
   492  01A6  340B               	retlw	11
   493  01A7  3400               	retlw	0
   494  01A8  340B               	retlw	11
   495  01A9  3400               	retlw	0
   496  01AA  340C               	retlw	12
   497  01AB  3400               	retlw	0
   498  01AC  340C               	retlw	12
   499  01AD  3400               	retlw	0
   500  01AE  340D               	retlw	13
   501  01AF  3400               	retlw	0
   502  01B0  340D               	retlw	13
   503  01B1  3400               	retlw	0
   504  01B2  340E               	retlw	14
   505  01B3  3400               	retlw	0
   506  01B4  340E               	retlw	14
   507  01B5  3400               	retlw	0
   508  01B6  340E               	retlw	14
   509  01B7  3400               	retlw	0
   510  01B8  340F               	retlw	15
   511  01B9  3400               	retlw	0
   512  01BA  340F               	retlw	15
   513  01BB  3400               	retlw	0
   514  01BC  3410               	retlw	16
   515  01BD  3400               	retlw	0
   516  01BE  3410               	retlw	16
   517  01BF  3400               	retlw	0
   518  01C0  3411               	retlw	17
   519  01C1  3400               	retlw	0
   520  01C2  3411               	retlw	17
   521  01C3  3400               	retlw	0
   522  01C4  3411               	retlw	17
   523  01C5  3400               	retlw	0
   524  01C6  3412               	retlw	18
   525  01C7  3400               	retlw	0
   526  01C8  3412               	retlw	18
   527  01C9  3400               	retlw	0
   528  01CA  3413               	retlw	19
   529  01CB  3400               	retlw	0
   530  01CC  3413               	retlw	19
   531  01CD  3400               	retlw	0
   532  01CE  3413               	retlw	19
   533  01CF  3400               	retlw	0
   534  01D0  3414               	retlw	20
   535  01D1  3400               	retlw	0
   536  01D2  3414               	retlw	20
   537  01D3  3400               	retlw	0
   538  01D4  3415               	retlw	21
   539  01D5  3400               	retlw	0
   540  01D6  3415               	retlw	21
   541  01D7  3400               	retlw	0
   542  01D8  3415               	retlw	21
   543  01D9  3400               	retlw	0
   544  01DA  3416               	retlw	22
   545  01DB  3400               	retlw	0
   546  01DC  3416               	retlw	22
   547  01DD  3400               	retlw	0
   548  01DE  3417               	retlw	23
   549  01DF  3400               	retlw	0
   550  01E0  3417               	retlw	23
   551  01E1  3400               	retlw	0
   552  01E2  3417               	retlw	23
   553  01E3  3400               	retlw	0
   554  01E4  3418               	retlw	24
   555  01E5  3400               	retlw	0
   556  01E6  3418               	retlw	24
   557  01E7  3400               	retlw	0
   558  01E8  3419               	retlw	25
   559  01E9  3400               	retlw	0
   560  01EA  3419               	retlw	25
   561  01EB  3400               	retlw	0
   562  01EC  3419               	retlw	25
   563  01ED  3400               	retlw	0
   564  01EE  341A               	retlw	26
   565  01EF  3400               	retlw	0
   566  01F0  341A               	retlw	26
   567  01F1  3400               	retlw	0
   568  01F2  341B               	retlw	27
   569  01F3  3400               	retlw	0
   570  01F4  341B               	retlw	27
   571  01F5  3400               	retlw	0
   572  01F6  341B               	retlw	27
   573  01F7  3400               	retlw	0
   574  01F8  341C               	retlw	28
   575  01F9  3400               	retlw	0
   576  01FA  341C               	retlw	28
   577  01FB  3400               	retlw	0
   578  01FC  341D               	retlw	29
   579  01FD  3400               	retlw	0
   580  01FE  341D               	retlw	29
   581  01FF  3400               	retlw	0
   582  0200  341D               	retlw	29
   583  0201  3400               	retlw	0
   584  0202  341E               	retlw	30
   585  0203  3400               	retlw	0
   586  0204  341E               	retlw	30
   587  0205  3400               	retlw	0
   588  0206  341F               	retlw	31
   589  0207  3400               	retlw	0
   590  0208  341F               	retlw	31
   591  0209  3400               	retlw	0
   592  020A  341F               	retlw	31
   593  020B  3400               	retlw	0
   594  020C  3420               	retlw	32
   595  020D  3400               	retlw	0
   596  020E  3420               	retlw	32
   597  020F  3400               	retlw	0
   598  0210  3421               	retlw	33
   599  0211  3400               	retlw	0
   600  0212  3421               	retlw	33
   601  0213  3400               	retlw	0
   602  0214  3421               	retlw	33
   603  0215  3400               	retlw	0
   604  0216  3422               	retlw	34
   605  0217  3400               	retlw	0
   606  0218  3422               	retlw	34
   607  0219  3400               	retlw	0
   608  021A  3423               	retlw	35
   609  021B  3400               	retlw	0
   610  021C  3423               	retlw	35
   611  021D  3400               	retlw	0
   612  021E  3424               	retlw	36
   613  021F  3400               	retlw	0
   614  0220  3424               	retlw	36
   615  0221  3400               	retlw	0
   616  0222  3424               	retlw	36
   617  0223  3400               	retlw	0
   618  0224  3425               	retlw	37
   619  0225  3400               	retlw	0
   620  0226  3425               	retlw	37
   621  0227  3400               	retlw	0
   622  0228  3426               	retlw	38
   623  0229  3400               	retlw	0
   624  022A  3426               	retlw	38
   625  022B  3400               	retlw	0
   626  022C  3427               	retlw	39
   627  022D  3400               	retlw	0
   628  022E  3427               	retlw	39
   629  022F  3400               	retlw	0
   630  0230  3427               	retlw	39
   631  0231  3400               	retlw	0
   632  0232  3428               	retlw	40
   633  0233  3400               	retlw	0
   634  0234  3428               	retlw	40
   635  0235  3400               	retlw	0
   636  0236  3429               	retlw	41
   637  0237  3400               	retlw	0
   638  0238  3429               	retlw	41
   639  0239  3400               	retlw	0
   640  023A  342A               	retlw	42
   641  023B  3400               	retlw	0
   642  023C  342A               	retlw	42
   643  023D  3400               	retlw	0
   644  023E  342A               	retlw	42
   645  023F  3400               	retlw	0
   646  0240  342B               	retlw	43
   647  0241  3400               	retlw	0
   648  0242  342B               	retlw	43
   649  0243  3400               	retlw	0
   650  0244  342C               	retlw	44
   651  0245  3400               	retlw	0
   652  0246  342C               	retlw	44
   653  0247  3400               	retlw	0
   654  0248  342D               	retlw	45
   655  0249  3400               	retlw	0
   656  024A  342D               	retlw	45
   657  024B  3400               	retlw	0
   658  024C  342E               	retlw	46
   659  024D  3400               	retlw	0
   660  024E  342E               	retlw	46
   661  024F  3400               	retlw	0
   662  0250  342F               	retlw	47
   663  0251  3400               	retlw	0
   664  0252  342F               	retlw	47
   665  0253  3400               	retlw	0
   666  0254  3430               	retlw	48
   667  0255  3400               	retlw	0
   668  0256  3430               	retlw	48
   669  0257  3400               	retlw	0
   670  0258  3431               	retlw	49
   671  0259  3400               	retlw	0
   672  025A  3431               	retlw	49
   673  025B  3400               	retlw	0
   674  025C  3432               	retlw	50
   675  025D  3400               	retlw	0
   676  025E  3432               	retlw	50
   677  025F  3400               	retlw	0
   678  0260  3433               	retlw	51
   679  0261  3400               	retlw	0
   680  0262  3433               	retlw	51
   681  0263  3400               	retlw	0
   682  0264  3434               	retlw	52
   683  0265  3400               	retlw	0
   684  0266  3434               	retlw	52
   685  0267  3400               	retlw	0
   686  0268  3435               	retlw	53
   687  0269  3400               	retlw	0
   688  026A  3435               	retlw	53
   689  026B  3400               	retlw	0
   690  026C  3436               	retlw	54
   691  026D  3400               	retlw	0
   692  026E  3436               	retlw	54
   693  026F  3400               	retlw	0
   694  0270  3437               	retlw	55
   695  0271  3400               	retlw	0
   696  0272  3437               	retlw	55
   697  0273  3400               	retlw	0
   698  0274  3438               	retlw	56
   699  0275  3400               	retlw	0
   700  0276  3438               	retlw	56
   701  0277  3400               	retlw	0
   702  0278  3439               	retlw	57
   703  0279  3400               	retlw	0
   704  027A  343A               	retlw	58
   705  027B  3400               	retlw	0
   706  027C  343A               	retlw	58
   707  027D  3400               	retlw	0
   708  027E  343B               	retlw	59
   709  027F  3400               	retlw	0
   710  0280  343B               	retlw	59
   711  0281  3400               	retlw	0
   712  0282  343C               	retlw	60
   713  0283  3400               	retlw	0
   714  0284  343D               	retlw	61
   715  0285  3400               	retlw	0
   716  0286  343D               	retlw	61
   717  0287  3400               	retlw	0
   718  0288  343E               	retlw	62
   719  0289  3400               	retlw	0
   720  028A  343F               	retlw	63
   721  028B  3400               	retlw	0
   722  028C  343F               	retlw	63
   723  028D  3400               	retlw	0
   724  028E  3440               	retlw	64
   725  028F  3400               	retlw	0
   726  0290  3441               	retlw	65
   727  0291  3400               	retlw	0
   728  0292  3441               	retlw	65
   729  0293  3400               	retlw	0
   730  0294  3442               	retlw	66
   731  0295  3400               	retlw	0
   732  0296  3443               	retlw	67
   733  0297  3400               	retlw	0
   734  0298  3443               	retlw	67
   735  0299  3400               	retlw	0
   736  029A  3444               	retlw	68
   737  029B  3400               	retlw	0
   738  029C  3445               	retlw	69
   739  029D  3400               	retlw	0
   740  029E  3446               	retlw	70
   741  029F  3400               	retlw	0
   742  02A0  3447               	retlw	71
   743  02A1  3400               	retlw	0
   744  02A2  3447               	retlw	71
   745  02A3  3400               	retlw	0
   746  02A4  3448               	retlw	72
   747  02A5  3400               	retlw	0
   748  02A6  3449               	retlw	73
   749  02A7  3400               	retlw	0
   750  02A8  344A               	retlw	74
   751  02A9  3400               	retlw	0
   752  02AA  344B               	retlw	75
   753  02AB  3400               	retlw	0
   754  02AC  344C               	retlw	76
   755  02AD  3400               	retlw	0
   756  02AE  344D               	retlw	77
   757  02AF  3400               	retlw	0
   758  02B0  344E               	retlw	78
   759  02B1  3400               	retlw	0
   760  02B2  344F               	retlw	79
   761  02B3  3400               	retlw	0
   762  02B4  3450               	retlw	80
   763  02B5  3400               	retlw	0
   764  02B6  3451               	retlw	81
   765  02B7  3400               	retlw	0
   766  02B8  3452               	retlw	82
   767  02B9  3400               	retlw	0
   768  02BA  3453               	retlw	83
   769  02BB  3400               	retlw	0
   770  02BC  3454               	retlw	84
   771  02BD  3400               	retlw	0
   772  02BE  3456               	retlw	86
   773  02BF  3400               	retlw	0
   774  02C0  3457               	retlw	87
   775  02C1  3400               	retlw	0
   776  02C2  3458               	retlw	88
   777  02C3  3400               	retlw	0
   778  02C4  345A               	retlw	90
   779  02C5  3400               	retlw	0
   780  02C6  345B               	retlw	91
   781  02C7  3400               	retlw	0
   782  02C8  345D               	retlw	93
   783  02C9  3400               	retlw	0
   784  02CA  345E               	retlw	94
   785  02CB  3400               	retlw	0
   786  02CC  3460               	retlw	96
   787  02CD  3400               	retlw	0
   788  02CE  3462               	retlw	98
   789  02CF  3400               	retlw	0
   790  02D0  3464               	retlw	100
   791  02D1  3400               	retlw	0
   792  02D2  3466               	retlw	102
   793  02D3  3400               	retlw	0
   794  02D4  3469               	retlw	105
   795  02D5  3400               	retlw	0
   796  02D6  346B               	retlw	107
   797  02D7  3400               	retlw	0
   798  02D8  346E               	retlw	110
   799  02D9  3400               	retlw	0
   800  02DA  3471               	retlw	113
   801  02DB  3400               	retlw	0
   802  02DC  3474               	retlw	116
   803  02DD  3400               	retlw	0
   804  02DE  3479               	retlw	121
   805  02DF  3400               	retlw	0
   806  02E0  347D               	retlw	125
   807  02E1  3400               	retlw	0
   808  02E2  3483               	retlw	131
   809  02E3  3400               	retlw	0
   810  02E4                     __end_of_fkTempTab:	
   811  02E4                     _STEP:	
   812  02E4  3408               	retlw	8
   813  02E5  3400               	retlw	0
   814  02E6  340C               	retlw	12
   815  02E7  3400               	retlw	0
   816  02E8  3404               	retlw	4
   817  02E9  3400               	retlw	0
   818  02EA  3406               	retlw	6
   819  02EB  3400               	retlw	0
   820  02EC  3402               	retlw	2
   821  02ED  3400               	retlw	0
   822  02EE  3403               	retlw	3
   823  02EF  3400               	retlw	0
   824  02F0  3401               	retlw	1
   825  02F1  3400               	retlw	0
   826  02F2  3409               	retlw	9
   827  02F3  3400               	retlw	0
   828  02F4                     __end_of_STEP:	
   829  001F                     _ADCON0	set	31
   830  001F                     _ADCON0bits	set	31
   831  001E                     _ADRES	set	30
   832  0006                     _PORTB	set	6
   833  0007                     _PORTCBIT	set	7
   834  0018                     _RCSTA	set	24
   835  0001                     _TMR0	set	1
   836  0019                     _TXREG	set	25
   837  00F8                     _ADON	set	248
   838  005F                     _GIE	set	95
   839  00FA                     _GO	set	250
   840  005C                     _INTE	set	92
   841  005E                     _PEIE	set	94
   842  0030                     _RB0	set	48
   843  0031                     _RB1	set	49
   844  0032                     _RB2	set	50
   845  0034                     _RB4	set	52
   846  0035                     _RB5	set	53
   847  0036                     _RB6	set	54
   848  0037                     _RB7	set	55
   849  005B                     _RBIE	set	91
   850  003C                     _RC4	set	60
   851  005D                     _T0IE	set	93
   852  005A                     _T0IF	set	90
   853  005A                     _TMR0IF	set	90
   854  009F                     _ADCON1	set	159
   855  0099                     _SPBRG	set	153
   856  0085                     _TRISA	set	133
   857  0086                     _TRISB	set	134
   858  0087                     _TRISC	set	135
   859  0098                     _TXSTA	set	152
   860  040B                     _PSA	set	1035
   861  0465                     _RCIE	set	1125
   862  040D                     _T0CS	set	1037
   863  04C1                     _TRMT	set	1217
   864  040F                     _nRBPU	set	1039
   865                           
   866                           ; #config settings
   867  0000                     
   868                           	psect	cinit
   869  0013                     start_initialization:	
   870  0013                     __initialization:	
   871                           
   872                           ; Clear objects allocated to BANK0
   873  0013  1383               	bcf	3,7	;select IRP bank0
   874  0014  3056               	movlw	low __pbssBANK0
   875  0015  0084               	movwf	4
   876  0016  3071               	movlw	low (__pbssBANK0+27)
   877  0017  158A  21ED  118A   	fcall	clear_ram0
   878                           
   879                           ; Clear objects allocated to BANK1
   880  001A  30A0               	movlw	low __pbssBANK1
   881  001B  0084               	movwf	4
   882  001C  30B0               	movlw	low (__pbssBANK1+16)
   883  001D  158A  21ED  118A   	fcall	clear_ram0
   884                           
   885                           ; Initialize objects allocated to BANK0
   886  0020  158A  21E2  118A   	fcall	__pidataBANK0	;fetch initializer
   887  0023  00F1               	movwf	__pdataBANK0& (0+127)
   888  0024  158A  21E3  118A   	fcall	__pidataBANK0+1	;fetch initializer
   889  0027  00F2               	movwf	(__pdataBANK0+1)& (0+127)
   890  0028  158A  21E4  118A   	fcall	__pidataBANK0+2	;fetch initializer
   891  002B  00F3               	movwf	(__pdataBANK0+2)& (0+127)
   892  002C  158A  21E5  118A   	fcall	__pidataBANK0+3	;fetch initializer
   893  002F  00F4               	movwf	(__pdataBANK0+3)& (0+127)
   894  0030  158A  21E6         	fcall	__pidataBANK0+4	;fetch initializer
   895  0032  00F5               	movwf	(__pdataBANK0+4)& (0+127)
   896  0033                     end_of_initialization:	
   897                           ;End of C runtime variable initialization code
   898                           
   899  0033                     __end_of__initialization:	
   900  0033  0183               	clrf	3
   901  0034  158A  2B18         	ljmp	_main	;jump to C main() function
   902                           
   903                           	psect	bssBANK0
   904  0056                     __pbssBANK0:	
   905  0056                     _TM:	
   906  0056                     	ds	9
   907  005F                     _Judge:	
   908  005F                     	ds	2
   909  0061                     _SysErr:	
   910  0061                     	ds	2
   911  0063                     _adcc:	
   912  0063                     	ds	2
   913  0065                     _ee:	
   914  0065                     	ds	2
   915  0067                     _ff:	
   916  0067                     	ds	2
   917  0069                     _stepcount:	
   918  0069                     	ds	2
   919  006B                     _t1:	
   920  006B                     	ds	2
   921  006D                     _t2:	
   922  006D                     	ds	2
   923  006F                     _RelayS:	
   924  006F                     	ds	1
   925  0070                     _temp1:	
   926  0070                     	ds	1
   927                           
   928                           	psect	dataBANK0
   929  0071                     __pdataBANK0:	
   930  0071                     _EEVSTEP:	
   931  0071                     	ds	2
   932  0073                     _Clock:	
   933  0073                     	ds	1
   934  0074                     _InterTimes:	
   935  0074                     	ds	1
   936  0075                     _Minutes:	
   937  0075                     	ds	1
   938                           
   939                           	psect	bssBANK1
   940  00A0                     __pbssBANK1:	
   941  00A0                     _T:	
   942  00A0                     	ds	16
   943                           
   944                           	psect	clrtext
   945  09ED                     clear_ram0:	
   946                           ;	Called with FSR containing the base address, and
   947                           ;	W with the last address+1
   948                           
   949  09ED  0064               	clrwdt	;clear the watchdog before getting into this loop
   950  09EE                     clrloop0:	
   951  09EE  0180               	clrf	0	;clear RAM location pointed to by FSR
   952  09EF  0A84               	incf	4,f	;increment pointer
   953  09F0  0604               	xorwf	4,w	;XOR with final address
   954  09F1  1903               	btfsc	3,2	;have we reached the end yet?
   955  09F2  3400               	retlw	0	;all done for this memory range, return
   956  09F3  0604               	xorwf	4,w	;XOR again to restore value
   957  09F4  29EE               	goto	clrloop0	;do the next byte
   958                           
   959                           	psect	cstackCOMMON
   960  0000                     __pcstackCOMMON:	
   961  0000                     ??_UART_SendByte:	
   962  0000                     ??_delay2ms:	
   963                           ; 1 bytes @ 0x0
   964                           
   965  0000                     ??_HPSystem:	
   966                           ; 1 bytes @ 0x0
   967                           
   968  0000                     ??_DriveRelay:	
   969                           ; 1 bytes @ 0x0
   970                           
   971  0000                     ??_HPShut:	
   972                           ; 1 bytes @ 0x0
   973                           
   974  0000                     ??_timer0_init:	
   975                           ; 1 bytes @ 0x0
   976                           
   977  0000                     ??_serial_init:	
   978                           ; 1 bytes @ 0x0
   979                           
   980  0000                     ??_main:	
   981                           ; 1 bytes @ 0x0
   982                           
   983  0000                     ??___wmul:	
   984                           ; 1 bytes @ 0x0
   985                           
   986                           
   987                           	psect	cstackBANK0
   988  0020                     __pcstackBANK0:	
   989                           ; 1 bytes @ 0x0
   990                           
   991  0020                     ?_UART_SendByte:	
   992  0020                     ?_DriveEEV:	
   993                           ; 1 bytes @ 0x0
   994                           
   995  0020                     ?_HPSystem:	
   996                           ; 1 bytes @ 0x0
   997                           
   998  0020                     ?_DriveRelay:	
   999                           ; 1 bytes @ 0x0
  1000                           
  1001  0020                     ?_TEMPADC:	
  1002                           ; 1 bytes @ 0x0
  1003                           
  1004  0020                     ?_HPShut:	
  1005                           ; 1 bytes @ 0x0
  1006                           
  1007  0020                     ?_CountClk:	
  1008                           ; 1 bytes @ 0x0
  1009                           
  1010  0020                     ?_CountMin:	
  1011                           ; 1 bytes @ 0x0
  1012                           
  1013  0020                     ?_DriveTime:	
  1014                           ; 1 bytes @ 0x0
  1015                           
  1016  0020                     ?_eevinit:	
  1017                           ; 1 bytes @ 0x0
  1018                           
  1019  0020                     ?_timer0_init:	
  1020                           ; 1 bytes @ 0x0
  1021                           
  1022  0020                     ?_ISR:	
  1023                           ; 1 bytes @ 0x0
  1024                           
  1025  0020                     ??_ISR:	
  1026                           ; 1 bytes @ 0x0
  1027                           
  1028  0020                     ?_serial_init:	
  1029                           ; 1 bytes @ 0x0
  1030                           
  1031  0020                     ?_HPstart:	
  1032                           ; 1 bytes @ 0x0
  1033                           
  1034  0020                     ?_HPOuUnit:	
  1035                           ; 1 bytes @ 0x0
  1036                           
  1037  0020                     ?_main:	
  1038                           ; 1 bytes @ 0x0
  1039                           
  1040                           
  1041                           ; 2 bytes @ 0x0
  1042  0020                     	ds	5
  1043  0025                     ?_delay2ms:	
  1044  0025                     ??_CountClk:	
  1045                           ; 1 bytes @ 0x5
  1046                           
  1047  0025                     ??_CountMin:	
  1048                           ; 1 bytes @ 0x5
  1049                           
  1050  0025                     ?_eevdriver:	
  1051                           ; 1 bytes @ 0x5
  1052                           
  1053  0025                     ?_abs:	
  1054                           ; 1 bytes @ 0x5
  1055                           
  1056  0025                     ?___wmul:	
  1057                           ; 2 bytes @ 0x5
  1058                           
  1059  0025                     ?___ftpack:	
  1060                           ; 2 bytes @ 0x5
  1061                           
  1062  0025                     UART_SendByte@dat:	
  1063                           ; 3 bytes @ 0x5
  1064                           
  1065  0025                     eevdriver@x:	
  1066                           ; 1 bytes @ 0x5
  1067                           
  1068  0025                     delay2ms@x:	
  1069                           ; 2 bytes @ 0x5
  1070                           
  1071  0025                     ___wmul@multiplier:	
  1072                           ; 2 bytes @ 0x5
  1073                           
  1074  0025                     abs@a:	
  1075                           ; 2 bytes @ 0x5
  1076                           
  1077  0025                     ___ftpack@arg:	
  1078                           ; 2 bytes @ 0x5
  1079                           
  1080                           
  1081                           ; 3 bytes @ 0x5
  1082  0025                     	ds	1
  1083  0026                     ??_HPOuUnit:	
  1084                           
  1085                           ; 1 bytes @ 0x6
  1086  0026                     	ds	1
  1087  0027                     ??_abs:	
  1088  0027                     ??_eevdriver:	
  1089                           ; 1 bytes @ 0x7
  1090                           
  1091  0027                     delay2ms@a:	
  1092                           ; 1 bytes @ 0x7
  1093                           
  1094  0027                     ___wmul@multiplicand:	
  1095                           ; 2 bytes @ 0x7
  1096                           
  1097                           
  1098                           ; 2 bytes @ 0x7
  1099  0027                     	ds	1
  1100  0028                     ___ftpack@exp:	
  1101                           
  1102                           ; 1 bytes @ 0x8
  1103  0028                     	ds	1
  1104  0029                     ___ftpack@sign:	
  1105  0029                     delay2ms@b:	
  1106                           ; 1 bytes @ 0x9
  1107                           
  1108  0029                     ___wmul@product:	
  1109                           ; 2 bytes @ 0x9
  1110                           
  1111                           
  1112                           ; 2 bytes @ 0x9
  1113  0029                     	ds	1
  1114  002A                     ??___ftpack:	
  1115  002A                     eevdriver@stepx:	
  1116                           ; 1 bytes @ 0xA
  1117                           
  1118                           
  1119                           ; 2 bytes @ 0xA
  1120  002A                     	ds	1
  1121  002B                     ?_ADC:	
  1122  002B                     ??_HPstart:	
  1123                           ; 1 bytes @ 0xB
  1124                           
  1125  002B                     ?___awdiv:	
  1126                           ; 1 bytes @ 0xB
  1127                           
  1128  002B                     ADC@x:	
  1129                           ; 2 bytes @ 0xB
  1130                           
  1131  002B                     ___awdiv@divisor:	
  1132                           ; 2 bytes @ 0xB
  1133                           
  1134                           
  1135                           ; 2 bytes @ 0xB
  1136  002B                     	ds	1
  1137  002C                     ??_DriveEEV:	
  1138  002C                     ??_eevinit:	
  1139                           ; 1 bytes @ 0xC
  1140                           
  1141                           
  1142                           ; 1 bytes @ 0xC
  1143  002C                     	ds	1
  1144  002D                     ??_ADC:	
  1145  002D                     ?___awtoft:	
  1146                           ; 1 bytes @ 0xD
  1147                           
  1148  002D                     ?___ftadd:	
  1149                           ; 3 bytes @ 0xD
  1150                           
  1151  002D                     ?___ftmul:	
  1152                           ; 3 bytes @ 0xD
  1153                           
  1154  002D                     ?___lbtoft:	
  1155                           ; 3 bytes @ 0xD
  1156                           
  1157  002D                     ___awdiv@dividend:	
  1158                           ; 3 bytes @ 0xD
  1159                           
  1160  002D                     ___awtoft@c:	
  1161                           ; 2 bytes @ 0xD
  1162                           
  1163  002D                     ___ftadd@f1:	
  1164                           ; 2 bytes @ 0xD
  1165                           
  1166  002D                     ___ftmul@f1:	
  1167                           ; 3 bytes @ 0xD
  1168                           
  1169                           
  1170                           ; 3 bytes @ 0xD
  1171  002D                     	ds	1
  1172  002E                     DriveEEV@x:	
  1173                           
  1174                           ; 2 bytes @ 0xE
  1175  002E                     	ds	1
  1176  002F                     ??___awdiv:	
  1177                           
  1178                           ; 1 bytes @ 0xF
  1179  002F                     	ds	1
  1180  0030                     ??_DriveTime:	
  1181  0030                     ??___awtoft:	
  1182                           ; 1 bytes @ 0x10
  1183                           
  1184  0030                     ??___lbtoft:	
  1185                           ; 1 bytes @ 0x10
  1186                           
  1187  0030                     ___awdiv@counter:	
  1188                           ; 1 bytes @ 0x10
  1189                           
  1190  0030                     ___ftadd@f2:	
  1191                           ; 1 bytes @ 0x10
  1192                           
  1193  0030                     ___ftmul@f2:	
  1194                           ; 3 bytes @ 0x10
  1195                           
  1196                           
  1197                           ; 3 bytes @ 0x10
  1198  0030                     	ds	1
  1199  0031                     ___awdiv@sign:	
  1200  0031                     DriveTime@i:	
  1201                           ; 1 bytes @ 0x11
  1202                           
  1203  0031                     eevinit@i:	
  1204                           ; 2 bytes @ 0x11
  1205                           
  1206                           
  1207                           ; 2 bytes @ 0x11
  1208  0031                     	ds	1
  1209  0032                     ___awtoft@sign:	
  1210  0032                     ___awdiv@quotient:	
  1211                           ; 1 bytes @ 0x12
  1212                           
  1213                           
  1214                           ; 2 bytes @ 0x12
  1215  0032                     	ds	1
  1216  0033                     ??___ftadd:	
  1217  0033                     ??___ftmul:	
  1218                           ; 1 bytes @ 0x13
  1219                           
  1220                           
  1221                           ; 1 bytes @ 0x13
  1222  0033                     	ds	1
  1223  0034                     ___lbtoft@c:	
  1224                           
  1225                           ; 1 bytes @ 0x14
  1226  0034                     	ds	1
  1227  0035                     ?___ftdiv:	
  1228  0035                     ___ftdiv@f2:	
  1229                           ; 3 bytes @ 0x15
  1230                           
  1231                           
  1232                           ; 3 bytes @ 0x15
  1233  0035                     	ds	2
  1234  0037                     ___ftadd@sign:	
  1235  0037                     ___ftmul@exp:	
  1236                           ; 1 bytes @ 0x17
  1237                           
  1238                           
  1239                           ; 1 bytes @ 0x17
  1240  0037                     	ds	1
  1241  0038                     ___ftadd@exp2:	
  1242  0038                     ___ftdiv@f1:	
  1243                           ; 1 bytes @ 0x18
  1244                           
  1245  0038                     ___ftmul@f3_as_product:	
  1246                           ; 3 bytes @ 0x18
  1247                           
  1248                           
  1249                           ; 3 bytes @ 0x18
  1250  0038                     	ds	1
  1251  0039                     ___ftadd@exp1:	
  1252                           
  1253                           ; 1 bytes @ 0x19
  1254  0039                     	ds	1
  1255  003A                     ?___fttol:	
  1256  003A                     ___fttol@f1:	
  1257                           ; 4 bytes @ 0x1A
  1258                           
  1259                           
  1260                           ; 3 bytes @ 0x1A
  1261  003A                     	ds	1
  1262  003B                     ??___ftdiv:	
  1263  003B                     ___ftmul@cntr:	
  1264                           ; 1 bytes @ 0x1B
  1265                           
  1266                           
  1267                           ; 1 bytes @ 0x1B
  1268  003B                     	ds	1
  1269  003C                     ___ftmul@sign:	
  1270                           
  1271                           ; 1 bytes @ 0x1C
  1272  003C                     	ds	2
  1273  003E                     ??___fttol:	
  1274                           
  1275                           ; 1 bytes @ 0x1E
  1276  003E                     	ds	1
  1277  003F                     ___ftdiv@cntr:	
  1278                           
  1279                           ; 1 bytes @ 0x1F
  1280  003F                     	ds	1
  1281  0040                     ___ftdiv@f3:	
  1282                           
  1283                           ; 3 bytes @ 0x20
  1284  0040                     	ds	2
  1285  0042                     ___fttol@sign1:	
  1286                           
  1287                           ; 1 bytes @ 0x22
  1288  0042                     	ds	1
  1289  0043                     ___ftdiv@exp:	
  1290  0043                     ___fttol@lval:	
  1291                           ; 1 bytes @ 0x23
  1292                           
  1293                           
  1294                           ; 4 bytes @ 0x23
  1295  0043                     	ds	1
  1296  0044                     ___ftdiv@sign:	
  1297                           
  1298                           ; 1 bytes @ 0x24
  1299  0044                     	ds	3
  1300  0047                     ___fttol@exp1:	
  1301                           
  1302                           ; 1 bytes @ 0x27
  1303  0047                     	ds	1
  1304  0048                     ??_TEMPADC:	
  1305                           
  1306                           ; 1 bytes @ 0x28
  1307  0048                     	ds	9
  1308  0051                     TEMPADC@temmmp:	
  1309                           
  1310                           ; 1 bytes @ 0x31
  1311  0051                     	ds	1
  1312  0052                     TEMPADC@uwAdcSample:	
  1313                           
  1314                           ; 1 bytes @ 0x32
  1315  0052                     	ds	1
  1316  0053                     TEMPADC@temmp2:	
  1317                           
  1318                           ; 3 bytes @ 0x33
  1319  0053                     	ds	3
  1320                           
  1321                           	psect	maintext
  1322  0B18                     __pmaintext:	
  1323 ;;
  1324 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1325 ;;
  1326 ;; *************** function _main *****************
  1327 ;; Defined at:
  1328 ;;		line 128 in file "../main.c"
  1329 ;; Parameters:    Size  Location     Type
  1330 ;;		None
  1331 ;; Auto vars:     Size  Location     Type
  1332 ;;		None
  1333 ;; Return value:  Size  Location     Type
  1334 ;;                  2  241[None  ] int 
  1335 ;; Registers used:
  1336 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1337 ;; Tracked objects:
  1338 ;;		On entry : B00/0
  1339 ;;		On exit  : 0/0
  1340 ;;		Unchanged: 0/0
  1341 ;; Data sizes:     COMMON   BANK0   BANK1
  1342 ;;      Params:         0       0       0
  1343 ;;      Locals:         0       0       0
  1344 ;;      Temps:          0       0       0
  1345 ;;      Totals:         0       0       0
  1346 ;;Total ram usage:        0 bytes
  1347 ;; Hardware stack levels required when called:    5
  1348 ;; This function calls:
  1349 ;;		_DriveRelay
  1350 ;;		_DriveTime
  1351 ;;		_HPSystem
  1352 ;;		_TEMPADC
  1353 ;;		_eevinit
  1354 ;;		_serial_init
  1355 ;;		_timer0_init
  1356 ;; This function is called by:
  1357 ;;		Startup code after reset
  1358 ;; This function uses a non-reentrant model
  1359 ;;
  1360                           
  1361                           
  1362                           ;psect for function _main
  1363  0B18                     _main:	
  1364                           
  1365                           ;main.c: 130: PORTB=0x00;
  1366                           
  1367                           ;incstack = 0
  1368                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1369  0B18  1283               	bcf	3,5	;RP0=0, select bank0
  1370  0B19  1303               	bcf	3,6	;RP1=0, select bank0
  1371  0B1A  0186               	clrf	6	;volatile
  1372                           
  1373                           ;main.c: 132: timer0_init();
  1374  0B1B  158A  21F5  158A   	fcall	_timer0_init
  1375                           
  1376                           ;main.c: 133: serial_init();
  1377  0B1E  158A  2211  158A   	fcall	_serial_init
  1378                           
  1379                           ;main.c: 135: nRBPU =1;
  1380  0B21  1683               	bsf	3,5	;RP0=1, select bank1
  1381  0B22  1303               	bcf	3,6	;RP1=0, select bank1
  1382  0B23  1781               	bsf	1,7	;volatile
  1383                           
  1384                           ;main.c: 136: TRISA = 0x2f;
  1385  0B24  302F               	movlw	47
  1386  0B25  0085               	movwf	5	;volatile
  1387                           
  1388                           ;main.c: 137: TRISB = 0x07;
  1389  0B26  3007               	movlw	7
  1390  0B27  0086               	movwf	6	;volatile
  1391                           
  1392                           ;main.c: 138: TRISC = 0x80;
  1393  0B28  3080               	movlw	128
  1394  0B29  0087               	movwf	7	;volatile
  1395                           
  1396                           ;main.c: 139: RC4=1;
  1397  0B2A  1283               	bcf	3,5	;RP0=0, select bank0
  1398  0B2B  1303               	bcf	3,6	;RP1=0, select bank0
  1399  0B2C  1607               	bsf	7,4	;volatile
  1400                           
  1401                           ;main.c: 140: INTE=0;
  1402  0B2D  120B               	bcf	11,4	;volatile
  1403                           
  1404                           ;main.c: 141: RBIE=0;
  1405  0B2E  118B               	bcf	11,3	;volatile
  1406                           
  1407                           ;main.c: 143: eevinit();
  1408  0B2F  118A  2637  158A   	fcall	_eevinit
  1409  0B32                     l2507:	
  1410                           ;main.c: 147: while(1)
  1411                           
  1412                           
  1413                           ;main.c: 148: {
  1414                           ;main.c: 161: if((RB2)||(RB1))
  1415  0B32  1283               	bcf	3,5	;RP0=0, select bank0
  1416  0B33  1303               	bcf	3,6	;RP1=0, select bank0
  1417  0B34  1906               	btfsc	6,2	;volatile
  1418  0B35  2B38               	goto	l2511
  1419  0B36  1C86               	btfss	6,1	;volatile
  1420  0B37  2B3E               	goto	l243
  1421  0B38                     l2511:	
  1422                           
  1423                           ;main.c: 163: {
  1424                           ;main.c: 164: if(TM.ComRun>=120) SysErr.P6=1;
  1425  0B38  3078               	movlw	120
  1426  0B39  0259               	subwf	_TM+3,w
  1427  0B3A  1C03               	skipc
  1428  0B3B  2B3F               	goto	l2515
  1429  0B3C  1761               	bsf	_SysErr,6
  1430                           
  1431                           ;main.c: 166: }
  1432  0B3D  2B3F               	goto	l2515
  1433  0B3E                     l243:	
  1434                           
  1435                           ;main.c: 167: else {SysErr.P6=0;
  1436  0B3E  1361               	bcf	_SysErr,6
  1437  0B3F                     l2515:	
  1438                           
  1439                           ;main.c: 169: }
  1440                           ;main.c: 173: DriveTime();
  1441  0B3F  158A  272E  158A   	fcall	_DriveTime
  1442                           
  1443                           ;main.c: 174: HPSystem();
  1444  0B42  158A  21E7  158A   	fcall	_HPSystem
  1445                           
  1446                           ;main.c: 175: DriveRelay();
  1447  0B45  158A  2253  158A   	fcall	_DriveRelay
  1448                           
  1449                           ;main.c: 179: TEMPADC();
  1450  0B48  118A  22F4  158A   	fcall	_TEMPADC
  1451                           
  1452                           ;main.c: 181: ++adcc;
  1453  0B4B  3001               	movlw	1
  1454  0B4C  1283               	bcf	3,5	;RP0=0, select bank0
  1455  0B4D  1303               	bcf	3,6	;RP1=0, select bank0
  1456  0B4E  07E3               	addwf	_adcc,f
  1457  0B4F  1803               	skipnc
  1458  0B50  0AE4               	incf	_adcc+1,f
  1459  0B51  3000               	movlw	0
  1460  0B52  07E4               	addwf	_adcc+1,f
  1461                           
  1462                           ;main.c: 182: if(adcc==5)
  1463  0B53  3005               	movlw	5
  1464  0B54  0663               	xorwf	_adcc,w
  1465  0B55  0464               	iorwf	_adcc+1,w
  1466  0B56  1D03               	btfss	3,2
  1467  0B57  2B5A               	goto	l2527
  1468                           
  1469                           ;main.c: 183: adcc=0;
  1470  0B58  01E3               	clrf	_adcc
  1471  0B59  01E4               	clrf	_adcc+1
  1472  0B5A                     l2527:	
  1473                           
  1474                           ;main.c: 185: ADON=0;
  1475  0B5A  101F               	bcf	31,0	;volatile
  1476  0B5B  2B32               	goto	l2507
  1477  0B5C                     __end_of_main:	
  1478                           ;main.c: 186: }
  1479                           ;main.c: 188: return 0;
  1480                           ;	Return value of _main is never used
  1481                           
  1482                           
  1483                           	psect	text1
  1484  09F5                     __ptext1:	
  1485 ;; *************** function _timer0_init *****************
  1486 ;; Defined at:
  1487 ;;		line 71 in file "../main.c"
  1488 ;; Parameters:    Size  Location     Type
  1489 ;;		None
  1490 ;; Auto vars:     Size  Location     Type
  1491 ;;		None
  1492 ;; Return value:  Size  Location     Type
  1493 ;;                  1    wreg      void 
  1494 ;; Registers used:
  1495 ;;		wreg
  1496 ;; Tracked objects:
  1497 ;;		On entry : 0/0
  1498 ;;		On exit  : 0/0
  1499 ;;		Unchanged: 0/0
  1500 ;; Data sizes:     COMMON   BANK0   BANK1
  1501 ;;      Params:         0       0       0
  1502 ;;      Locals:         0       0       0
  1503 ;;      Temps:          0       0       0
  1504 ;;      Totals:         0       0       0
  1505 ;;Total ram usage:        0 bytes
  1506 ;; Hardware stack levels used:    1
  1507 ;; Hardware stack levels required when called:    1
  1508 ;; This function calls:
  1509 ;;		Nothing
  1510 ;; This function is called by:
  1511 ;;		_main
  1512 ;; This function uses a non-reentrant model
  1513 ;;
  1514                           
  1515                           
  1516                           ;psect for function _timer0_init
  1517  09F5                     _timer0_init:	
  1518                           
  1519                           ;main.c: 73: T0CS=0;
  1520                           
  1521                           ;incstack = 0
  1522                           ; Regs used in _timer0_init: [wreg]
  1523  09F5  1683               	bsf	3,5	;RP0=1, select bank1
  1524  09F6  1303               	bcf	3,6	;RP1=0, select bank1
  1525  09F7  1281               	bcf	1,5	;volatile
  1526                           
  1527                           ;main.c: 74: PSA=1;
  1528  09F8  1581               	bsf	1,3	;volatile
  1529                           
  1530                           ;main.c: 75: T0IF=0;
  1531  09F9  110B               	bcf	11,2	;volatile
  1532                           
  1533                           ;main.c: 76: T0IE=1;
  1534  09FA  168B               	bsf	11,5	;volatile
  1535                           
  1536                           ;main.c: 77: TMR0=0x0e;
  1537  09FB  300E               	movlw	14
  1538  09FC  1283               	bcf	3,5	;RP0=0, select bank0
  1539  09FD  1303               	bcf	3,6	;RP1=0, select bank0
  1540  09FE  0081               	movwf	1	;volatile
  1541                           
  1542                           ;main.c: 81: GIE=1;
  1543  09FF  178B               	bsf	11,7	;volatile
  1544  0A00  0008               	return
  1545  0A01                     __end_of_timer0_init:	
  1546                           
  1547                           	psect	text2
  1548  0A11                     __ptext2:	
  1549 ;; *************** function _serial_init *****************
  1550 ;; Defined at:
  1551 ;;		line 115 in file "../main.c"
  1552 ;; Parameters:    Size  Location     Type
  1553 ;;		None
  1554 ;; Auto vars:     Size  Location     Type
  1555 ;;		None
  1556 ;; Return value:  Size  Location     Type
  1557 ;;                  1    wreg      void 
  1558 ;; Registers used:
  1559 ;;		wreg
  1560 ;; Tracked objects:
  1561 ;;		On entry : 0/0
  1562 ;;		On exit  : 0/0
  1563 ;;		Unchanged: 0/0
  1564 ;; Data sizes:     COMMON   BANK0   BANK1
  1565 ;;      Params:         0       0       0
  1566 ;;      Locals:         0       0       0
  1567 ;;      Temps:          0       0       0
  1568 ;;      Totals:         0       0       0
  1569 ;;Total ram usage:        0 bytes
  1570 ;; Hardware stack levels used:    1
  1571 ;; Hardware stack levels required when called:    1
  1572 ;; This function calls:
  1573 ;;		Nothing
  1574 ;; This function is called by:
  1575 ;;		_main
  1576 ;; This function uses a non-reentrant model
  1577 ;;
  1578                           
  1579                           
  1580                           ;psect for function _serial_init
  1581  0A11                     _serial_init:	
  1582                           
  1583                           ;main.c: 118: TXSTA=0x24;
  1584                           
  1585                           ;incstack = 0
  1586                           ; Regs used in _serial_init: [wreg]
  1587  0A11  3024               	movlw	36
  1588  0A12  1683               	bsf	3,5	;RP0=1, select bank1
  1589  0A13  1303               	bcf	3,6	;RP1=0, select bank1
  1590  0A14  0098               	movwf	24	;volatile
  1591                           
  1592                           ;main.c: 119: RCSTA=0x80;
  1593  0A15  3080               	movlw	128
  1594  0A16  1283               	bcf	3,5	;RP0=0, select bank0
  1595  0A17  1303               	bcf	3,6	;RP1=0, select bank0
  1596  0A18  0098               	movwf	24	;volatile
  1597                           
  1598                           ;main.c: 120: SPBRG=0x19;
  1599  0A19  3019               	movlw	25
  1600  0A1A  1683               	bsf	3,5	;RP0=1, select bank1
  1601  0A1B  1303               	bcf	3,6	;RP1=0, select bank1
  1602  0A1C  0099               	movwf	25	;volatile
  1603                           
  1604                           ;main.c: 121: GIE=1;
  1605  0A1D  178B               	bsf	11,7	;volatile
  1606                           
  1607                           ;main.c: 122: PEIE=1;
  1608  0A1E  170B               	bsf	11,6	;volatile
  1609                           
  1610                           ;main.c: 123: RCIE=0;
  1611  0A1F  128C               	bcf	12,5	;volatile
  1612  0A20  0008               	return
  1613  0A21                     __end_of_serial_init:	
  1614                           
  1615                           	psect	text3
  1616  0637                     __ptext3:	
  1617 ;; *************** function _eevinit *****************
  1618 ;; Defined at:
  1619 ;;		line 34 in file "../eev.c"
  1620 ;; Parameters:    Size  Location     Type
  1621 ;;		None
  1622 ;; Auto vars:     Size  Location     Type
  1623 ;;  i               2   17[BANK0 ] int 
  1624 ;; Return value:  Size  Location     Type
  1625 ;;                  1    wreg      void 
  1626 ;; Registers used:
  1627 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1628 ;; Tracked objects:
  1629 ;;		On entry : 0/0
  1630 ;;		On exit  : 0/0
  1631 ;;		Unchanged: 0/0
  1632 ;; Data sizes:     COMMON   BANK0   BANK1
  1633 ;;      Params:         0       0       0
  1634 ;;      Locals:         0       2       0
  1635 ;;      Temps:          0       5       0
  1636 ;;      Totals:         0       7       0
  1637 ;;Total ram usage:        7 bytes
  1638 ;; Hardware stack levels used:    1
  1639 ;; Hardware stack levels required when called:    3
  1640 ;; This function calls:
  1641 ;;		_delay2ms
  1642 ;;		_eevdriver
  1643 ;; This function is called by:
  1644 ;;		_main
  1645 ;; This function uses a non-reentrant model
  1646 ;;
  1647                           
  1648                           
  1649                           ;psect for function _eevinit
  1650  0637                     _eevinit:	
  1651                           
  1652                           ;incstack = 0
  1653                           ; Regs used in _eevinit: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1654  0637  3001               	movlw	1
  1655  0638  1283               	bcf	3,5	;RP0=0, select bank0
  1656  0639  1303               	bcf	3,6	;RP1=0, select bank0
  1657  063A  00B1               	movwf	eevinit@i
  1658  063B  3000               	movlw	0
  1659  063C  00B2               	movwf	eevinit@i+1
  1660                           
  1661                           ;eev.c: 38: PORTCBIT.LBIT=STEP[0];
  1662  063D  30E4               	movlw	low (_STEP| (0+32768))
  1663  063E  0084               	movwf	4
  1664  063F  3082               	movlw	high (_STEP| (0+32768))
  1665  0640  00FF               	movwf	127
  1666  0641  118A  2100  118A   	fcall	stringtab
  1667  0644  00AC               	movwf	??_eevinit
  1668  0645  0807               	movf	7,w	;volatile
  1669  0646  062C               	xorwf	??_eevinit,w
  1670  0647  39F0               	andlw	-16
  1671  0648  062C               	xorwf	??_eevinit,w
  1672  0649  0087               	movwf	7	;volatile
  1673                           
  1674                           ;eev.c: 41: delay2ms(200);
  1675  064A  30C8               	movlw	200
  1676  064B                     L1:	
  1677  064B  00A5               	movwf	delay2ms@x
  1678  064C  3000               	movlw	0
  1679  064D  00A6               	movwf	delay2ms@x+1
  1680  064E  158A  22AE  118A   	fcall	_delay2ms
  1681                           
  1682                           ;eev.c: 42: while(i<(500-EEVSTEP))
  1683  0651  1283               	bcf	3,5	;RP0=0, select bank0
  1684  0652  1303               	bcf	3,6	;RP1=0, select bank0
  1685  0653  0971               	comf	_EEVSTEP,w
  1686  0654  00AC               	movwf	??_eevinit
  1687  0655  0972               	comf	_EEVSTEP+1,w
  1688  0656  00AD               	movwf	??_eevinit+1
  1689  0657  0AAC               	incf	??_eevinit,f
  1690  0658  1903               	skipnz
  1691  0659  0AAD               	incf	??_eevinit+1,f
  1692  065A  082C               	movf	??_eevinit,w
  1693  065B  3EF4               	addlw	244
  1694  065C  00AE               	movwf	??_eevinit+2
  1695  065D  082D               	movf	??_eevinit+1,w
  1696  065E  1803               	skipnc
  1697  065F  3E01               	addlw	1
  1698  0660  3E01               	addlw	1
  1699  0661  00AF               	movwf	??_eevinit+3
  1700  0662  0832               	movf	eevinit@i+1,w
  1701  0663  3A80               	xorlw	128
  1702  0664  00B0               	movwf	??_eevinit+4
  1703  0665  082F               	movf	??_eevinit+3,w
  1704  0666  3A80               	xorlw	128
  1705  0667  0230               	subwf	??_eevinit+4,w
  1706  0668  1D03               	skipz
  1707  0669  2E6C               	goto	u3575
  1708  066A  082E               	movf	??_eevinit+2,w
  1709  066B  0231               	subwf	eevinit@i,w
  1710  066C                     u3575:	
  1711  066C  1803               	btfsc	3,0
  1712  066D  2E81               	goto	l2379
  1713                           
  1714                           ;eev.c: 43: {eevdriver(1);
  1715  066E  3001               	movlw	1
  1716  066F  1283               	bcf	3,5	;RP0=0, select bank0
  1717  0670  1303               	bcf	3,6	;RP1=0, select bank0
  1718  0671  00A5               	movwf	eevdriver@x
  1719  0672  3000               	movlw	0
  1720  0673  00A6               	movwf	eevdriver@x+1
  1721  0674  158A  23AB  118A   	fcall	_eevdriver
  1722                           
  1723                           ;eev.c: 44: i++;
  1724  0677  3001               	movlw	1
  1725  0678  1283               	bcf	3,5	;RP0=0, select bank0
  1726  0679  1303               	bcf	3,6	;RP1=0, select bank0
  1727  067A  07B1               	addwf	eevinit@i,f
  1728  067B  1803               	skipnc
  1729  067C  0AB2               	incf	eevinit@i+1,f
  1730  067D  3000               	movlw	0
  1731  067E  07B2               	addwf	eevinit@i+1,f
  1732                           
  1733                           ;eev.c: 45: delay2ms(8);
  1734  067F  3008               	movlw	8
  1735  0680  2E4B               	goto	L1
  1736  0681                     l2379:	
  1737                           
  1738                           ;eev.c: 47: }
  1739                           ;eev.c: 50: PORTCBIT.LBIT=STEP[stepcount];
  1740  0681  1283               	bcf	3,5	;RP0=0, select bank0
  1741  0682  1303               	bcf	3,6	;RP1=0, select bank0
  1742  0683  0869               	movf	_stepcount,w
  1743  0684  00AC               	movwf	??_eevinit
  1744  0685  072C               	addwf	??_eevinit,w
  1745  0686  3EE4               	addlw	low (_STEP| (0+32768))
  1746  0687  0084               	movwf	4
  1747  0688  3082               	movlw	high (_STEP| (0+32768))
  1748  0689  1803               	skipnc
  1749  068A  3E01               	addlw	1
  1750  068B  00FF               	movwf	127
  1751  068C  118A  2100  118A   	fcall	stringtab
  1752  068F  00AD               	movwf	??_eevinit+1
  1753  0690  0807               	movf	7,w	;volatile
  1754  0691  062D               	xorwf	??_eevinit+1,w
  1755  0692  39F0               	andlw	-16
  1756  0693  062D               	xorwf	??_eevinit+1,w
  1757  0694  0087               	movwf	7	;volatile
  1758                           
  1759                           ;eev.c: 51: delay2ms(200);
  1760  0695  30C8               	movlw	200
  1761  0696  00A5               	movwf	delay2ms@x
  1762  0697  3000               	movlw	0
  1763  0698  00A6               	movwf	delay2ms@x+1
  1764  0699  158A  22AE  118A   	fcall	_delay2ms
  1765                           
  1766                           ;eev.c: 52: i=0;
  1767  069C  1283               	bcf	3,5	;RP0=0, select bank0
  1768  069D  1303               	bcf	3,6	;RP1=0, select bank0
  1769  069E  01B1               	clrf	eevinit@i
  1770  069F  01B2               	clrf	eevinit@i+1
  1771  06A0                     l2391:	
  1772                           ;eev.c: 53: while(i<560)
  1773                           
  1774  06A0  1283               	bcf	3,5	;RP0=0, select bank0
  1775  06A1  1303               	bcf	3,6	;RP1=0, select bank0
  1776  06A2  0832               	movf	eevinit@i+1,w
  1777  06A3  3A80               	xorlw	128
  1778  06A4  00FF               	movwf	127
  1779  06A5  3082               	movlw	130
  1780  06A6  027F               	subwf	127,w
  1781  06A7  1D03               	skipz
  1782  06A8  2EAB               	goto	u3585
  1783  06A9  3030               	movlw	48
  1784  06AA  0231               	subwf	eevinit@i,w
  1785  06AB                     u3585:	
  1786  06AB  1803               	btfsc	3,0
  1787  06AC  2EC5               	goto	l2393
  1788                           
  1789                           ;eev.c: 54: {eevdriver(0);
  1790  06AD  3000               	movlw	0
  1791  06AE  1283               	bcf	3,5	;RP0=0, select bank0
  1792  06AF  1303               	bcf	3,6	;RP1=0, select bank0
  1793  06B0  00A5               	movwf	eevdriver@x
  1794  06B1  00A6               	movwf	eevdriver@x+1
  1795  06B2  158A  23AB  118A   	fcall	_eevdriver
  1796                           
  1797                           ;eev.c: 55: i++;
  1798  06B5  3001               	movlw	1
  1799  06B6  1283               	bcf	3,5	;RP0=0, select bank0
  1800  06B7  1303               	bcf	3,6	;RP1=0, select bank0
  1801  06B8  07B1               	addwf	eevinit@i,f
  1802  06B9  1803               	skipnc
  1803  06BA  0AB2               	incf	eevinit@i+1,f
  1804  06BB  3000               	movlw	0
  1805  06BC  07B2               	addwf	eevinit@i+1,f
  1806                           
  1807                           ;eev.c: 56: delay2ms(8);
  1808  06BD  3008               	movlw	8
  1809  06BE  00A5               	movwf	delay2ms@x
  1810  06BF  3000               	movlw	0
  1811  06C0  00A6               	movwf	delay2ms@x+1
  1812  06C1  158A  22AE  118A   	fcall	_delay2ms
  1813  06C4  2EA0               	goto	l2391
  1814  06C5                     l2393:	
  1815                           
  1816                           ;eev.c: 58: }
  1817                           ;eev.c: 62: PORTCBIT.LBIT=STEP[stepcount];
  1818  06C5  1283               	bcf	3,5	;RP0=0, select bank0
  1819  06C6  1303               	bcf	3,6	;RP1=0, select bank0
  1820  06C7  0869               	movf	_stepcount,w
  1821  06C8  00AC               	movwf	??_eevinit
  1822  06C9  072C               	addwf	??_eevinit,w
  1823  06CA  3EE4               	addlw	low (_STEP| (0+32768))
  1824  06CB  0084               	movwf	4
  1825  06CC  3082               	movlw	high (_STEP| (0+32768))
  1826  06CD  1803               	skipnc
  1827  06CE  3E01               	addlw	1
  1828  06CF  00FF               	movwf	127
  1829  06D0  118A  2100  118A   	fcall	stringtab
  1830  06D3  00AD               	movwf	??_eevinit+1
  1831  06D4  0807               	movf	7,w	;volatile
  1832  06D5  062D               	xorwf	??_eevinit+1,w
  1833  06D6  39F0               	andlw	-16
  1834  06D7  062D               	xorwf	??_eevinit+1,w
  1835  06D8  0087               	movwf	7	;volatile
  1836                           
  1837                           ;eev.c: 63: delay2ms(200);
  1838  06D9  30C8               	movlw	200
  1839  06DA  00A5               	movwf	delay2ms@x
  1840  06DB  3000               	movlw	0
  1841  06DC  00A6               	movwf	delay2ms@x+1
  1842  06DD  158A  22AE  118A   	fcall	_delay2ms
  1843                           
  1844                           ;eev.c: 64: i=0;
  1845  06E0  1283               	bcf	3,5	;RP0=0, select bank0
  1846  06E1  1303               	bcf	3,6	;RP1=0, select bank0
  1847  06E2  01B1               	clrf	eevinit@i
  1848  06E3  01B2               	clrf	eevinit@i+1
  1849                           
  1850                           ;eev.c: 65: RC4=0;
  1851  06E4  1207               	bcf	7,4	;volatile
  1852  06E5                     l2407:	
  1853                           ;eev.c: 66: while(i<EEVSTEP)
  1854                           
  1855  06E5  1283               	bcf	3,5	;RP0=0, select bank0
  1856  06E6  1303               	bcf	3,6	;RP1=0, select bank0
  1857  06E7  0832               	movf	eevinit@i+1,w
  1858  06E8  3A80               	xorlw	128
  1859  06E9  00AC               	movwf	??_eevinit
  1860  06EA  0872               	movf	_EEVSTEP+1,w
  1861  06EB  3A80               	xorlw	128
  1862  06EC  022C               	subwf	??_eevinit,w
  1863  06ED  1D03               	skipz
  1864  06EE  2EF1               	goto	u3595
  1865  06EF  0871               	movf	_EEVSTEP,w
  1866  06F0  0231               	subwf	eevinit@i,w
  1867  06F1                     u3595:	
  1868  06F1  1803               	btfsc	3,0
  1869  06F2  2F0C               	goto	l2409
  1870                           
  1871                           ;eev.c: 67: {eevdriver(1);
  1872  06F3  3001               	movlw	1
  1873  06F4  1283               	bcf	3,5	;RP0=0, select bank0
  1874  06F5  1303               	bcf	3,6	;RP1=0, select bank0
  1875  06F6  00A5               	movwf	eevdriver@x
  1876  06F7  3000               	movlw	0
  1877  06F8  00A6               	movwf	eevdriver@x+1
  1878  06F9  158A  23AB  118A   	fcall	_eevdriver
  1879                           
  1880                           ;eev.c: 68: i++;
  1881  06FC  3001               	movlw	1
  1882  06FD  1283               	bcf	3,5	;RP0=0, select bank0
  1883  06FE  1303               	bcf	3,6	;RP1=0, select bank0
  1884  06FF  07B1               	addwf	eevinit@i,f
  1885  0700  1803               	skipnc
  1886  0701  0AB2               	incf	eevinit@i+1,f
  1887  0702  3000               	movlw	0
  1888  0703  07B2               	addwf	eevinit@i+1,f
  1889                           
  1890                           ;eev.c: 69: delay2ms(8);
  1891  0704  3008               	movlw	8
  1892  0705  00A5               	movwf	delay2ms@x
  1893  0706  3000               	movlw	0
  1894  0707  00A6               	movwf	delay2ms@x+1
  1895  0708  158A  22AE  118A   	fcall	_delay2ms
  1896  070B  2EE5               	goto	l2407
  1897  070C                     l2409:	
  1898                           
  1899                           ;eev.c: 71: }
  1900                           ;eev.c: 72: PORTCBIT.LBIT=STEP[stepcount];
  1901  070C  1283               	bcf	3,5	;RP0=0, select bank0
  1902  070D  1303               	bcf	3,6	;RP1=0, select bank0
  1903  070E  0869               	movf	_stepcount,w
  1904  070F  00AC               	movwf	??_eevinit
  1905  0710  072C               	addwf	??_eevinit,w
  1906  0711  3EE4               	addlw	low (_STEP| (0+32768))
  1907  0712  0084               	movwf	4
  1908  0713  3082               	movlw	high (_STEP| (0+32768))
  1909  0714  1803               	skipnc
  1910  0715  3E01               	addlw	1
  1911  0716  00FF               	movwf	127
  1912  0717  118A  2100  118A   	fcall	stringtab
  1913  071A  00AD               	movwf	??_eevinit+1
  1914  071B  0807               	movf	7,w	;volatile
  1915  071C  062D               	xorwf	??_eevinit+1,w
  1916  071D  39F0               	andlw	-16
  1917  071E  062D               	xorwf	??_eevinit+1,w
  1918  071F  0087               	movwf	7	;volatile
  1919                           
  1920                           ;eev.c: 73: delay2ms(240);
  1921  0720  30F0               	movlw	240
  1922  0721  00A5               	movwf	delay2ms@x
  1923  0722  3000               	movlw	0
  1924  0723  00A6               	movwf	delay2ms@x+1
  1925  0724  158A  22AE         	fcall	_delay2ms
  1926                           
  1927                           ;eev.c: 74: PORTCBIT.LBIT=0x0;
  1928  0726  30F0               	movlw	-16
  1929  0727  1283               	bcf	3,5	;RP0=0, select bank0
  1930  0728  1303               	bcf	3,6	;RP1=0, select bank0
  1931  0729  0587               	andwf	7,f	;volatile
  1932  072A  0008               	return
  1933  072B                     __end_of_eevinit:	
  1934                           
  1935                           	psect	text4
  1936  02F4                     __ptext4:	
  1937 ;; *************** function _TEMPADC *****************
  1938 ;; Defined at:
  1939 ;;		line 192 in file "../main.c"
  1940 ;; Parameters:    Size  Location     Type
  1941 ;;		None
  1942 ;; Auto vars:     Size  Location     Type
  1943 ;;  temmp2          3   51[BANK0 ] void 
  1944 ;;  temmmp          1   49[BANK0 ] unsigned char 
  1945 ;;  uwAdcSample     1   50[BANK0 ] unsigned char 
  1946 ;; Return value:  Size  Location     Type
  1947 ;;                  1    wreg      void 
  1948 ;; Registers used:
  1949 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1950 ;; Tracked objects:
  1951 ;;		On entry : 0/0
  1952 ;;		On exit  : 0/0
  1953 ;;		Unchanged: 0/0
  1954 ;; Data sizes:     COMMON   BANK0   BANK1
  1955 ;;      Params:         0       0       0
  1956 ;;      Locals:         0       5       0
  1957 ;;      Temps:          0       9       0
  1958 ;;      Totals:         0      14       0
  1959 ;;Total ram usage:       14 bytes
  1960 ;; Hardware stack levels used:    1
  1961 ;; Hardware stack levels required when called:    3
  1962 ;; This function calls:
  1963 ;;		_ADC
  1964 ;;		___awdiv
  1965 ;;		___awtoft
  1966 ;;		___ftadd
  1967 ;;		___ftdiv
  1968 ;;		___ftmul
  1969 ;;		___fttol
  1970 ;;		___lbtoft
  1971 ;;		___wmul
  1972 ;; This function is called by:
  1973 ;;		_main
  1974 ;; This function uses a non-reentrant model
  1975 ;;
  1976                           
  1977                           
  1978                           ;psect for function _TEMPADC
  1979  02F4                     _TEMPADC:	
  1980                           
  1981                           ;main.c: 195: unsigned char uwAdcSample = 0;
  1982                           
  1983                           ;incstack = 0
  1984                           ; Regs used in _TEMPADC: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1985  02F4  1283               	bcf	3,5	;RP0=0, select bank0
  1986  02F5  1303               	bcf	3,6	;RP1=0, select bank0
  1987  02F6  01D2               	clrf	TEMPADC@uwAdcSample
  1988                           
  1989                           ;main.c: 196: uwAdcSample=ADC(adcc);
  1990  02F7  0864               	movf	_adcc+1,w
  1991  02F8  00AC               	movwf	ADC@x+1
  1992  02F9  0863               	movf	_adcc,w
  1993  02FA  00AB               	movwf	ADC@x
  1994  02FB  158A  228D  118A   	fcall	_ADC
  1995  02FE  1283               	bcf	3,5	;RP0=0, select bank0
  1996  02FF  1303               	bcf	3,6	;RP1=0, select bank0
  1997  0300  00C8               	movwf	??_TEMPADC
  1998  0301  0848               	movf	??_TEMPADC,w
  1999  0302  00D2               	movwf	TEMPADC@uwAdcSample
  2000                           
  2001                           ;main.c: 212: if(adcc==1){
  2002  0303  0363               	decf	_adcc,w
  2003  0304  0464               	iorwf	_adcc+1,w
  2004  0305  1D03               	btfss	3,2
  2005  0306  2B4E               	goto	l2457
  2006                           
  2007                           ;main.c: 220: T[adcc]=fkTempTab[(int)(uwAdcSample*30/43-22)];}
  2008  0307  302B               	movlw	43
  2009  0308  00AB               	movwf	___awdiv@divisor
  2010  0309  3000               	movlw	0
  2011  030A  00AC               	movwf	___awdiv@divisor+1
  2012  030B  0852               	movf	TEMPADC@uwAdcSample,w
  2013  030C  00C8               	movwf	??_TEMPADC
  2014  030D  01C9               	clrf	??_TEMPADC+1
  2015  030E  0848               	movf	??_TEMPADC,w
  2016  030F  00A5               	movwf	___wmul@multiplier
  2017  0310  0849               	movf	??_TEMPADC+1,w
  2018  0311  00A6               	movwf	___wmul@multiplier+1
  2019  0312  301E               	movlw	30
  2020  0313  00A7               	movwf	___wmul@multiplicand
  2021  0314  3000               	movlw	0
  2022  0315  00A8               	movwf	___wmul@multiplicand+1
  2023  0316  158A  22D1  118A   	fcall	___wmul
  2024  0319  1283               	bcf	3,5	;RP0=0, select bank0
  2025  031A  1303               	bcf	3,6	;RP1=0, select bank0
  2026  031B  0826               	movf	?___wmul+1,w
  2027  031C  00AE               	movwf	___awdiv@dividend+1
  2028  031D  0825               	movf	?___wmul,w
  2029  031E  00AD               	movwf	___awdiv@dividend
  2030  031F  158A  2406  118A   	fcall	___awdiv
  2031  0322  1283               	bcf	3,5	;RP0=0, select bank0
  2032  0323  1303               	bcf	3,6	;RP1=0, select bank0
  2033  0324  082B               	movf	?___awdiv,w
  2034  0325  00CA               	movwf	??_TEMPADC+2
  2035  0326  082C               	movf	?___awdiv+1,w
  2036  0327  00CB               	movwf	??_TEMPADC+3
  2037  0328  1003               	clrc
  2038  0329  0DCA               	rlf	??_TEMPADC+2,f
  2039  032A  0DCB               	rlf	??_TEMPADC+3,f
  2040  032B  084A               	movf	??_TEMPADC+2,w
  2041  032C  3ED4               	addlw	212
  2042  032D  00CC               	movwf	??_TEMPADC+4
  2043  032E  084B               	movf	??_TEMPADC+3,w
  2044  032F  1803               	skipnc
  2045  0330  3E01               	addlw	1
  2046  0331  3EFF               	addlw	255
  2047  0332  00CD               	movwf	??_TEMPADC+5
  2048  0333  3081               	movlw	high (_fkTempTab| (0+32768))
  2049  0334  074D               	addwf	??_TEMPADC+5,w
  2050  0335  00FF               	movwf	127
  2051  0336  3012               	movlw	low (_fkTempTab| (0+32768))
  2052  0337  074C               	addwf	??_TEMPADC+4,w
  2053  0338  0084               	movwf	4
  2054  0339  1803               	skipnc
  2055  033A  0AFF               	incf	127,f
  2056  033B  118A  2100  118A   	fcall	stringtab
  2057  033E  00CE               	movwf	??_TEMPADC+6
  2058  033F  118A  2100         	fcall	stringtab
  2059  0341  00CF               	movwf	??_TEMPADC+7
  2060  0342  0863               	movf	_adcc,w
  2061  0343  00D0               	movwf	??_TEMPADC+8
  2062  0344  0750               	addwf	??_TEMPADC+8,w
  2063  0345  3EA0               	addlw	(low (_T| 0))& (0+255)
  2064  0346  0084               	movwf	4
  2065  0347  084E               	movf	??_TEMPADC+6,w
  2066  0348  1383               	bcf	3,7	;select IRP bank1
  2067  0349  0080               	movwf	0
  2068  034A  0A84               	incf	4,f
  2069  034B  084F               	movf	??_TEMPADC+7,w
  2070  034C  0080               	movwf	0
  2071  034D  0008               	return
  2072  034E                     l2457:	
  2073                           
  2074                           ;main.c: 221: else if(adcc==4)
  2075  034E  3004               	movlw	4
  2076  034F  0663               	xorwf	_adcc,w
  2077  0350  0464               	iorwf	_adcc+1,w
  2078  0351  1D03               	btfss	3,2
  2079  0352  2C03               	goto	l2471
  2080                           
  2081                           ;main.c: 222: {
  2082                           ;main.c: 223: unsigned char temmmp;
  2083                           ;main.c: 224: temmmp=uwAdcSample;
  2084  0353  0852               	movf	TEMPADC@uwAdcSample,w
  2085  0354  00C8               	movwf	??_TEMPADC
  2086  0355  0848               	movf	??_TEMPADC,w
  2087  0356  00D1               	movwf	TEMPADC@temmmp
  2088                           
  2089                           ;main.c: 225: double temmp2;
  2090                           ;main.c: 226: temmp2=(0xb*temmmp)-255;
  2091  0357  0851               	movf	TEMPADC@temmmp,w
  2092  0358  00C8               	movwf	??_TEMPADC
  2093  0359  01C9               	clrf	??_TEMPADC+1
  2094  035A  0848               	movf	??_TEMPADC,w
  2095  035B  00A5               	movwf	___wmul@multiplier
  2096  035C  0849               	movf	??_TEMPADC+1,w
  2097  035D  00A6               	movwf	___wmul@multiplier+1
  2098  035E  300B               	movlw	11
  2099  035F  00A7               	movwf	___wmul@multiplicand
  2100  0360  3000               	movlw	0
  2101  0361  00A8               	movwf	___wmul@multiplicand+1
  2102  0362  158A  22D1  118A   	fcall	___wmul
  2103  0365  1283               	bcf	3,5	;RP0=0, select bank0
  2104  0366  1303               	bcf	3,6	;RP1=0, select bank0
  2105  0367  0825               	movf	?___wmul,w
  2106  0368  3E01               	addlw	1
  2107  0369  00AD               	movwf	___awtoft@c
  2108  036A  0826               	movf	?___wmul+1,w
  2109  036B  1803               	skipnc
  2110  036C  3E01               	addlw	1
  2111  036D  3EFF               	addlw	255
  2112  036E  00AE               	movwf	___awtoft@c+1
  2113  036F  158A  22F4  118A   	fcall	___awtoft
  2114  0372  1283               	bcf	3,5	;RP0=0, select bank0
  2115  0373  1303               	bcf	3,6	;RP1=0, select bank0
  2116  0374  082D               	movf	?___awtoft,w
  2117  0375  00D3               	movwf	TEMPADC@temmp2
  2118  0376  082E               	movf	?___awtoft+1,w
  2119  0377  00D4               	movwf	TEMPADC@temmp2+1
  2120  0378  082F               	movf	?___awtoft+2,w
  2121  0379  00D5               	movwf	TEMPADC@temmp2+2
  2122                           
  2123                           ;main.c: 227: temmp2=temmp2/temmmp;
  2124  037A  0851               	movf	TEMPADC@temmmp,w
  2125  037B  158A  2270  118A   	fcall	___lbtoft
  2126  037E  1283               	bcf	3,5	;RP0=0, select bank0
  2127  037F  1303               	bcf	3,6	;RP1=0, select bank0
  2128  0380  082D               	movf	?___lbtoft,w
  2129  0381  00B5               	movwf	___ftdiv@f2
  2130  0382  082E               	movf	?___lbtoft+1,w
  2131  0383  00B6               	movwf	___ftdiv@f2+1
  2132  0384  082F               	movf	?___lbtoft+2,w
  2133  0385  00B7               	movwf	___ftdiv@f2+2
  2134  0386  0853               	movf	TEMPADC@temmp2,w
  2135  0387  00B8               	movwf	___ftdiv@f1
  2136  0388  0854               	movf	TEMPADC@temmp2+1,w
  2137  0389  00B9               	movwf	___ftdiv@f1+1
  2138  038A  0855               	movf	TEMPADC@temmp2+2,w
  2139  038B  00BA               	movwf	___ftdiv@f1+2
  2140  038C  158A  25B9  118A   	fcall	___ftdiv
  2141  038F  1283               	bcf	3,5	;RP0=0, select bank0
  2142  0390  1303               	bcf	3,6	;RP1=0, select bank0
  2143  0391  0835               	movf	?___ftdiv,w
  2144  0392  00D3               	movwf	TEMPADC@temmp2
  2145  0393  0836               	movf	?___ftdiv+1,w
  2146  0394  00D4               	movwf	TEMPADC@temmp2+1
  2147  0395  0837               	movf	?___ftdiv+2,w
  2148  0396  00D5               	movwf	TEMPADC@temmp2+2
  2149                           
  2150                           ;main.c: 228: temmp2=temmp2/0xa;
  2151  0397  3000               	movlw	0
  2152  0398  00B5               	movwf	___ftdiv@f2
  2153  0399  3020               	movlw	32
  2154  039A  00B6               	movwf	___ftdiv@f2+1
  2155  039B  3041               	movlw	65
  2156  039C  00B7               	movwf	___ftdiv@f2+2
  2157  039D  0853               	movf	TEMPADC@temmp2,w
  2158  039E  00B8               	movwf	___ftdiv@f1
  2159  039F  0854               	movf	TEMPADC@temmp2+1,w
  2160  03A0  00B9               	movwf	___ftdiv@f1+1
  2161  03A1  0855               	movf	TEMPADC@temmp2+2,w
  2162  03A2  00BA               	movwf	___ftdiv@f1+2
  2163  03A3  158A  25B9  118A   	fcall	___ftdiv
  2164  03A6  1283               	bcf	3,5	;RP0=0, select bank0
  2165  03A7  1303               	bcf	3,6	;RP1=0, select bank0
  2166  03A8  0835               	movf	?___ftdiv,w
  2167  03A9  00D3               	movwf	TEMPADC@temmp2
  2168  03AA  0836               	movf	?___ftdiv+1,w
  2169  03AB  00D4               	movwf	TEMPADC@temmp2+1
  2170  03AC  0837               	movf	?___ftdiv+2,w
  2171  03AD  00D5               	movwf	TEMPADC@temmp2+2
  2172                           
  2173                           ;main.c: 229: temmp2=temmp2*0xff;
  2174  03AE  3000               	movlw	0
  2175  03AF  00AD               	movwf	___ftmul@f1
  2176  03B0  307F               	movlw	127
  2177  03B1  00AE               	movwf	___ftmul@f1+1
  2178  03B2  3043               	movlw	67
  2179  03B3  00AF               	movwf	___ftmul@f1+2
  2180  03B4  0853               	movf	TEMPADC@temmp2,w
  2181  03B5  00B0               	movwf	___ftmul@f2
  2182  03B6  0854               	movf	TEMPADC@temmp2+1,w
  2183  03B7  00B1               	movwf	___ftmul@f2+1
  2184  03B8  0855               	movf	TEMPADC@temmp2+2,w
  2185  03B9  00B2               	movwf	___ftmul@f2+2
  2186  03BA  118A  272B  118A   	fcall	___ftmul
  2187  03BD  1283               	bcf	3,5	;RP0=0, select bank0
  2188  03BE  1303               	bcf	3,6	;RP1=0, select bank0
  2189  03BF  082D               	movf	?___ftmul,w
  2190  03C0  00D3               	movwf	TEMPADC@temmp2
  2191  03C1  082E               	movf	?___ftmul+1,w
  2192  03C2  00D4               	movwf	TEMPADC@temmp2+1
  2193  03C3  082F               	movf	?___ftmul+2,w
  2194  03C4  00D5               	movwf	TEMPADC@temmp2+2
  2195                           
  2196                           ;main.c: 232: T[adcc]=fkTempTab[(int)(temmp2-20)];}
  2197  03C5  0853               	movf	TEMPADC@temmp2,w
  2198  03C6  00B0               	movwf	___ftadd@f2
  2199  03C7  0854               	movf	TEMPADC@temmp2+1,w
  2200  03C8  00B1               	movwf	___ftadd@f2+1
  2201  03C9  0855               	movf	TEMPADC@temmp2+2,w
  2202  03CA  00B2               	movwf	___ftadd@f2+2
  2203  03CB  3000               	movlw	0
  2204  03CC  00AD               	movwf	___ftadd@f1
  2205  03CD  30A0               	movlw	160
  2206  03CE  00AE               	movwf	___ftadd@f1+1
  2207  03CF  30C1               	movlw	193
  2208  03D0  00AF               	movwf	___ftadd@f1+2
  2209  03D1  118A  242C  118A   	fcall	___ftadd
  2210  03D4  1283               	bcf	3,5	;RP0=0, select bank0
  2211  03D5  1303               	bcf	3,6	;RP1=0, select bank0
  2212  03D6  082D               	movf	?___ftadd,w
  2213  03D7  00BA               	movwf	___fttol@f1
  2214  03D8  082E               	movf	?___ftadd+1,w
  2215  03D9  00BB               	movwf	___fttol@f1+1
  2216  03DA  082F               	movf	?___ftadd+2,w
  2217  03DB  00BC               	movwf	___fttol@f1+2
  2218  03DC  158A  252B  118A   	fcall	___fttol
  2219  03DF  1283               	bcf	3,5	;RP0=0, select bank0
  2220  03E0  1303               	bcf	3,6	;RP1=0, select bank0
  2221  03E1  083B               	movf	?___fttol+1,w
  2222  03E2  00C9               	movwf	??_TEMPADC+1
  2223  03E3  083A               	movf	?___fttol,w
  2224  03E4  00C8               	movwf	??_TEMPADC
  2225  03E5  1003               	clrc
  2226  03E6  0DC8               	rlf	??_TEMPADC,f
  2227  03E7  0DC9               	rlf	??_TEMPADC+1,f
  2228  03E8  3081               	movlw	high (_fkTempTab| (0+32768))
  2229  03E9  0749               	addwf	??_TEMPADC+1,w
  2230  03EA  00FF               	movwf	127
  2231  03EB  3012               	movlw	low (_fkTempTab| (0+32768))
  2232  03EC  0748               	addwf	??_TEMPADC,w
  2233  03ED  0084               	movwf	4
  2234  03EE  1803               	skipnc
  2235  03EF  0AFF               	incf	127,f
  2236  03F0  118A  2100  118A   	fcall	stringtab
  2237  03F3  00CA               	movwf	??_TEMPADC+2
  2238  03F4  118A  2100         	fcall	stringtab
  2239  03F6  00CB               	movwf	??_TEMPADC+3
  2240  03F7  0863               	movf	_adcc,w
  2241  03F8  00CC               	movwf	??_TEMPADC+4
  2242  03F9  074C               	addwf	??_TEMPADC+4,w
  2243  03FA  3EA0               	addlw	(low (_T| 0))& (0+255)
  2244  03FB  0084               	movwf	4
  2245  03FC  084A               	movf	??_TEMPADC+2,w
  2246  03FD  1383               	bcf	3,7	;select IRP bank1
  2247  03FE  0080               	movwf	0
  2248  03FF  0A84               	incf	4,f
  2249  0400  084B               	movf	??_TEMPADC+3,w
  2250  0401  0080               	movwf	0
  2251  0402  0008               	return
  2252  0403                     l2471:	
  2253                           
  2254                           ;main.c: 233: else
  2255                           ;main.c: 234: {T[adcc]=fkTempTab[(int)(uwAdcSample-20)]; }
  2256  0403  0852               	movf	TEMPADC@uwAdcSample,w
  2257  0404  00C8               	movwf	??_TEMPADC
  2258  0405  01C9               	clrf	??_TEMPADC+1
  2259  0406  1003               	clrc
  2260  0407  0DC8               	rlf	??_TEMPADC,f
  2261  0408  0DC9               	rlf	??_TEMPADC+1,f
  2262  0409  0848               	movf	??_TEMPADC,w
  2263  040A  3ED8               	addlw	216
  2264  040B  00CA               	movwf	??_TEMPADC+2
  2265  040C  0849               	movf	??_TEMPADC+1,w
  2266  040D  1803               	skipnc
  2267  040E  3E01               	addlw	1
  2268  040F  3EFF               	addlw	255
  2269  0410  00CB               	movwf	??_TEMPADC+3
  2270  0411  3081               	movlw	high (_fkTempTab| (0+32768))
  2271  0412  074B               	addwf	??_TEMPADC+3,w
  2272  0413  00FF               	movwf	127
  2273  0414  3012               	movlw	low (_fkTempTab| (0+32768))
  2274  0415  074A               	addwf	??_TEMPADC+2,w
  2275  0416  0084               	movwf	4
  2276  0417  1803               	skipnc
  2277  0418  0AFF               	incf	127,f
  2278  0419  118A  2100  118A   	fcall	stringtab
  2279  041C  00CC               	movwf	??_TEMPADC+4
  2280  041D  118A  2100         	fcall	stringtab
  2281  041F  00CD               	movwf	??_TEMPADC+5
  2282  0420  0863               	movf	_adcc,w
  2283  0421  00CE               	movwf	??_TEMPADC+6
  2284  0422  074E               	addwf	??_TEMPADC+6,w
  2285  0423  3EA0               	addlw	(low (_T| 0))& (0+255)
  2286  0424  0084               	movwf	4
  2287  0425  084C               	movf	??_TEMPADC+4,w
  2288  0426  1383               	bcf	3,7	;select IRP bank1
  2289  0427  0080               	movwf	0
  2290  0428  0A84               	incf	4,f
  2291  0429  084D               	movf	??_TEMPADC+5,w
  2292  042A  0080               	movwf	0
  2293  042B  0008               	return
  2294  042C                     __end_of_TEMPADC:	
  2295                           
  2296                           	psect	text5
  2297  0AD1                     __ptext5:	
  2298 ;; *************** function ___wmul *****************
  2299 ;; Defined at:
  2300 ;;		line 15 in file "G:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\Umul16.c"
  2301 ;; Parameters:    Size  Location     Type
  2302 ;;  multiplier      2    5[BANK0 ] unsigned int 
  2303 ;;  multiplicand    2    7[BANK0 ] unsigned int 
  2304 ;; Auto vars:     Size  Location     Type
  2305 ;;  product         2    9[BANK0 ] unsigned int 
  2306 ;; Return value:  Size  Location     Type
  2307 ;;                  2    5[BANK0 ] unsigned int 
  2308 ;; Registers used:
  2309 ;;		wreg, status,2, status,0
  2310 ;; Tracked objects:
  2311 ;;		On entry : 0/0
  2312 ;;		On exit  : 0/0
  2313 ;;		Unchanged: 0/0
  2314 ;; Data sizes:     COMMON   BANK0   BANK1
  2315 ;;      Params:         0       4       0
  2316 ;;      Locals:         0       2       0
  2317 ;;      Temps:          0       0       0
  2318 ;;      Totals:         0       6       0
  2319 ;;Total ram usage:        6 bytes
  2320 ;; Hardware stack levels used:    1
  2321 ;; Hardware stack levels required when called:    1
  2322 ;; This function calls:
  2323 ;;		Nothing
  2324 ;; This function is called by:
  2325 ;;		_TEMPADC
  2326 ;; This function uses a non-reentrant model
  2327 ;;
  2328                           
  2329                           
  2330                           ;psect for function ___wmul
  2331  0AD1                     ___wmul:	
  2332                           
  2333                           ;incstack = 0
  2334                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2335  0AD1  1283               	bcf	3,5	;RP0=0, select bank0
  2336  0AD2  1303               	bcf	3,6	;RP1=0, select bank0
  2337  0AD3  01A9               	clrf	___wmul@product
  2338  0AD4  01AA               	clrf	___wmul@product+1
  2339  0AD5                     l2013:	
  2340  0AD5  1C25               	btfss	___wmul@multiplier,0
  2341  0AD6  2ADD               	goto	l401
  2342  0AD7  0827               	movf	___wmul@multiplicand,w
  2343  0AD8  07A9               	addwf	___wmul@product,f
  2344  0AD9  1803               	skipnc
  2345  0ADA  0AAA               	incf	___wmul@product+1,f
  2346  0ADB  0828               	movf	___wmul@multiplicand+1,w
  2347  0ADC  07AA               	addwf	___wmul@product+1,f
  2348  0ADD                     l401:	
  2349  0ADD  3001               	movlw	1
  2350  0ADE                     u2775:	
  2351  0ADE  1003               	clrc
  2352  0ADF  0DA7               	rlf	___wmul@multiplicand,f
  2353  0AE0  0DA8               	rlf	___wmul@multiplicand+1,f
  2354  0AE1  3EFF               	addlw	-1
  2355  0AE2  1D03               	skipz
  2356  0AE3  2ADE               	goto	u2775
  2357  0AE4  3001               	movlw	1
  2358  0AE5                     u2785:	
  2359  0AE5  1003               	clrc
  2360  0AE6  0CA6               	rrf	___wmul@multiplier+1,f
  2361  0AE7  0CA5               	rrf	___wmul@multiplier,f
  2362  0AE8  3EFF               	addlw	-1
  2363  0AE9  1D03               	skipz
  2364  0AEA  2AE5               	goto	u2785
  2365  0AEB  0825               	movf	___wmul@multiplier,w
  2366  0AEC  0426               	iorwf	___wmul@multiplier+1,w
  2367  0AED  1D03               	btfss	3,2
  2368  0AEE  2AD5               	goto	l2013
  2369  0AEF  082A               	movf	___wmul@product+1,w
  2370  0AF0  00A6               	movwf	?___wmul+1
  2371  0AF1  0829               	movf	___wmul@product,w
  2372  0AF2  00A5               	movwf	?___wmul
  2373  0AF3  0008               	return
  2374  0AF4                     __end_of___wmul:	
  2375                           
  2376                           	psect	text6
  2377  0A70                     __ptext6:	
  2378 ;; *************** function ___lbtoft *****************
  2379 ;; Defined at:
  2380 ;;		line 27 in file "G:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\lbtoft.c"
  2381 ;; Parameters:    Size  Location     Type
  2382 ;;  c               1    wreg     unsigned char 
  2383 ;; Auto vars:     Size  Location     Type
  2384 ;;  c               1   20[BANK0 ] unsigned char 
  2385 ;; Return value:  Size  Location     Type
  2386 ;;                  3   13[BANK0 ] float 
  2387 ;; Registers used:
  2388 ;;		wreg, status,2, status,0, pclath, cstack
  2389 ;; Tracked objects:
  2390 ;;		On entry : 0/0
  2391 ;;		On exit  : 0/0
  2392 ;;		Unchanged: 0/0
  2393 ;; Data sizes:     COMMON   BANK0   BANK1
  2394 ;;      Params:         0       3       0
  2395 ;;      Locals:         0       1       0
  2396 ;;      Temps:          0       4       0
  2397 ;;      Totals:         0       8       0
  2398 ;;Total ram usage:        8 bytes
  2399 ;; Hardware stack levels used:    1
  2400 ;; Hardware stack levels required when called:    2
  2401 ;; This function calls:
  2402 ;;		___ftpack
  2403 ;; This function is called by:
  2404 ;;		_TEMPADC
  2405 ;; This function uses a non-reentrant model
  2406 ;;
  2407                           
  2408                           
  2409                           ;psect for function ___lbtoft
  2410  0A70                     ___lbtoft:	
  2411                           
  2412                           ;incstack = 0
  2413                           ; Regs used in ___lbtoft: [wreg+status,2+status,0+pclath+cstack]
  2414                           ;___lbtoft@c stored from wreg
  2415  0A70  1283               	bcf	3,5	;RP0=0, select bank0
  2416  0A71  1303               	bcf	3,6	;RP1=0, select bank0
  2417  0A72  00B4               	movwf	___lbtoft@c
  2418  0A73  0834               	movf	___lbtoft@c,w
  2419  0A74  00B0               	movwf	??___lbtoft
  2420  0A75  01B1               	clrf	??___lbtoft+1
  2421  0A76  01B2               	clrf	??___lbtoft+2
  2422  0A77  0830               	movf	??___lbtoft,w
  2423  0A78  00A5               	movwf	___ftpack@arg
  2424  0A79  0831               	movf	??___lbtoft+1,w
  2425  0A7A  00A6               	movwf	___ftpack@arg+1
  2426  0A7B  0832               	movf	??___lbtoft+2,w
  2427  0A7C  00A7               	movwf	___ftpack@arg+2
  2428  0A7D  308E               	movlw	142
  2429  0A7E  00B3               	movwf	??___lbtoft+3
  2430  0A7F  0833               	movf	??___lbtoft+3,w
  2431  0A80  00A8               	movwf	___ftpack@exp
  2432  0A81  01A9               	clrf	___ftpack@sign
  2433  0A82  158A  24BD         	fcall	___ftpack
  2434  0A84  1283               	bcf	3,5	;RP0=0, select bank0
  2435  0A85  1303               	bcf	3,6	;RP1=0, select bank0
  2436  0A86  0825               	movf	?___ftpack,w
  2437  0A87  00AD               	movwf	?___lbtoft
  2438  0A88  0826               	movf	?___ftpack+1,w
  2439  0A89  00AE               	movwf	?___lbtoft+1
  2440  0A8A  0827               	movf	?___ftpack+2,w
  2441  0A8B  00AF               	movwf	?___lbtoft+2
  2442  0A8C  0008               	return
  2443  0A8D                     __end_of___lbtoft:	
  2444                           
  2445                           	psect	text7
  2446  0D2B                     __ptext7:	
  2447 ;; *************** function ___fttol *****************
  2448 ;; Defined at:
  2449 ;;		line 44 in file "G:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\fttol.c"
  2450 ;; Parameters:    Size  Location     Type
  2451 ;;  f1              3   26[BANK0 ] float 
  2452 ;; Auto vars:     Size  Location     Type
  2453 ;;  lval            4   35[BANK0 ] unsigned long 
  2454 ;;  exp1            1   39[BANK0 ] unsigned char 
  2455 ;;  sign1           1   34[BANK0 ] unsigned char 
  2456 ;; Return value:  Size  Location     Type
  2457 ;;                  4   26[BANK0 ] long 
  2458 ;; Registers used:
  2459 ;;		wreg, status,2, status,0
  2460 ;; Tracked objects:
  2461 ;;		On entry : 0/0
  2462 ;;		On exit  : 0/0
  2463 ;;		Unchanged: 0/0
  2464 ;; Data sizes:     COMMON   BANK0   BANK1
  2465 ;;      Params:         0       4       0
  2466 ;;      Locals:         0       6       0
  2467 ;;      Temps:          0       4       0
  2468 ;;      Totals:         0      14       0
  2469 ;;Total ram usage:       14 bytes
  2470 ;; Hardware stack levels used:    1
  2471 ;; Hardware stack levels required when called:    1
  2472 ;; This function calls:
  2473 ;;		Nothing
  2474 ;; This function is called by:
  2475 ;;		_TEMPADC
  2476 ;; This function uses a non-reentrant model
  2477 ;;
  2478                           
  2479                           
  2480                           ;psect for function ___fttol
  2481  0D2B                     ___fttol:	
  2482                           
  2483                           ;incstack = 0
  2484                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  2485  0D2B  1283               	bcf	3,5	;RP0=0, select bank0
  2486  0D2C  1303               	bcf	3,6	;RP1=0, select bank0
  2487  0D2D  083A               	movf	___fttol@f1,w
  2488  0D2E  00BE               	movwf	??___fttol
  2489  0D2F  083B               	movf	___fttol@f1+1,w
  2490  0D30  00BF               	movwf	??___fttol+1
  2491  0D31  083C               	movf	___fttol@f1+2,w
  2492  0D32  00C0               	movwf	??___fttol+2
  2493  0D33  1003               	clrc
  2494  0D34  0D3F               	rlf	??___fttol+1,w
  2495  0D35  0D40               	rlf	??___fttol+2,w
  2496  0D36  00C1               	movwf	??___fttol+3
  2497  0D37  0841               	movf	??___fttol+3,w
  2498  0D38  00C7               	movwf	___fttol@exp1
  2499  0D39  0847               	movf	___fttol@exp1,w
  2500  0D3A  1D03               	btfss	3,2
  2501  0D3B  2D45               	goto	l2249
  2502  0D3C  3000               	movlw	0
  2503  0D3D  00BD               	movwf	?___fttol+3
  2504  0D3E  3000               	movlw	0
  2505  0D3F  00BC               	movwf	?___fttol+2
  2506  0D40  3000               	movlw	0
  2507  0D41  00BB               	movwf	?___fttol+1
  2508  0D42  3000               	movlw	0
  2509  0D43  00BA               	movwf	?___fttol
  2510  0D44  0008               	return
  2511  0D45                     l2249:	
  2512  0D45  083A               	movf	___fttol@f1,w
  2513  0D46  00BE               	movwf	??___fttol
  2514  0D47  083B               	movf	___fttol@f1+1,w
  2515  0D48  00BF               	movwf	??___fttol+1
  2516  0D49  083C               	movf	___fttol@f1+2,w
  2517  0D4A  00C0               	movwf	??___fttol+2
  2518  0D4B  3017               	movlw	23
  2519  0D4C                     u3385:	
  2520  0D4C  1003               	clrc
  2521  0D4D  0CC0               	rrf	??___fttol+2,f
  2522  0D4E  0CBF               	rrf	??___fttol+1,f
  2523  0D4F  0CBE               	rrf	??___fttol,f
  2524  0D50  3EFF               	addlw	-1
  2525  0D51  1D03               	skipz
  2526  0D52  2D4C               	goto	u3385
  2527  0D53  083E               	movf	??___fttol,w
  2528  0D54  00C1               	movwf	??___fttol+3
  2529  0D55  0841               	movf	??___fttol+3,w
  2530  0D56  00C2               	movwf	___fttol@sign1
  2531  0D57  17BB               	bsf	___fttol@f1+1,7
  2532  0D58  30FF               	movlw	255
  2533  0D59  05BA               	andwf	___fttol@f1,f
  2534  0D5A  30FF               	movlw	255
  2535  0D5B  05BB               	andwf	___fttol@f1+1,f
  2536  0D5C  3000               	movlw	0
  2537  0D5D  05BC               	andwf	___fttol@f1+2,f
  2538  0D5E  083A               	movf	___fttol@f1,w
  2539  0D5F  00C3               	movwf	___fttol@lval
  2540  0D60  083B               	movf	___fttol@f1+1,w
  2541  0D61  00C4               	movwf	___fttol@lval+1
  2542  0D62  083C               	movf	___fttol@f1+2,w
  2543  0D63  00C5               	movwf	___fttol@lval+2
  2544  0D64  01C6               	clrf	___fttol@lval+3
  2545  0D65  308E               	movlw	142
  2546  0D66  02C7               	subwf	___fttol@exp1,f
  2547  0D67  1FC7               	btfss	___fttol@exp1,7
  2548  0D68  2D87               	goto	l2269
  2549  0D69  0847               	movf	___fttol@exp1,w
  2550  0D6A  3A80               	xorlw	128
  2551  0D6B  3E8F               	addlw	143
  2552  0D6C  1803               	skipnc
  2553  0D6D  2D77               	goto	l2267
  2554  0D6E  3000               	movlw	0
  2555  0D6F  00BD               	movwf	?___fttol+3
  2556  0D70  3000               	movlw	0
  2557  0D71  00BC               	movwf	?___fttol+2
  2558  0D72  3000               	movlw	0
  2559  0D73  00BB               	movwf	?___fttol+1
  2560  0D74  3000               	movlw	0
  2561  0D75  00BA               	movwf	?___fttol
  2562  0D76  0008               	return
  2563  0D77                     l2267:	
  2564  0D77  3001               	movlw	1
  2565  0D78                     u3415:	
  2566  0D78  1003               	clrc
  2567  0D79  0CC6               	rrf	___fttol@lval+3,f
  2568  0D7A  0CC5               	rrf	___fttol@lval+2,f
  2569  0D7B  0CC4               	rrf	___fttol@lval+1,f
  2570  0D7C  0CC3               	rrf	___fttol@lval,f
  2571  0D7D  3EFF               	addlw	-1
  2572  0D7E  1D03               	skipz
  2573  0D7F  2D78               	goto	u3415
  2574  0D80  3001               	movlw	1
  2575  0D81  00BE               	movwf	??___fttol
  2576  0D82  083E               	movf	??___fttol,w
  2577  0D83  07C7               	addwf	___fttol@exp1,f
  2578  0D84  1903               	btfsc	3,2
  2579  0D85  2DA2               	goto	l2277
  2580  0D86  2D77               	goto	l2267
  2581  0D87                     l2269:	
  2582  0D87  3018               	movlw	24
  2583  0D88  0247               	subwf	___fttol@exp1,w
  2584  0D89  1C03               	skipc
  2585  0D8A  2D9F               	goto	l657
  2586  0D8B  3000               	movlw	0
  2587  0D8C  00BD               	movwf	?___fttol+3
  2588  0D8D  3000               	movlw	0
  2589  0D8E  00BC               	movwf	?___fttol+2
  2590  0D8F  3000               	movlw	0
  2591  0D90  00BB               	movwf	?___fttol+1
  2592  0D91  3000               	movlw	0
  2593  0D92  00BA               	movwf	?___fttol
  2594  0D93  0008               	return
  2595  0D94                     l2275:	
  2596  0D94  3001               	movlw	1
  2597  0D95  00BE               	movwf	??___fttol
  2598  0D96                     u3445:	
  2599  0D96  1003               	clrc
  2600  0D97  0DC3               	rlf	___fttol@lval,f
  2601  0D98  0DC4               	rlf	___fttol@lval+1,f
  2602  0D99  0DC5               	rlf	___fttol@lval+2,f
  2603  0D9A  0DC6               	rlf	___fttol@lval+3,f
  2604  0D9B  0BBE               	decfsz	??___fttol,f
  2605  0D9C  2D96               	goto	u3445
  2606  0D9D  3001               	movlw	1
  2607  0D9E  02C7               	subwf	___fttol@exp1,f
  2608  0D9F                     l657:	
  2609  0D9F  0847               	movf	___fttol@exp1,w
  2610  0DA0  1D03               	btfss	3,2
  2611  0DA1  2D94               	goto	l2275
  2612  0DA2                     l2277:	
  2613  0DA2  0842               	movf	___fttol@sign1,w
  2614  0DA3  1903               	btfsc	3,2
  2615  0DA4  2DB0               	goto	l2281
  2616  0DA5  09C3               	comf	___fttol@lval,f
  2617  0DA6  09C4               	comf	___fttol@lval+1,f
  2618  0DA7  09C5               	comf	___fttol@lval+2,f
  2619  0DA8  09C6               	comf	___fttol@lval+3,f
  2620  0DA9  0AC3               	incf	___fttol@lval,f
  2621  0DAA  1903               	skipnz
  2622  0DAB  0AC4               	incf	___fttol@lval+1,f
  2623  0DAC  1903               	skipnz
  2624  0DAD  0AC5               	incf	___fttol@lval+2,f
  2625  0DAE  1903               	skipnz
  2626  0DAF  0AC6               	incf	___fttol@lval+3,f
  2627  0DB0                     l2281:	
  2628  0DB0  0846               	movf	___fttol@lval+3,w
  2629  0DB1  00BD               	movwf	?___fttol+3
  2630  0DB2  0845               	movf	___fttol@lval+2,w
  2631  0DB3  00BC               	movwf	?___fttol+2
  2632  0DB4  0844               	movf	___fttol@lval+1,w
  2633  0DB5  00BB               	movwf	?___fttol+1
  2634  0DB6  0843               	movf	___fttol@lval,w
  2635  0DB7  00BA               	movwf	?___fttol
  2636  0DB8  0008               	return
  2637  0DB9                     __end_of___fttol:	
  2638                           
  2639                           	psect	text8
  2640  072B                     __ptext8:	
  2641 ;; *************** function ___ftmul *****************
  2642 ;; Defined at:
  2643 ;;		line 62 in file "G:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\ftmul.c"
  2644 ;; Parameters:    Size  Location     Type
  2645 ;;  f1              3   13[BANK0 ] float 
  2646 ;;  f2              3   16[BANK0 ] float 
  2647 ;; Auto vars:     Size  Location     Type
  2648 ;;  f3_as_produc    3   24[BANK0 ] unsigned um
  2649 ;;  sign            1   28[BANK0 ] unsigned char 
  2650 ;;  cntr            1   27[BANK0 ] unsigned char 
  2651 ;;  exp             1   23[BANK0 ] unsigned char 
  2652 ;; Return value:  Size  Location     Type
  2653 ;;                  3   13[BANK0 ] float 
  2654 ;; Registers used:
  2655 ;;		wreg, status,2, status,0, pclath, cstack
  2656 ;; Tracked objects:
  2657 ;;		On entry : 0/0
  2658 ;;		On exit  : 0/0
  2659 ;;		Unchanged: 0/0
  2660 ;; Data sizes:     COMMON   BANK0   BANK1
  2661 ;;      Params:         0       6       0
  2662 ;;      Locals:         0       6       0
  2663 ;;      Temps:          0       4       0
  2664 ;;      Totals:         0      16       0
  2665 ;;Total ram usage:       16 bytes
  2666 ;; Hardware stack levels used:    1
  2667 ;; Hardware stack levels required when called:    2
  2668 ;; This function calls:
  2669 ;;		___ftpack
  2670 ;; This function is called by:
  2671 ;;		_TEMPADC
  2672 ;; This function uses a non-reentrant model
  2673 ;;
  2674                           
  2675                           
  2676                           ;psect for function ___ftmul
  2677  072B                     ___ftmul:	
  2678                           
  2679                           ;incstack = 0
  2680                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  2681  072B  1283               	bcf	3,5	;RP0=0, select bank0
  2682  072C  1303               	bcf	3,6	;RP1=0, select bank0
  2683  072D  082D               	movf	___ftmul@f1,w
  2684  072E  00B3               	movwf	??___ftmul
  2685  072F  082E               	movf	___ftmul@f1+1,w
  2686  0730  00B4               	movwf	??___ftmul+1
  2687  0731  082F               	movf	___ftmul@f1+2,w
  2688  0732  00B5               	movwf	??___ftmul+2
  2689  0733  1003               	clrc
  2690  0734  0D34               	rlf	??___ftmul+1,w
  2691  0735  0D35               	rlf	??___ftmul+2,w
  2692  0736  00B6               	movwf	??___ftmul+3
  2693  0737  0836               	movf	??___ftmul+3,w
  2694  0738  00B7               	movwf	___ftmul@exp
  2695  0739  0837               	movf	___ftmul@exp,w
  2696  073A  1D03               	btfss	3,2
  2697  073B  2F43               	goto	l2199
  2698  073C  3000               	movlw	0
  2699  073D  00AD               	movwf	?___ftmul
  2700  073E  3000               	movlw	0
  2701  073F  00AE               	movwf	?___ftmul+1
  2702  0740  3000               	movlw	0
  2703  0741  00AF               	movwf	?___ftmul+2
  2704  0742  0008               	return
  2705  0743                     l2199:	
  2706  0743  0830               	movf	___ftmul@f2,w
  2707  0744  00B3               	movwf	??___ftmul
  2708  0745  0831               	movf	___ftmul@f2+1,w
  2709  0746  00B4               	movwf	??___ftmul+1
  2710  0747  0832               	movf	___ftmul@f2+2,w
  2711  0748  00B5               	movwf	??___ftmul+2
  2712  0749  1003               	clrc
  2713  074A  0D34               	rlf	??___ftmul+1,w
  2714  074B  0D35               	rlf	??___ftmul+2,w
  2715  074C  00B6               	movwf	??___ftmul+3
  2716  074D  0836               	movf	??___ftmul+3,w
  2717  074E  00BC               	movwf	___ftmul@sign
  2718  074F  083C               	movf	___ftmul@sign,w
  2719  0750  1D03               	btfss	3,2
  2720  0751  2F59               	goto	l2205
  2721  0752  3000               	movlw	0
  2722  0753  00AD               	movwf	?___ftmul
  2723  0754  3000               	movlw	0
  2724  0755  00AE               	movwf	?___ftmul+1
  2725  0756  3000               	movlw	0
  2726  0757  00AF               	movwf	?___ftmul+2
  2727  0758  0008               	return
  2728  0759                     l2205:	
  2729  0759  083C               	movf	___ftmul@sign,w
  2730  075A  3E7B               	addlw	123
  2731  075B  00B3               	movwf	??___ftmul
  2732  075C  0833               	movf	??___ftmul,w
  2733  075D  07B7               	addwf	___ftmul@exp,f
  2734  075E  082D               	movf	___ftmul@f1,w
  2735  075F  00B3               	movwf	??___ftmul
  2736  0760  082E               	movf	___ftmul@f1+1,w
  2737  0761  00B4               	movwf	??___ftmul+1
  2738  0762  082F               	movf	___ftmul@f1+2,w
  2739  0763  00B5               	movwf	??___ftmul+2
  2740  0764  3010               	movlw	16
  2741  0765                     u3255:	
  2742  0765  1003               	clrc
  2743  0766  0CB5               	rrf	??___ftmul+2,f
  2744  0767  0CB4               	rrf	??___ftmul+1,f
  2745  0768  0CB3               	rrf	??___ftmul,f
  2746  0769  3EFF               	addlw	-1
  2747  076A  1D03               	skipz
  2748  076B  2F65               	goto	u3255
  2749  076C  0833               	movf	??___ftmul,w
  2750  076D  00B6               	movwf	??___ftmul+3
  2751  076E  0836               	movf	??___ftmul+3,w
  2752  076F  00BC               	movwf	___ftmul@sign
  2753  0770  0830               	movf	___ftmul@f2,w
  2754  0771  00B3               	movwf	??___ftmul
  2755  0772  0831               	movf	___ftmul@f2+1,w
  2756  0773  00B4               	movwf	??___ftmul+1
  2757  0774  0832               	movf	___ftmul@f2+2,w
  2758  0775  00B5               	movwf	??___ftmul+2
  2759  0776  3010               	movlw	16
  2760  0777                     u3265:	
  2761  0777  1003               	clrc
  2762  0778  0CB5               	rrf	??___ftmul+2,f
  2763  0779  0CB4               	rrf	??___ftmul+1,f
  2764  077A  0CB3               	rrf	??___ftmul,f
  2765  077B  3EFF               	addlw	-1
  2766  077C  1D03               	skipz
  2767  077D  2F77               	goto	u3265
  2768  077E  0833               	movf	??___ftmul,w
  2769  077F  00B6               	movwf	??___ftmul+3
  2770  0780  0836               	movf	??___ftmul+3,w
  2771  0781  06BC               	xorwf	___ftmul@sign,f
  2772  0782  3080               	movlw	128
  2773  0783  00B3               	movwf	??___ftmul
  2774  0784  0833               	movf	??___ftmul,w
  2775  0785  05BC               	andwf	___ftmul@sign,f
  2776  0786  17AE               	bsf	___ftmul@f1+1,7
  2777  0787  17B1               	bsf	___ftmul@f2+1,7
  2778  0788  30FF               	movlw	255
  2779  0789  05B0               	andwf	___ftmul@f2,f
  2780  078A  30FF               	movlw	255
  2781  078B  05B1               	andwf	___ftmul@f2+1,f
  2782  078C  3000               	movlw	0
  2783  078D  05B2               	andwf	___ftmul@f2+2,f
  2784  078E  3000               	movlw	0
  2785  078F  00B8               	movwf	___ftmul@f3_as_product
  2786  0790  3000               	movlw	0
  2787  0791  00B9               	movwf	___ftmul@f3_as_product+1
  2788  0792  3000               	movlw	0
  2789  0793  00BA               	movwf	___ftmul@f3_as_product+2
  2790  0794  3007               	movlw	7
  2791  0795  00B3               	movwf	??___ftmul
  2792  0796  0833               	movf	??___ftmul,w
  2793  0797  00BB               	movwf	___ftmul@cntr
  2794  0798                     l2217:	
  2795  0798  1C2D               	btfss	___ftmul@f1,0
  2796  0799  2FA8               	goto	l2221
  2797  079A  0830               	movf	___ftmul@f2,w
  2798  079B  07B8               	addwf	___ftmul@f3_as_product,f
  2799  079C  0831               	movf	___ftmul@f2+1,w
  2800  079D  1103               	clrz
  2801  079E  1803               	skipnc
  2802  079F  0A31               	incf	___ftmul@f2+1,w
  2803  07A0  1D03               	btfss	3,2
  2804  07A1  07B9               	addwf	___ftmul@f3_as_product+1,f
  2805  07A2  0832               	movf	___ftmul@f2+2,w
  2806  07A3  1103               	clrz
  2807  07A4  1803               	skipnc
  2808  07A5  0A32               	incf	___ftmul@f2+2,w
  2809  07A6  1D03               	btfss	3,2
  2810  07A7  07BA               	addwf	___ftmul@f3_as_product+2,f
  2811  07A8                     l2221:	
  2812  07A8  3001               	movlw	1
  2813  07A9                     u3295:	
  2814  07A9  1003               	clrc
  2815  07AA  0CAF               	rrf	___ftmul@f1+2,f
  2816  07AB  0CAE               	rrf	___ftmul@f1+1,f
  2817  07AC  0CAD               	rrf	___ftmul@f1,f
  2818  07AD  3EFF               	addlw	-1
  2819  07AE  1D03               	skipz
  2820  07AF  2FA9               	goto	u3295
  2821  07B0  3001               	movlw	1
  2822  07B1                     u3305:	
  2823  07B1  1003               	clrc
  2824  07B2  0DB0               	rlf	___ftmul@f2,f
  2825  07B3  0DB1               	rlf	___ftmul@f2+1,f
  2826  07B4  0DB2               	rlf	___ftmul@f2+2,f
  2827  07B5  3EFF               	addlw	-1
  2828  07B6  1D03               	skipz
  2829  07B7  2FB1               	goto	u3305
  2830  07B8  3001               	movlw	1
  2831  07B9  02BB               	subwf	___ftmul@cntr,f
  2832  07BA  1D03               	btfss	3,2
  2833  07BB  2F98               	goto	l2217
  2834  07BC  3009               	movlw	9
  2835  07BD  00B3               	movwf	??___ftmul
  2836  07BE  0833               	movf	??___ftmul,w
  2837  07BF  00BB               	movwf	___ftmul@cntr
  2838  07C0                     l2229:	
  2839  07C0  1C2D               	btfss	___ftmul@f1,0
  2840  07C1  2FD0               	goto	l2233
  2841  07C2  0830               	movf	___ftmul@f2,w
  2842  07C3  07B8               	addwf	___ftmul@f3_as_product,f
  2843  07C4  0831               	movf	___ftmul@f2+1,w
  2844  07C5  1103               	clrz
  2845  07C6  1803               	skipnc
  2846  07C7  0A31               	incf	___ftmul@f2+1,w
  2847  07C8  1D03               	btfss	3,2
  2848  07C9  07B9               	addwf	___ftmul@f3_as_product+1,f
  2849  07CA  0832               	movf	___ftmul@f2+2,w
  2850  07CB  1103               	clrz
  2851  07CC  1803               	skipnc
  2852  07CD  0A32               	incf	___ftmul@f2+2,w
  2853  07CE  1D03               	btfss	3,2
  2854  07CF  07BA               	addwf	___ftmul@f3_as_product+2,f
  2855  07D0                     l2233:	
  2856  07D0  3001               	movlw	1
  2857  07D1                     u3345:	
  2858  07D1  1003               	clrc
  2859  07D2  0CAF               	rrf	___ftmul@f1+2,f
  2860  07D3  0CAE               	rrf	___ftmul@f1+1,f
  2861  07D4  0CAD               	rrf	___ftmul@f1,f
  2862  07D5  3EFF               	addlw	-1
  2863  07D6  1D03               	skipz
  2864  07D7  2FD1               	goto	u3345
  2865  07D8  3001               	movlw	1
  2866  07D9                     u3355:	
  2867  07D9  1003               	clrc
  2868  07DA  0CBA               	rrf	___ftmul@f3_as_product+2,f
  2869  07DB  0CB9               	rrf	___ftmul@f3_as_product+1,f
  2870  07DC  0CB8               	rrf	___ftmul@f3_as_product,f
  2871  07DD  3EFF               	addlw	-1
  2872  07DE  1D03               	skipz
  2873  07DF  2FD9               	goto	u3355
  2874  07E0  3001               	movlw	1
  2875  07E1  02BB               	subwf	___ftmul@cntr,f
  2876  07E2  1D03               	btfss	3,2
  2877  07E3  2FC0               	goto	l2229
  2878  07E4  0838               	movf	___ftmul@f3_as_product,w
  2879  07E5  00A5               	movwf	___ftpack@arg
  2880  07E6  0839               	movf	___ftmul@f3_as_product+1,w
  2881  07E7  00A6               	movwf	___ftpack@arg+1
  2882  07E8  083A               	movf	___ftmul@f3_as_product+2,w
  2883  07E9  00A7               	movwf	___ftpack@arg+2
  2884  07EA  0837               	movf	___ftmul@exp,w
  2885  07EB  00B3               	movwf	??___ftmul
  2886  07EC  0833               	movf	??___ftmul,w
  2887  07ED  00A8               	movwf	___ftpack@exp
  2888  07EE  083C               	movf	___ftmul@sign,w
  2889  07EF  00B4               	movwf	??___ftmul+1
  2890  07F0  0834               	movf	??___ftmul+1,w
  2891  07F1  00A9               	movwf	___ftpack@sign
  2892  07F2  158A  24BD         	fcall	___ftpack
  2893  07F4  1283               	bcf	3,5	;RP0=0, select bank0
  2894  07F5  1303               	bcf	3,6	;RP1=0, select bank0
  2895  07F6  0825               	movf	?___ftpack,w
  2896  07F7  00AD               	movwf	?___ftmul
  2897  07F8  0826               	movf	?___ftpack+1,w
  2898  07F9  00AE               	movwf	?___ftmul+1
  2899  07FA  0827               	movf	?___ftpack+2,w
  2900  07FB  00AF               	movwf	?___ftmul+2
  2901  07FC  0008               	return
  2902  07FD                     __end_of___ftmul:	
  2903                           
  2904                           	psect	text9
  2905  0DB9                     __ptext9:	
  2906 ;; *************** function ___ftdiv *****************
  2907 ;; Defined at:
  2908 ;;		line 56 in file "G:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\ftdiv.c"
  2909 ;; Parameters:    Size  Location     Type
  2910 ;;  f2              3   21[BANK0 ] float 
  2911 ;;  f1              3   24[BANK0 ] float 
  2912 ;; Auto vars:     Size  Location     Type
  2913 ;;  f3              3   32[BANK0 ] float 
  2914 ;;  sign            1   36[BANK0 ] unsigned char 
  2915 ;;  exp             1   35[BANK0 ] unsigned char 
  2916 ;;  cntr            1   31[BANK0 ] unsigned char 
  2917 ;; Return value:  Size  Location     Type
  2918 ;;                  3   21[BANK0 ] float 
  2919 ;; Registers used:
  2920 ;;		wreg, status,2, status,0, pclath, cstack
  2921 ;; Tracked objects:
  2922 ;;		On entry : 0/0
  2923 ;;		On exit  : 0/0
  2924 ;;		Unchanged: 0/0
  2925 ;; Data sizes:     COMMON   BANK0   BANK1
  2926 ;;      Params:         0       6       0
  2927 ;;      Locals:         0       6       0
  2928 ;;      Temps:          0       4       0
  2929 ;;      Totals:         0      16       0
  2930 ;;Total ram usage:       16 bytes
  2931 ;; Hardware stack levels used:    1
  2932 ;; Hardware stack levels required when called:    2
  2933 ;; This function calls:
  2934 ;;		___ftpack
  2935 ;; This function is called by:
  2936 ;;		_TEMPADC
  2937 ;; This function uses a non-reentrant model
  2938 ;;
  2939                           
  2940                           
  2941                           ;psect for function ___ftdiv
  2942  0DB9                     ___ftdiv:	
  2943                           
  2944                           ;incstack = 0
  2945                           ; Regs used in ___ftdiv: [wreg+status,2+status,0+pclath+cstack]
  2946  0DB9  1283               	bcf	3,5	;RP0=0, select bank0
  2947  0DBA  1303               	bcf	3,6	;RP1=0, select bank0
  2948  0DBB  0838               	movf	___ftdiv@f1,w
  2949  0DBC  00BB               	movwf	??___ftdiv
  2950  0DBD  0839               	movf	___ftdiv@f1+1,w
  2951  0DBE  00BC               	movwf	??___ftdiv+1
  2952  0DBF  083A               	movf	___ftdiv@f1+2,w
  2953  0DC0  00BD               	movwf	??___ftdiv+2
  2954  0DC1  1003               	clrc
  2955  0DC2  0D3C               	rlf	??___ftdiv+1,w
  2956  0DC3  0D3D               	rlf	??___ftdiv+2,w
  2957  0DC4  00BE               	movwf	??___ftdiv+3
  2958  0DC5  083E               	movf	??___ftdiv+3,w
  2959  0DC6  00C3               	movwf	___ftdiv@exp
  2960  0DC7  0843               	movf	___ftdiv@exp,w
  2961  0DC8  1D03               	btfss	3,2
  2962  0DC9  2DD1               	goto	l2157
  2963  0DCA  3000               	movlw	0
  2964  0DCB  00B5               	movwf	?___ftdiv
  2965  0DCC  3000               	movlw	0
  2966  0DCD  00B6               	movwf	?___ftdiv+1
  2967  0DCE  3000               	movlw	0
  2968  0DCF  00B7               	movwf	?___ftdiv+2
  2969  0DD0  0008               	return
  2970  0DD1                     l2157:	
  2971  0DD1  0835               	movf	___ftdiv@f2,w
  2972  0DD2  00BB               	movwf	??___ftdiv
  2973  0DD3  0836               	movf	___ftdiv@f2+1,w
  2974  0DD4  00BC               	movwf	??___ftdiv+1
  2975  0DD5  0837               	movf	___ftdiv@f2+2,w
  2976  0DD6  00BD               	movwf	??___ftdiv+2
  2977  0DD7  1003               	clrc
  2978  0DD8  0D3C               	rlf	??___ftdiv+1,w
  2979  0DD9  0D3D               	rlf	??___ftdiv+2,w
  2980  0DDA  00BE               	movwf	??___ftdiv+3
  2981  0DDB  083E               	movf	??___ftdiv+3,w
  2982  0DDC  00C4               	movwf	___ftdiv@sign
  2983  0DDD  0844               	movf	___ftdiv@sign,w
  2984  0DDE  1D03               	btfss	3,2
  2985  0DDF  2DE7               	goto	l2163
  2986  0DE0  3000               	movlw	0
  2987  0DE1  00B5               	movwf	?___ftdiv
  2988  0DE2  3000               	movlw	0
  2989  0DE3  00B6               	movwf	?___ftdiv+1
  2990  0DE4  3000               	movlw	0
  2991  0DE5  00B7               	movwf	?___ftdiv+2
  2992  0DE6  0008               	return
  2993  0DE7                     l2163:	
  2994  0DE7  3000               	movlw	0
  2995  0DE8  00C0               	movwf	___ftdiv@f3
  2996  0DE9  3000               	movlw	0
  2997  0DEA  00C1               	movwf	___ftdiv@f3+1
  2998  0DEB  3000               	movlw	0
  2999  0DEC  00C2               	movwf	___ftdiv@f3+2
  3000  0DED  3089               	movlw	137
  3001  0DEE  0744               	addwf	___ftdiv@sign,w
  3002  0DEF  00BB               	movwf	??___ftdiv
  3003  0DF0  083B               	movf	??___ftdiv,w
  3004  0DF1  02C3               	subwf	___ftdiv@exp,f
  3005  0DF2  0838               	movf	___ftdiv@f1,w
  3006  0DF3  00BB               	movwf	??___ftdiv
  3007  0DF4  0839               	movf	___ftdiv@f1+1,w
  3008  0DF5  00BC               	movwf	??___ftdiv+1
  3009  0DF6  083A               	movf	___ftdiv@f1+2,w
  3010  0DF7  00BD               	movwf	??___ftdiv+2
  3011  0DF8  3010               	movlw	16
  3012  0DF9                     u3175:	
  3013  0DF9  1003               	clrc
  3014  0DFA  0CBD               	rrf	??___ftdiv+2,f
  3015  0DFB  0CBC               	rrf	??___ftdiv+1,f
  3016  0DFC  0CBB               	rrf	??___ftdiv,f
  3017  0DFD  3EFF               	addlw	-1
  3018  0DFE  1D03               	skipz
  3019  0DFF  2DF9               	goto	u3175
  3020  0E00  083B               	movf	??___ftdiv,w
  3021  0E01  00BE               	movwf	??___ftdiv+3
  3022  0E02  083E               	movf	??___ftdiv+3,w
  3023  0E03  00C4               	movwf	___ftdiv@sign
  3024  0E04  0835               	movf	___ftdiv@f2,w
  3025  0E05  00BB               	movwf	??___ftdiv
  3026  0E06  0836               	movf	___ftdiv@f2+1,w
  3027  0E07  00BC               	movwf	??___ftdiv+1
  3028  0E08  0837               	movf	___ftdiv@f2+2,w
  3029  0E09  00BD               	movwf	??___ftdiv+2
  3030  0E0A  3010               	movlw	16
  3031  0E0B                     u3185:	
  3032  0E0B  1003               	clrc
  3033  0E0C  0CBD               	rrf	??___ftdiv+2,f
  3034  0E0D  0CBC               	rrf	??___ftdiv+1,f
  3035  0E0E  0CBB               	rrf	??___ftdiv,f
  3036  0E0F  3EFF               	addlw	-1
  3037  0E10  1D03               	skipz
  3038  0E11  2E0B               	goto	u3185
  3039  0E12  083B               	movf	??___ftdiv,w
  3040  0E13  00BE               	movwf	??___ftdiv+3
  3041  0E14  083E               	movf	??___ftdiv+3,w
  3042  0E15  06C4               	xorwf	___ftdiv@sign,f
  3043  0E16  3080               	movlw	128
  3044  0E17  00BB               	movwf	??___ftdiv
  3045  0E18  083B               	movf	??___ftdiv,w
  3046  0E19  05C4               	andwf	___ftdiv@sign,f
  3047  0E1A  17B9               	bsf	___ftdiv@f1+1,7
  3048  0E1B  30FF               	movlw	255
  3049  0E1C  05B8               	andwf	___ftdiv@f1,f
  3050  0E1D  30FF               	movlw	255
  3051  0E1E  05B9               	andwf	___ftdiv@f1+1,f
  3052  0E1F  3000               	movlw	0
  3053  0E20  05BA               	andwf	___ftdiv@f1+2,f
  3054  0E21  17B6               	bsf	___ftdiv@f2+1,7
  3055  0E22  30FF               	movlw	255
  3056  0E23  05B5               	andwf	___ftdiv@f2,f
  3057  0E24  30FF               	movlw	255
  3058  0E25  05B6               	andwf	___ftdiv@f2+1,f
  3059  0E26  3000               	movlw	0
  3060  0E27  05B7               	andwf	___ftdiv@f2+2,f
  3061  0E28  3018               	movlw	24
  3062  0E29  00BB               	movwf	??___ftdiv
  3063  0E2A  083B               	movf	??___ftdiv,w
  3064  0E2B  00BF               	movwf	___ftdiv@cntr
  3065  0E2C                     l2177:	
  3066  0E2C  3001               	movlw	1
  3067  0E2D                     u3195:	
  3068  0E2D  1003               	clrc
  3069  0E2E  0DC0               	rlf	___ftdiv@f3,f
  3070  0E2F  0DC1               	rlf	___ftdiv@f3+1,f
  3071  0E30  0DC2               	rlf	___ftdiv@f3+2,f
  3072  0E31  3EFF               	addlw	-1
  3073  0E32  1D03               	skipz
  3074  0E33  2E2D               	goto	u3195
  3075  0E34  0837               	movf	___ftdiv@f2+2,w
  3076  0E35  023A               	subwf	___ftdiv@f1+2,w
  3077  0E36  1D03               	skipz
  3078  0E37  2E3E               	goto	u3205
  3079  0E38  0836               	movf	___ftdiv@f2+1,w
  3080  0E39  0239               	subwf	___ftdiv@f1+1,w
  3081  0E3A  1D03               	skipz
  3082  0E3B  2E3E               	goto	u3205
  3083  0E3C  0835               	movf	___ftdiv@f2,w
  3084  0E3D  0238               	subwf	___ftdiv@f1,w
  3085  0E3E                     u3205:	
  3086  0E3E  1C03               	skipc
  3087  0E3F  2E4B               	goto	l2185
  3088  0E40  0835               	movf	___ftdiv@f2,w
  3089  0E41  02B8               	subwf	___ftdiv@f1,f
  3090  0E42  0836               	movf	___ftdiv@f2+1,w
  3091  0E43  1C03               	skipc
  3092  0E44  0F36               	incfsz	___ftdiv@f2+1,w
  3093  0E45  02B9               	subwf	___ftdiv@f1+1,f
  3094  0E46  0837               	movf	___ftdiv@f2+2,w
  3095  0E47  1C03               	skipc
  3096  0E48  0A37               	incf	___ftdiv@f2+2,w
  3097  0E49  02BA               	subwf	___ftdiv@f1+2,f
  3098  0E4A  1440               	bsf	___ftdiv@f3,0
  3099  0E4B                     l2185:	
  3100  0E4B  3001               	movlw	1
  3101  0E4C                     u3215:	
  3102  0E4C  1003               	clrc
  3103  0E4D  0DB8               	rlf	___ftdiv@f1,f
  3104  0E4E  0DB9               	rlf	___ftdiv@f1+1,f
  3105  0E4F  0DBA               	rlf	___ftdiv@f1+2,f
  3106  0E50  3EFF               	addlw	-1
  3107  0E51  1D03               	skipz
  3108  0E52  2E4C               	goto	u3215
  3109  0E53  3001               	movlw	1
  3110  0E54  02BF               	subwf	___ftdiv@cntr,f
  3111  0E55  1D03               	btfss	3,2
  3112  0E56  2E2C               	goto	l2177
  3113  0E57  0840               	movf	___ftdiv@f3,w
  3114  0E58  00A5               	movwf	___ftpack@arg
  3115  0E59  0841               	movf	___ftdiv@f3+1,w
  3116  0E5A  00A6               	movwf	___ftpack@arg+1
  3117  0E5B  0842               	movf	___ftdiv@f3+2,w
  3118  0E5C  00A7               	movwf	___ftpack@arg+2
  3119  0E5D  0843               	movf	___ftdiv@exp,w
  3120  0E5E  00BB               	movwf	??___ftdiv
  3121  0E5F  083B               	movf	??___ftdiv,w
  3122  0E60  00A8               	movwf	___ftpack@exp
  3123  0E61  0844               	movf	___ftdiv@sign,w
  3124  0E62  00BC               	movwf	??___ftdiv+1
  3125  0E63  083C               	movf	??___ftdiv+1,w
  3126  0E64  00A9               	movwf	___ftpack@sign
  3127  0E65  158A  24BD         	fcall	___ftpack
  3128  0E67  1283               	bcf	3,5	;RP0=0, select bank0
  3129  0E68  1303               	bcf	3,6	;RP1=0, select bank0
  3130  0E69  0825               	movf	?___ftpack,w
  3131  0E6A  00B5               	movwf	?___ftdiv
  3132  0E6B  0826               	movf	?___ftpack+1,w
  3133  0E6C  00B6               	movwf	?___ftdiv+1
  3134  0E6D  0827               	movf	?___ftpack+2,w
  3135  0E6E  00B7               	movwf	?___ftdiv+2
  3136  0E6F  0008               	return
  3137  0E70                     __end_of___ftdiv:	
  3138                           
  3139                           	psect	text10
  3140  042C                     __ptext10:	
  3141 ;; *************** function ___ftadd *****************
  3142 ;; Defined at:
  3143 ;;		line 86 in file "G:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\ftadd.c"
  3144 ;; Parameters:    Size  Location     Type
  3145 ;;  f1              3   13[BANK0 ] float 
  3146 ;;  f2              3   16[BANK0 ] float 
  3147 ;; Auto vars:     Size  Location     Type
  3148 ;;  exp1            1   25[BANK0 ] unsigned char 
  3149 ;;  exp2            1   24[BANK0 ] unsigned char 
  3150 ;;  sign            1   23[BANK0 ] unsigned char 
  3151 ;; Return value:  Size  Location     Type
  3152 ;;                  3   13[BANK0 ] float 
  3153 ;; Registers used:
  3154 ;;		wreg, status,2, status,0, pclath, cstack
  3155 ;; Tracked objects:
  3156 ;;		On entry : 0/0
  3157 ;;		On exit  : 0/0
  3158 ;;		Unchanged: 0/0
  3159 ;; Data sizes:     COMMON   BANK0   BANK1
  3160 ;;      Params:         0       6       0
  3161 ;;      Locals:         0       3       0
  3162 ;;      Temps:          0       4       0
  3163 ;;      Totals:         0      13       0
  3164 ;;Total ram usage:       13 bytes
  3165 ;; Hardware stack levels used:    1
  3166 ;; Hardware stack levels required when called:    2
  3167 ;; This function calls:
  3168 ;;		___ftpack
  3169 ;; This function is called by:
  3170 ;;		_TEMPADC
  3171 ;; This function uses a non-reentrant model
  3172 ;;
  3173                           
  3174                           
  3175                           ;psect for function ___ftadd
  3176  042C                     ___ftadd:	
  3177                           
  3178                           ;incstack = 0
  3179                           ; Regs used in ___ftadd: [wreg+status,2+status,0+pclath+cstack]
  3180  042C  1283               	bcf	3,5	;RP0=0, select bank0
  3181  042D  1303               	bcf	3,6	;RP1=0, select bank0
  3182  042E  082D               	movf	___ftadd@f1,w
  3183  042F  00B3               	movwf	??___ftadd
  3184  0430  082E               	movf	___ftadd@f1+1,w
  3185  0431  00B4               	movwf	??___ftadd+1
  3186  0432  082F               	movf	___ftadd@f1+2,w
  3187  0433  00B5               	movwf	??___ftadd+2
  3188  0434  1003               	clrc
  3189  0435  0D34               	rlf	??___ftadd+1,w
  3190  0436  0D35               	rlf	??___ftadd+2,w
  3191  0437  00B6               	movwf	??___ftadd+3
  3192  0438  0836               	movf	??___ftadd+3,w
  3193  0439  00B9               	movwf	___ftadd@exp1
  3194  043A  0830               	movf	___ftadd@f2,w
  3195  043B  00B3               	movwf	??___ftadd
  3196  043C  0831               	movf	___ftadd@f2+1,w
  3197  043D  00B4               	movwf	??___ftadd+1
  3198  043E  0832               	movf	___ftadd@f2+2,w
  3199  043F  00B5               	movwf	??___ftadd+2
  3200  0440  1003               	clrc
  3201  0441  0D34               	rlf	??___ftadd+1,w
  3202  0442  0D35               	rlf	??___ftadd+2,w
  3203  0443  00B6               	movwf	??___ftadd+3
  3204  0444  0836               	movf	??___ftadd+3,w
  3205  0445  00B8               	movwf	___ftadd@exp2
  3206  0446  0839               	movf	___ftadd@exp1,w
  3207  0447  1903               	btfsc	3,2
  3208  0448  2C55               	goto	l2087
  3209  0449  0838               	movf	___ftadd@exp2,w
  3210  044A  0239               	subwf	___ftadd@exp1,w
  3211  044B  1803               	skipnc
  3212  044C  2C5C               	goto	l2091
  3213  044D  0339               	decf	___ftadd@exp1,w
  3214  044E  3AFF               	xorlw	255
  3215  044F  0738               	addwf	___ftadd@exp2,w
  3216  0450  00B3               	movwf	??___ftadd
  3217  0451  3019               	movlw	25
  3218  0452  0233               	subwf	??___ftadd,w
  3219  0453  1C03               	skipc
  3220  0454  2C5C               	goto	l2091
  3221  0455                     l2087:	
  3222  0455  0830               	movf	___ftadd@f2,w
  3223  0456  00AD               	movwf	?___ftadd
  3224  0457  0831               	movf	___ftadd@f2+1,w
  3225  0458  00AE               	movwf	?___ftadd+1
  3226  0459  0832               	movf	___ftadd@f2+2,w
  3227  045A  00AF               	movwf	?___ftadd+2
  3228  045B  0008               	return
  3229  045C                     l2091:	
  3230  045C  0838               	movf	___ftadd@exp2,w
  3231  045D  1903               	btfsc	3,2
  3232  045E  0008               	return
  3233  045F  0839               	movf	___ftadd@exp1,w
  3234  0460  0238               	subwf	___ftadd@exp2,w
  3235  0461  1803               	skipnc
  3236  0462  2C6B               	goto	l2097
  3237  0463  0338               	decf	___ftadd@exp2,w
  3238  0464  3AFF               	xorlw	255
  3239  0465  0739               	addwf	___ftadd@exp1,w
  3240  0466  00B3               	movwf	??___ftadd
  3241  0467  3019               	movlw	25
  3242  0468  0233               	subwf	??___ftadd,w
  3243  0469  1803               	btfsc	3,0
  3244  046A  0008               	return
  3245  046B                     l2097:	
  3246  046B  3006               	movlw	6
  3247  046C  00B3               	movwf	??___ftadd
  3248  046D  0833               	movf	??___ftadd,w
  3249  046E  00B7               	movwf	___ftadd@sign
  3250  046F  1BAF               	btfsc	___ftadd@f1+2,7
  3251  0470  17B7               	bsf	___ftadd@sign,7
  3252  0471  1BB2               	btfsc	___ftadd@f2+2,7
  3253  0472  1737               	bsf	___ftadd@sign,6
  3254  0473  17AE               	bsf	___ftadd@f1+1,7
  3255  0474  30FF               	movlw	255
  3256  0475  05AD               	andwf	___ftadd@f1,f
  3257  0476  30FF               	movlw	255
  3258  0477  05AE               	andwf	___ftadd@f1+1,f
  3259  0478  3000               	movlw	0
  3260  0479  05AF               	andwf	___ftadd@f1+2,f
  3261  047A  17B1               	bsf	___ftadd@f2+1,7
  3262  047B  30FF               	movlw	255
  3263  047C  05B0               	andwf	___ftadd@f2,f
  3264  047D  30FF               	movlw	255
  3265  047E  05B1               	andwf	___ftadd@f2+1,f
  3266  047F  3000               	movlw	0
  3267  0480  05B2               	andwf	___ftadd@f2+2,f
  3268  0481  0838               	movf	___ftadd@exp2,w
  3269  0482  0239               	subwf	___ftadd@exp1,w
  3270  0483  1803               	skipnc
  3271  0484  2CAB               	goto	l2119
  3272  0485                     l2109:	
  3273  0485  3001               	movlw	1
  3274  0486                     u3005:	
  3275  0486  1003               	clrc
  3276  0487  0DB0               	rlf	___ftadd@f2,f
  3277  0488  0DB1               	rlf	___ftadd@f2+1,f
  3278  0489  0DB2               	rlf	___ftadd@f2+2,f
  3279  048A  3EFF               	addlw	-1
  3280  048B  1D03               	skipz
  3281  048C  2C86               	goto	u3005
  3282  048D  3001               	movlw	1
  3283  048E  02B8               	subwf	___ftadd@exp2,f
  3284  048F  0838               	movf	___ftadd@exp2,w
  3285  0490  0639               	xorwf	___ftadd@exp1,w
  3286  0491  1903               	skipnz
  3287  0492  2CA6               	goto	l2117
  3288  0493  3001               	movlw	1
  3289  0494  02B7               	subwf	___ftadd@sign,f
  3290  0495  0837               	movf	___ftadd@sign,w
  3291  0496  3907               	andlw	7
  3292  0497  1903               	btfsc	3,2
  3293  0498  2CA6               	goto	l2117
  3294  0499  2C85               	goto	l2109
  3295  049A                     l2115:	
  3296  049A  3001               	movlw	1
  3297  049B                     u3035:	
  3298  049B  1003               	clrc
  3299  049C  0CAF               	rrf	___ftadd@f1+2,f
  3300  049D  0CAE               	rrf	___ftadd@f1+1,f
  3301  049E  0CAD               	rrf	___ftadd@f1,f
  3302  049F  3EFF               	addlw	-1
  3303  04A0  1D03               	skipz
  3304  04A1  2C9B               	goto	u3035
  3305  04A2  3001               	movlw	1
  3306  04A3  00B3               	movwf	??___ftadd
  3307  04A4  0833               	movf	??___ftadd,w
  3308  04A5  07B9               	addwf	___ftadd@exp1,f
  3309  04A6                     l2117:	
  3310  04A6  0839               	movf	___ftadd@exp1,w
  3311  04A7  0638               	xorwf	___ftadd@exp2,w
  3312  04A8  1903               	btfsc	3,2
  3313  04A9  2CD4               	goto	l597
  3314  04AA  2C9A               	goto	l2115
  3315  04AB                     l2119:	
  3316  04AB  0839               	movf	___ftadd@exp1,w
  3317  04AC  0238               	subwf	___ftadd@exp2,w
  3318  04AD  1803               	skipnc
  3319  04AE  2CD4               	goto	l597
  3320  04AF                     l2121:	
  3321  04AF  3001               	movlw	1
  3322  04B0                     u3065:	
  3323  04B0  1003               	clrc
  3324  04B1  0DAD               	rlf	___ftadd@f1,f
  3325  04B2  0DAE               	rlf	___ftadd@f1+1,f
  3326  04B3  0DAF               	rlf	___ftadd@f1+2,f
  3327  04B4  3EFF               	addlw	-1
  3328  04B5  1D03               	skipz
  3329  04B6  2CB0               	goto	u3065
  3330  04B7  3001               	movlw	1
  3331  04B8  02B9               	subwf	___ftadd@exp1,f
  3332  04B9  0838               	movf	___ftadd@exp2,w
  3333  04BA  0639               	xorwf	___ftadd@exp1,w
  3334  04BB  1903               	skipnz
  3335  04BC  2CD0               	goto	l2129
  3336  04BD  3001               	movlw	1
  3337  04BE  02B7               	subwf	___ftadd@sign,f
  3338  04BF  0837               	movf	___ftadd@sign,w
  3339  04C0  3907               	andlw	7
  3340  04C1  1903               	btfsc	3,2
  3341  04C2  2CD0               	goto	l2129
  3342  04C3  2CAF               	goto	l2121
  3343  04C4                     l2127:	
  3344  04C4  3001               	movlw	1
  3345  04C5                     u3095:	
  3346  04C5  1003               	clrc
  3347  04C6  0CB2               	rrf	___ftadd@f2+2,f
  3348  04C7  0CB1               	rrf	___ftadd@f2+1,f
  3349  04C8  0CB0               	rrf	___ftadd@f2,f
  3350  04C9  3EFF               	addlw	-1
  3351  04CA  1D03               	skipz
  3352  04CB  2CC5               	goto	u3095
  3353  04CC  3001               	movlw	1
  3354  04CD  00B3               	movwf	??___ftadd
  3355  04CE  0833               	movf	??___ftadd,w
  3356  04CF  07B8               	addwf	___ftadd@exp2,f
  3357  04D0                     l2129:	
  3358  04D0  0839               	movf	___ftadd@exp1,w
  3359  04D1  0638               	xorwf	___ftadd@exp2,w
  3360  04D2  1D03               	skipz
  3361  04D3  2CC4               	goto	l2127
  3362  04D4                     l597:	
  3363  04D4  1FB7               	btfss	___ftadd@sign,7
  3364  04D5  2CE6               	goto	l2133
  3365  04D6  30FF               	movlw	255
  3366  04D7  06AD               	xorwf	___ftadd@f1,f
  3367  04D8  30FF               	movlw	255
  3368  04D9  06AE               	xorwf	___ftadd@f1+1,f
  3369  04DA  30FF               	movlw	255
  3370  04DB  06AF               	xorwf	___ftadd@f1+2,f
  3371  04DC  3001               	movlw	1
  3372  04DD  07AD               	addwf	___ftadd@f1,f
  3373  04DE  3000               	movlw	0
  3374  04DF  1803               	skipnc
  3375  04E0  3001               	movlw	1
  3376  04E1  07AE               	addwf	___ftadd@f1+1,f
  3377  04E2  3000               	movlw	0
  3378  04E3  1803               	skipnc
  3379  04E4  3001               	movlw	1
  3380  04E5  07AF               	addwf	___ftadd@f1+2,f
  3381  04E6                     l2133:	
  3382  04E6  1F37               	btfss	___ftadd@sign,6
  3383  04E7  2CF8               	goto	l2137
  3384  04E8  30FF               	movlw	255
  3385  04E9  06B0               	xorwf	___ftadd@f2,f
  3386  04EA  30FF               	movlw	255
  3387  04EB  06B1               	xorwf	___ftadd@f2+1,f
  3388  04EC  30FF               	movlw	255
  3389  04ED  06B2               	xorwf	___ftadd@f2+2,f
  3390  04EE  3001               	movlw	1
  3391  04EF  07B0               	addwf	___ftadd@f2,f
  3392  04F0  3000               	movlw	0
  3393  04F1  1803               	skipnc
  3394  04F2  3001               	movlw	1
  3395  04F3  07B1               	addwf	___ftadd@f2+1,f
  3396  04F4  3000               	movlw	0
  3397  04F5  1803               	skipnc
  3398  04F6  3001               	movlw	1
  3399  04F7  07B2               	addwf	___ftadd@f2+2,f
  3400  04F8                     l2137:	
  3401  04F8  01B7               	clrf	___ftadd@sign
  3402  04F9  082D               	movf	___ftadd@f1,w
  3403  04FA  07B0               	addwf	___ftadd@f2,f
  3404  04FB  082E               	movf	___ftadd@f1+1,w
  3405  04FC  1103               	clrz
  3406  04FD  1803               	skipnc
  3407  04FE  0A2E               	incf	___ftadd@f1+1,w
  3408  04FF  1D03               	btfss	3,2
  3409  0500  07B1               	addwf	___ftadd@f2+1,f
  3410  0501  082F               	movf	___ftadd@f1+2,w
  3411  0502  1103               	clrz
  3412  0503  1803               	skipnc
  3413  0504  0A2F               	incf	___ftadd@f1+2,w
  3414  0505  1D03               	btfss	3,2
  3415  0506  07B2               	addwf	___ftadd@f2+2,f
  3416  0507  1FB2               	btfss	___ftadd@f2+2,7
  3417  0508  2D1B               	goto	l2147
  3418  0509  30FF               	movlw	255
  3419  050A  06B0               	xorwf	___ftadd@f2,f
  3420  050B  30FF               	movlw	255
  3421  050C  06B1               	xorwf	___ftadd@f2+1,f
  3422  050D  30FF               	movlw	255
  3423  050E  06B2               	xorwf	___ftadd@f2+2,f
  3424  050F  3001               	movlw	1
  3425  0510  07B0               	addwf	___ftadd@f2,f
  3426  0511  3000               	movlw	0
  3427  0512  1803               	skipnc
  3428  0513  3001               	movlw	1
  3429  0514  07B1               	addwf	___ftadd@f2+1,f
  3430  0515  3000               	movlw	0
  3431  0516  1803               	skipnc
  3432  0517  3001               	movlw	1
  3433  0518  07B2               	addwf	___ftadd@f2+2,f
  3434  0519  01B7               	clrf	___ftadd@sign
  3435  051A  0AB7               	incf	___ftadd@sign,f
  3436  051B                     l2147:	
  3437  051B  0830               	movf	___ftadd@f2,w
  3438  051C  00A5               	movwf	___ftpack@arg
  3439  051D  0831               	movf	___ftadd@f2+1,w
  3440  051E  00A6               	movwf	___ftpack@arg+1
  3441  051F  0832               	movf	___ftadd@f2+2,w
  3442  0520  00A7               	movwf	___ftpack@arg+2
  3443  0521  0839               	movf	___ftadd@exp1,w
  3444  0522  00B3               	movwf	??___ftadd
  3445  0523  0833               	movf	??___ftadd,w
  3446  0524  00A8               	movwf	___ftpack@exp
  3447  0525  0837               	movf	___ftadd@sign,w
  3448  0526  00B4               	movwf	??___ftadd+1
  3449  0527  0834               	movf	??___ftadd+1,w
  3450  0528  00A9               	movwf	___ftpack@sign
  3451  0529  158A  24BD         	fcall	___ftpack
  3452  052B  1283               	bcf	3,5	;RP0=0, select bank0
  3453  052C  1303               	bcf	3,6	;RP1=0, select bank0
  3454  052D  0825               	movf	?___ftpack,w
  3455  052E  00AD               	movwf	?___ftadd
  3456  052F  0826               	movf	?___ftpack+1,w
  3457  0530  00AE               	movwf	?___ftadd+1
  3458  0531  0827               	movf	?___ftpack+2,w
  3459  0532  00AF               	movwf	?___ftadd+2
  3460  0533  0008               	return
  3461  0534                     __end_of___ftadd:	
  3462                           
  3463                           	psect	text11
  3464  0AF4                     __ptext11:	
  3465 ;; *************** function ___awtoft *****************
  3466 ;; Defined at:
  3467 ;;		line 32 in file "G:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awtoft.c"
  3468 ;; Parameters:    Size  Location     Type
  3469 ;;  c               2   13[BANK0 ] int 
  3470 ;; Auto vars:     Size  Location     Type
  3471 ;;  sign            1   18[BANK0 ] unsigned char 
  3472 ;; Return value:  Size  Location     Type
  3473 ;;                  3   13[BANK0 ] float 
  3474 ;; Registers used:
  3475 ;;		wreg, status,2, status,0, pclath, cstack
  3476 ;; Tracked objects:
  3477 ;;		On entry : 0/0
  3478 ;;		On exit  : 0/0
  3479 ;;		Unchanged: 0/0
  3480 ;; Data sizes:     COMMON   BANK0   BANK1
  3481 ;;      Params:         0       3       0
  3482 ;;      Locals:         0       1       0
  3483 ;;      Temps:          0       2       0
  3484 ;;      Totals:         0       6       0
  3485 ;;Total ram usage:        6 bytes
  3486 ;; Hardware stack levels used:    1
  3487 ;; Hardware stack levels required when called:    2
  3488 ;; This function calls:
  3489 ;;		___ftpack
  3490 ;; This function is called by:
  3491 ;;		_TEMPADC
  3492 ;; This function uses a non-reentrant model
  3493 ;;
  3494                           
  3495                           
  3496                           ;psect for function ___awtoft
  3497  0AF4                     ___awtoft:	
  3498                           
  3499                           ;incstack = 0
  3500                           ; Regs used in ___awtoft: [wreg+status,2+status,0+pclath+cstack]
  3501  0AF4  1283               	bcf	3,5	;RP0=0, select bank0
  3502  0AF5  1303               	bcf	3,6	;RP1=0, select bank0
  3503  0AF6  01B2               	clrf	___awtoft@sign
  3504  0AF7  1FAE               	btfss	___awtoft@c+1,7
  3505  0AF8  2B00               	goto	l2077
  3506  0AF9  09AD               	comf	___awtoft@c,f
  3507  0AFA  09AE               	comf	___awtoft@c+1,f
  3508  0AFB  0AAD               	incf	___awtoft@c,f
  3509  0AFC  1903               	skipnz
  3510  0AFD  0AAE               	incf	___awtoft@c+1,f
  3511  0AFE  01B2               	clrf	___awtoft@sign
  3512  0AFF  0AB2               	incf	___awtoft@sign,f
  3513  0B00                     l2077:	
  3514  0B00  082D               	movf	___awtoft@c,w
  3515  0B01  00A5               	movwf	___ftpack@arg
  3516  0B02  082E               	movf	___awtoft@c+1,w
  3517  0B03  00A6               	movwf	___ftpack@arg+1
  3518  0B04  01A7               	clrf	___ftpack@arg+2
  3519  0B05  308E               	movlw	142
  3520  0B06  00B0               	movwf	??___awtoft
  3521  0B07  0830               	movf	??___awtoft,w
  3522  0B08  00A8               	movwf	___ftpack@exp
  3523  0B09  0832               	movf	___awtoft@sign,w
  3524  0B0A  00B1               	movwf	??___awtoft+1
  3525  0B0B  0831               	movf	??___awtoft+1,w
  3526  0B0C  00A9               	movwf	___ftpack@sign
  3527  0B0D  158A  24BD         	fcall	___ftpack
  3528  0B0F  1283               	bcf	3,5	;RP0=0, select bank0
  3529  0B10  1303               	bcf	3,6	;RP1=0, select bank0
  3530  0B11  0825               	movf	?___ftpack,w
  3531  0B12  00AD               	movwf	?___awtoft
  3532  0B13  0826               	movf	?___ftpack+1,w
  3533  0B14  00AE               	movwf	?___awtoft+1
  3534  0B15  0827               	movf	?___ftpack+2,w
  3535  0B16  00AF               	movwf	?___awtoft+2
  3536  0B17  0008               	return
  3537  0B18                     __end_of___awtoft:	
  3538                           
  3539                           	psect	text12
  3540  0CBD                     __ptext12:	
  3541 ;; *************** function ___ftpack *****************
  3542 ;; Defined at:
  3543 ;;		line 62 in file "G:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\float.c"
  3544 ;; Parameters:    Size  Location     Type
  3545 ;;  arg             3    5[BANK0 ] unsigned um
  3546 ;;  exp             1    8[BANK0 ] unsigned char 
  3547 ;;  sign            1    9[BANK0 ] unsigned char 
  3548 ;; Auto vars:     Size  Location     Type
  3549 ;;		None
  3550 ;; Return value:  Size  Location     Type
  3551 ;;                  3    5[BANK0 ] float 
  3552 ;; Registers used:
  3553 ;;		wreg, status,2, status,0
  3554 ;; Tracked objects:
  3555 ;;		On entry : 0/0
  3556 ;;		On exit  : 0/0
  3557 ;;		Unchanged: 0/0
  3558 ;; Data sizes:     COMMON   BANK0   BANK1
  3559 ;;      Params:         0       5       0
  3560 ;;      Locals:         0       0       0
  3561 ;;      Temps:          0       3       0
  3562 ;;      Totals:         0       8       0
  3563 ;;Total ram usage:        8 bytes
  3564 ;; Hardware stack levels used:    1
  3565 ;; Hardware stack levels required when called:    1
  3566 ;; This function calls:
  3567 ;;		Nothing
  3568 ;; This function is called by:
  3569 ;;		___awtoft
  3570 ;;		___ftadd
  3571 ;;		___ftdiv
  3572 ;;		___ftmul
  3573 ;;		___lbtoft
  3574 ;; This function uses a non-reentrant model
  3575 ;;
  3576                           
  3577                           
  3578                           ;psect for function ___ftpack
  3579  0CBD                     ___ftpack:	
  3580                           
  3581                           ;incstack = 0
  3582                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  3583  0CBD  1283               	bcf	3,5	;RP0=0, select bank0
  3584  0CBE  1303               	bcf	3,6	;RP1=0, select bank0
  3585  0CBF  0828               	movf	___ftpack@exp,w
  3586  0CC0  1903               	btfsc	3,2
  3587  0CC1  2CC7               	goto	l1755
  3588  0CC2  0827               	movf	___ftpack@arg+2,w
  3589  0CC3  0426               	iorwf	___ftpack@arg+1,w
  3590  0CC4  0425               	iorwf	___ftpack@arg,w
  3591  0CC5  1D03               	skipz
  3592  0CC6  2CDA               	goto	l1761
  3593  0CC7                     l1755:	
  3594  0CC7  3000               	movlw	0
  3595  0CC8  00A5               	movwf	?___ftpack
  3596  0CC9  3000               	movlw	0
  3597  0CCA  00A6               	movwf	?___ftpack+1
  3598  0CCB  3000               	movlw	0
  3599  0CCC  00A7               	movwf	?___ftpack+2
  3600  0CCD  0008               	return
  3601  0CCE                     l1759:	
  3602  0CCE  3001               	movlw	1
  3603  0CCF  00AA               	movwf	??___ftpack
  3604  0CD0  082A               	movf	??___ftpack,w
  3605  0CD1  07A8               	addwf	___ftpack@exp,f
  3606  0CD2  3001               	movlw	1
  3607  0CD3                     u2125:	
  3608  0CD3  1003               	clrc
  3609  0CD4  0CA7               	rrf	___ftpack@arg+2,f
  3610  0CD5  0CA6               	rrf	___ftpack@arg+1,f
  3611  0CD6  0CA5               	rrf	___ftpack@arg,f
  3612  0CD7  3EFF               	addlw	-1
  3613  0CD8  1D03               	skipz
  3614  0CD9  2CD3               	goto	u2125
  3615  0CDA                     l1761:	
  3616  0CDA  30FE               	movlw	254
  3617  0CDB  0527               	andwf	___ftpack@arg+2,w
  3618  0CDC  1903               	btfsc	3,2
  3619  0CDD  2CF5               	goto	l566
  3620  0CDE  2CCE               	goto	l1759
  3621  0CDF                     l1763:	
  3622  0CDF  3001               	movlw	1
  3623  0CE0  00AA               	movwf	??___ftpack
  3624  0CE1  082A               	movf	??___ftpack,w
  3625  0CE2  07A8               	addwf	___ftpack@exp,f
  3626  0CE3  3001               	movlw	1
  3627  0CE4  07A5               	addwf	___ftpack@arg,f
  3628  0CE5  3000               	movlw	0
  3629  0CE6  1803               	skipnc
  3630  0CE7  3001               	movlw	1
  3631  0CE8  07A6               	addwf	___ftpack@arg+1,f
  3632  0CE9  3000               	movlw	0
  3633  0CEA  1803               	skipnc
  3634  0CEB  3001               	movlw	1
  3635  0CEC  07A7               	addwf	___ftpack@arg+2,f
  3636  0CED  3001               	movlw	1
  3637  0CEE                     u2145:	
  3638  0CEE  1003               	clrc
  3639  0CEF  0CA7               	rrf	___ftpack@arg+2,f
  3640  0CF0  0CA6               	rrf	___ftpack@arg+1,f
  3641  0CF1  0CA5               	rrf	___ftpack@arg,f
  3642  0CF2  3EFF               	addlw	-1
  3643  0CF3  1D03               	skipz
  3644  0CF4  2CEE               	goto	u2145
  3645  0CF5                     l566:	
  3646  0CF5  30FF               	movlw	255
  3647  0CF6  0527               	andwf	___ftpack@arg+2,w
  3648  0CF7  1903               	btfsc	3,2
  3649  0CF8  2D04               	goto	l1771
  3650  0CF9  2CDF               	goto	l1763
  3651  0CFA                     l1769:	
  3652  0CFA  3001               	movlw	1
  3653  0CFB  02A8               	subwf	___ftpack@exp,f
  3654  0CFC  3001               	movlw	1
  3655  0CFD                     u2165:	
  3656  0CFD  1003               	clrc
  3657  0CFE  0DA5               	rlf	___ftpack@arg,f
  3658  0CFF  0DA6               	rlf	___ftpack@arg+1,f
  3659  0D00  0DA7               	rlf	___ftpack@arg+2,f
  3660  0D01  3EFF               	addlw	-1
  3661  0D02  1D03               	skipz
  3662  0D03  2CFD               	goto	u2165
  3663  0D04                     l1771:	
  3664  0D04  1BA6               	btfsc	___ftpack@arg+1,7
  3665  0D05  2D0A               	goto	l573
  3666  0D06  3002               	movlw	2
  3667  0D07  0228               	subwf	___ftpack@exp,w
  3668  0D08  1803               	skipnc
  3669  0D09  2CFA               	goto	l1769
  3670  0D0A                     l573:	
  3671  0D0A  1828               	btfsc	___ftpack@exp,0
  3672  0D0B  2D12               	goto	l574
  3673  0D0C  30FF               	movlw	255
  3674  0D0D  05A5               	andwf	___ftpack@arg,f
  3675  0D0E  307F               	movlw	127
  3676  0D0F  05A6               	andwf	___ftpack@arg+1,f
  3677  0D10  30FF               	movlw	255
  3678  0D11  05A7               	andwf	___ftpack@arg+2,f
  3679  0D12                     l574:	
  3680  0D12  1003               	clrc
  3681  0D13  0CA8               	rrf	___ftpack@exp,f
  3682  0D14  0828               	movf	___ftpack@exp,w
  3683  0D15  00AA               	movwf	??___ftpack
  3684  0D16  01AB               	clrf	??___ftpack+1
  3685  0D17  01AC               	clrf	??___ftpack+2
  3686  0D18  3010               	movlw	16
  3687  0D19                     u2205:	
  3688  0D19  1003               	clrc
  3689  0D1A  0DAA               	rlf	??___ftpack,f
  3690  0D1B  0DAB               	rlf	??___ftpack+1,f
  3691  0D1C  0DAC               	rlf	??___ftpack+2,f
  3692  0D1D  3EFF               	addlw	-1
  3693  0D1E  1D03               	skipz
  3694  0D1F  2D19               	goto	u2205
  3695  0D20  082A               	movf	??___ftpack,w
  3696  0D21  04A5               	iorwf	___ftpack@arg,f
  3697  0D22  082B               	movf	??___ftpack+1,w
  3698  0D23  04A6               	iorwf	___ftpack@arg+1,f
  3699  0D24  082C               	movf	??___ftpack+2,w
  3700  0D25  04A7               	iorwf	___ftpack@arg+2,f
  3701  0D26  0829               	movf	___ftpack@sign,w
  3702  0D27  1903               	btfsc	3,2
  3703  0D28  0008               	return
  3704  0D29  17A7               	bsf	___ftpack@arg+2,7
  3705  0D2A  0008               	return
  3706  0D2B                     __end_of___ftpack:	
  3707                           
  3708                           	psect	text13
  3709  0C06                     __ptext13:	
  3710 ;; *************** function ___awdiv *****************
  3711 ;; Defined at:
  3712 ;;		line 6 in file "G:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awdiv.c"
  3713 ;; Parameters:    Size  Location     Type
  3714 ;;  divisor         2   11[BANK0 ] int 
  3715 ;;  dividend        2   13[BANK0 ] int 
  3716 ;; Auto vars:     Size  Location     Type
  3717 ;;  quotient        2   18[BANK0 ] int 
  3718 ;;  sign            1   17[BANK0 ] unsigned char 
  3719 ;;  counter         1   16[BANK0 ] unsigned char 
  3720 ;; Return value:  Size  Location     Type
  3721 ;;                  2   11[BANK0 ] int 
  3722 ;; Registers used:
  3723 ;;		wreg, status,2, status,0
  3724 ;; Tracked objects:
  3725 ;;		On entry : 0/0
  3726 ;;		On exit  : 0/0
  3727 ;;		Unchanged: 0/0
  3728 ;; Data sizes:     COMMON   BANK0   BANK1
  3729 ;;      Params:         0       4       0
  3730 ;;      Locals:         0       4       0
  3731 ;;      Temps:          0       1       0
  3732 ;;      Totals:         0       9       0
  3733 ;;Total ram usage:        9 bytes
  3734 ;; Hardware stack levels used:    1
  3735 ;; Hardware stack levels required when called:    1
  3736 ;; This function calls:
  3737 ;;		Nothing
  3738 ;; This function is called by:
  3739 ;;		_TEMPADC
  3740 ;; This function uses a non-reentrant model
  3741 ;;
  3742                           
  3743                           
  3744                           ;psect for function ___awdiv
  3745  0C06                     ___awdiv:	
  3746                           
  3747                           ;incstack = 0
  3748                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3749  0C06  1283               	bcf	3,5	;RP0=0, select bank0
  3750  0C07  1303               	bcf	3,6	;RP1=0, select bank0
  3751  0C08  01B1               	clrf	___awdiv@sign
  3752  0C09  1FAC               	btfss	___awdiv@divisor+1,7
  3753  0C0A  2C12               	goto	l2033
  3754  0C0B  09AB               	comf	___awdiv@divisor,f
  3755  0C0C  09AC               	comf	___awdiv@divisor+1,f
  3756  0C0D  0AAB               	incf	___awdiv@divisor,f
  3757  0C0E  1903               	skipnz
  3758  0C0F  0AAC               	incf	___awdiv@divisor+1,f
  3759  0C10  01B1               	clrf	___awdiv@sign
  3760  0C11  0AB1               	incf	___awdiv@sign,f
  3761  0C12                     l2033:	
  3762  0C12  1FAE               	btfss	___awdiv@dividend+1,7
  3763  0C13  2C1D               	goto	l2039
  3764  0C14  09AD               	comf	___awdiv@dividend,f
  3765  0C15  09AE               	comf	___awdiv@dividend+1,f
  3766  0C16  0AAD               	incf	___awdiv@dividend,f
  3767  0C17  1903               	skipnz
  3768  0C18  0AAE               	incf	___awdiv@dividend+1,f
  3769  0C19  3001               	movlw	1
  3770  0C1A  00AF               	movwf	??___awdiv
  3771  0C1B  082F               	movf	??___awdiv,w
  3772  0C1C  06B1               	xorwf	___awdiv@sign,f
  3773  0C1D                     l2039:	
  3774  0C1D  01B2               	clrf	___awdiv@quotient
  3775  0C1E  01B3               	clrf	___awdiv@quotient+1
  3776  0C1F  082B               	movf	___awdiv@divisor,w
  3777  0C20  042C               	iorwf	___awdiv@divisor+1,w
  3778  0C21  1903               	btfsc	3,2
  3779  0C22  2C54               	goto	l2061
  3780  0C23  01B0               	clrf	___awdiv@counter
  3781  0C24  0AB0               	incf	___awdiv@counter,f
  3782  0C25                     l2049:	
  3783  0C25  1BAC               	btfsc	___awdiv@divisor+1,7
  3784  0C26  2C33               	goto	l2051
  3785  0C27  3001               	movlw	1
  3786  0C28                     u2835:	
  3787  0C28  1003               	clrc
  3788  0C29  0DAB               	rlf	___awdiv@divisor,f
  3789  0C2A  0DAC               	rlf	___awdiv@divisor+1,f
  3790  0C2B  3EFF               	addlw	-1
  3791  0C2C  1D03               	skipz
  3792  0C2D  2C28               	goto	u2835
  3793  0C2E  3001               	movlw	1
  3794  0C2F  00AF               	movwf	??___awdiv
  3795  0C30  082F               	movf	??___awdiv,w
  3796  0C31  07B0               	addwf	___awdiv@counter,f
  3797  0C32  2C25               	goto	l2049
  3798  0C33                     l2051:	
  3799  0C33  3001               	movlw	1
  3800  0C34                     u2855:	
  3801  0C34  1003               	clrc
  3802  0C35  0DB2               	rlf	___awdiv@quotient,f
  3803  0C36  0DB3               	rlf	___awdiv@quotient+1,f
  3804  0C37  3EFF               	addlw	-1
  3805  0C38  1D03               	skipz
  3806  0C39  2C34               	goto	u2855
  3807  0C3A  082C               	movf	___awdiv@divisor+1,w
  3808  0C3B  022E               	subwf	___awdiv@dividend+1,w
  3809  0C3C  1D03               	skipz
  3810  0C3D  2C40               	goto	u2865
  3811  0C3E  082B               	movf	___awdiv@divisor,w
  3812  0C3F  022D               	subwf	___awdiv@dividend,w
  3813  0C40                     u2865:	
  3814  0C40  1C03               	skipc
  3815  0C41  2C49               	goto	l2057
  3816  0C42  082B               	movf	___awdiv@divisor,w
  3817  0C43  02AD               	subwf	___awdiv@dividend,f
  3818  0C44  082C               	movf	___awdiv@divisor+1,w
  3819  0C45  1C03               	skipc
  3820  0C46  03AE               	decf	___awdiv@dividend+1,f
  3821  0C47  02AE               	subwf	___awdiv@dividend+1,f
  3822  0C48  1432               	bsf	___awdiv@quotient,0
  3823  0C49                     l2057:	
  3824  0C49  3001               	movlw	1
  3825  0C4A                     u2875:	
  3826  0C4A  1003               	clrc
  3827  0C4B  0CAC               	rrf	___awdiv@divisor+1,f
  3828  0C4C  0CAB               	rrf	___awdiv@divisor,f
  3829  0C4D  3EFF               	addlw	-1
  3830  0C4E  1D03               	skipz
  3831  0C4F  2C4A               	goto	u2875
  3832  0C50  3001               	movlw	1
  3833  0C51  02B0               	subwf	___awdiv@counter,f
  3834  0C52  1D03               	btfss	3,2
  3835  0C53  2C33               	goto	l2051
  3836  0C54                     l2061:	
  3837  0C54  0831               	movf	___awdiv@sign,w
  3838  0C55  1903               	btfsc	3,2
  3839  0C56  2C5C               	goto	l2065
  3840  0C57  09B2               	comf	___awdiv@quotient,f
  3841  0C58  09B3               	comf	___awdiv@quotient+1,f
  3842  0C59  0AB2               	incf	___awdiv@quotient,f
  3843  0C5A  1903               	skipnz
  3844  0C5B  0AB3               	incf	___awdiv@quotient+1,f
  3845  0C5C                     l2065:	
  3846  0C5C  0833               	movf	___awdiv@quotient+1,w
  3847  0C5D  00AC               	movwf	?___awdiv+1
  3848  0C5E  0832               	movf	___awdiv@quotient,w
  3849  0C5F  00AB               	movwf	?___awdiv
  3850  0C60  0008               	return
  3851  0C61                     __end_of___awdiv:	
  3852                           
  3853                           	psect	text14
  3854  0A8D                     __ptext14:	
  3855 ;; *************** function _ADC *****************
  3856 ;; Defined at:
  3857 ;;		line 55 in file "../main.c"
  3858 ;; Parameters:    Size  Location     Type
  3859 ;;  x               2   11[BANK0 ] int 
  3860 ;; Auto vars:     Size  Location     Type
  3861 ;;		None
  3862 ;; Return value:  Size  Location     Type
  3863 ;;                  1    wreg      unsigned char 
  3864 ;; Registers used:
  3865 ;;		wreg, status,2, status,0, pclath, cstack
  3866 ;; Tracked objects:
  3867 ;;		On entry : 0/0
  3868 ;;		On exit  : 0/0
  3869 ;;		Unchanged: 0/0
  3870 ;; Data sizes:     COMMON   BANK0   BANK1
  3871 ;;      Params:         0       2       0
  3872 ;;      Locals:         0       0       0
  3873 ;;      Temps:          0       1       0
  3874 ;;      Totals:         0       3       0
  3875 ;;Total ram usage:        3 bytes
  3876 ;; Hardware stack levels used:    1
  3877 ;; Hardware stack levels required when called:    2
  3878 ;; This function calls:
  3879 ;;		_delay2ms
  3880 ;; This function is called by:
  3881 ;;		_TEMPADC
  3882 ;; This function uses a non-reentrant model
  3883 ;;
  3884                           
  3885                           
  3886                           ;psect for function _ADC
  3887  0A8D                     _ADC:	
  3888                           
  3889                           ;main.c: 57: ADCON1=0x02;
  3890                           
  3891                           ;incstack = 0
  3892                           ; Regs used in _ADC: [wreg+status,2+status,0+pclath+cstack]
  3893  0A8D  3002               	movlw	2
  3894  0A8E  1683               	bsf	3,5	;RP0=1, select bank1
  3895  0A8F  1303               	bcf	3,6	;RP1=0, select bank1
  3896  0A90  009F               	movwf	31	;volatile
  3897                           
  3898                           ;main.c: 58: ADCON0=0b01000000;
  3899  0A91  3040               	movlw	64
  3900  0A92  1283               	bcf	3,5	;RP0=0, select bank0
  3901  0A93  1303               	bcf	3,6	;RP1=0, select bank0
  3902  0A94  009F               	movwf	31	;volatile
  3903                           
  3904                           ;main.c: 59: ADCON0bits.CHS=x;
  3905  0A95  082B               	movf	ADC@x,w
  3906  0A96  00AD               	movwf	??_ADC
  3907  0A97  0DAD               	rlf	??_ADC,f
  3908  0A98  0DAD               	rlf	??_ADC,f
  3909  0A99  0DAD               	rlf	??_ADC,f
  3910  0A9A  081F               	movf	31,w	;volatile
  3911  0A9B  062D               	xorwf	??_ADC,w
  3912  0A9C  39C7               	andlw	-57
  3913  0A9D  062D               	xorwf	??_ADC,w
  3914  0A9E  009F               	movwf	31	;volatile
  3915                           
  3916                           ;main.c: 61: ADON=0b1;
  3917  0A9F  141F               	bsf	31,0	;volatile
  3918                           
  3919                           ;main.c: 62: delay2ms(3);
  3920  0AA0  3003               	movlw	3
  3921  0AA1  00A5               	movwf	delay2ms@x
  3922  0AA2  3000               	movlw	0
  3923  0AA3  00A6               	movwf	delay2ms@x+1
  3924  0AA4  158A  22AE  158A   	fcall	_delay2ms
  3925                           
  3926                           ;main.c: 64: GO=1;
  3927  0AA7  1283               	bcf	3,5	;RP0=0, select bank0
  3928  0AA8  1303               	bcf	3,6	;RP1=0, select bank0
  3929  0AA9  151F               	bsf	31,2	;volatile
  3930  0AAA                     l218:	
  3931                           ;main.c: 66: while(GO);
  3932                           
  3933  0AAA  191F               	btfsc	31,2	;volatile
  3934  0AAB  2AAA               	goto	l218
  3935                           
  3936                           ;main.c: 67: return ADRES;
  3937  0AAC  081E               	movf	30,w	;volatile
  3938  0AAD  0008               	return
  3939  0AAE                     __end_of_ADC:	
  3940                           
  3941                           	psect	text15
  3942  09E7                     __ptext15:	
  3943 ;; *************** function _HPSystem *****************
  3944 ;; Defined at:
  3945 ;;		line 165 in file "../HPsystem.c"
  3946 ;; Parameters:    Size  Location     Type
  3947 ;;		None
  3948 ;; Auto vars:     Size  Location     Type
  3949 ;;		None
  3950 ;; Return value:  Size  Location     Type
  3951 ;;                  1    wreg      void 
  3952 ;; Registers used:
  3953 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3954 ;; Tracked objects:
  3955 ;;		On entry : 0/0
  3956 ;;		On exit  : 0/0
  3957 ;;		Unchanged: 0/0
  3958 ;; Data sizes:     COMMON   BANK0   BANK1
  3959 ;;      Params:         0       0       0
  3960 ;;      Locals:         0       0       0
  3961 ;;      Temps:          0       0       0
  3962 ;;      Totals:         0       0       0
  3963 ;;Total ram usage:        0 bytes
  3964 ;; Hardware stack levels used:    1
  3965 ;; Hardware stack levels required when called:    3
  3966 ;; This function calls:
  3967 ;;		_HPOuUnit
  3968 ;;		_HPstart
  3969 ;; This function is called by:
  3970 ;;		_main
  3971 ;; This function uses a non-reentrant model
  3972 ;;
  3973                           
  3974                           
  3975                           ;psect for function _HPSystem
  3976  09E7                     _HPSystem:	
  3977                           
  3978                           ;HPsystem.c: 170: HPstart();
  3979                           
  3980                           ;incstack = 0
  3981                           ; Regs used in _HPSystem: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3982  09E7  118A  2534  158A   	fcall	_HPstart
  3983                           
  3984                           ;HPsystem.c: 171: HPOuUnit();
  3985  09EA  118A  2036         	fcall	_HPOuUnit
  3986  09EC  0008               	return
  3987  09ED                     __end_of_HPSystem:	
  3988                           
  3989                           	psect	text16
  3990  0534                     __ptext16:	
  3991 ;; *************** function _HPstart *****************
  3992 ;; Defined at:
  3993 ;;		line 14 in file "../HPsystem.c"
  3994 ;; Parameters:    Size  Location     Type
  3995 ;;		None
  3996 ;; Auto vars:     Size  Location     Type
  3997 ;;		None
  3998 ;; Return value:  Size  Location     Type
  3999 ;;                  1    wreg      void 
  4000 ;; Registers used:
  4001 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4002 ;; Tracked objects:
  4003 ;;		On entry : 0/0
  4004 ;;		On exit  : 0/0
  4005 ;;		Unchanged: 0/0
  4006 ;; Data sizes:     COMMON   BANK0   BANK1
  4007 ;;      Params:         0       0       0
  4008 ;;      Locals:         0       0       0
  4009 ;;      Temps:          0       2       0
  4010 ;;      Totals:         0       2       0
  4011 ;;Total ram usage:        2 bytes
  4012 ;; Hardware stack levels used:    1
  4013 ;; Hardware stack levels required when called:    2
  4014 ;; This function calls:
  4015 ;;		_UART_SendByte
  4016 ;;		_abs
  4017 ;;		_delay2ms
  4018 ;; This function is called by:
  4019 ;;		_HPSystem
  4020 ;; This function uses a non-reentrant model
  4021 ;;
  4022                           
  4023                           
  4024                           ;psect for function _HPstart
  4025  0534                     _HPstart:	
  4026                           
  4027                           ;HPsystem.c: 16: if((RB0==0)&&(T[3]<=46))
  4028                           
  4029                           ;incstack = 0
  4030                           ; Regs used in _HPstart: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4031  0534  1283               	bcf	3,5	;RP0=0, select bank0
  4032  0535  1303               	bcf	3,6	;RP1=0, select bank0
  4033  0536  1806               	btfsc	6,0	;volatile
  4034  0537  2DA0               	goto	l327
  4035  0538  1683               	bsf	3,5	;RP0=1, select bank1
  4036  0539  1303               	bcf	3,6	;RP1=0, select bank1
  4037  053A  0827               	movf	((_T+1)^(0+128)+6),w
  4038  053B  3A80               	xorlw	128
  4039  053C  00FF               	movwf	127
  4040  053D  3080               	movlw	128
  4041  053E  027F               	subwf	127,w
  4042  053F  1D03               	skipz
  4043  0540  2D43               	goto	u2445
  4044  0541  302F               	movlw	47
  4045  0542  0226               	subwf	(_T^(0+128)+6),w
  4046  0543                     u2445:	
  4047  0543  1803               	skipnc
  4048  0544  2DA0               	goto	l327
  4049                           
  4050                           ;HPsystem.c: 17: {
  4051                           ;HPsystem.c: 21: ff=0;
  4052  0545  1283               	bcf	3,5	;RP0=0, select bank0
  4053  0546  1303               	bcf	3,6	;RP1=0, select bank0
  4054  0547  01E7               	clrf	_ff
  4055  0548  01E8               	clrf	_ff+1
  4056                           
  4057                           ;HPsystem.c: 22: if(SysErr.P6)
  4058  0549  1F61               	btfss	_SysErr,6
  4059  054A  2D97               	goto	l1891
  4060                           
  4061                           ;HPsystem.c: 23: {
  4062                           ;HPsystem.c: 24: if(ee==0)
  4063  054B  0865               	movf	_ee,w
  4064  054C  0466               	iorwf	_ee+1,w
  4065  054D  1D03               	btfss	3,2
  4066  054E  2D5C               	goto	l329
  4067                           
  4068                           ;HPsystem.c: 25: {
  4069                           ;HPsystem.c: 26: {t2=Clock;ee++;}
  4070  054F  0873               	movf	_Clock,w
  4071  0550  00AB               	movwf	??_HPstart
  4072  0551  01AC               	clrf	??_HPstart+1
  4073  0552  082B               	movf	??_HPstart,w
  4074  0553  00ED               	movwf	_t2
  4075  0554  082C               	movf	??_HPstart+1,w
  4076  0555  00EE               	movwf	_t2+1
  4077  0556  3001               	movlw	1
  4078  0557  07E5               	addwf	_ee,f
  4079  0558  1803               	skipnc
  4080  0559  0AE6               	incf	_ee+1,f
  4081  055A  3000               	movlw	0
  4082  055B  07E6               	addwf	_ee+1,f
  4083  055C                     l329:	
  4084                           
  4085                           ;HPsystem.c: 27: }
  4086                           ;HPsystem.c: 28: ee++;
  4087  055C  3001               	movlw	1
  4088  055D  07E5               	addwf	_ee,f
  4089  055E  1803               	skipnc
  4090  055F  0AE6               	incf	_ee+1,f
  4091  0560  3000               	movlw	0
  4092  0561  07E6               	addwf	_ee+1,f
  4093                           
  4094                           ;HPsystem.c: 29: if((abs(Clock-t2)>10)&&(ee>30))
  4095  0562  096D               	comf	_t2,w
  4096  0563  00AB               	movwf	??_HPstart
  4097  0564  096E               	comf	_t2+1,w
  4098  0565  00AC               	movwf	??_HPstart+1
  4099  0566  0AAB               	incf	??_HPstart,f
  4100  0567  1903               	skipnz
  4101  0568  0AAC               	incf	??_HPstart+1,f
  4102  0569  0873               	movf	_Clock,w
  4103  056A  072B               	addwf	??_HPstart,w
  4104  056B  00A5               	movwf	abs@a
  4105  056C  082C               	movf	??_HPstart+1,w
  4106  056D  1803               	skipnc
  4107  056E  0A2C               	incf	??_HPstart+1,w
  4108  056F  00A6               	movwf	abs@a+1
  4109  0570  158A  2201  118A   	fcall	_abs
  4110  0573  1283               	bcf	3,5	;RP0=0, select bank0
  4111  0574  1303               	bcf	3,6	;RP1=0, select bank0
  4112  0575  0826               	movf	?_abs+1,w
  4113  0576  3A80               	xorlw	128
  4114  0577  00FF               	movwf	127
  4115  0578  3080               	movlw	128
  4116  0579  027F               	subwf	127,w
  4117  057A  1D03               	skipz
  4118  057B  2D7E               	goto	u2475
  4119  057C  300B               	movlw	11
  4120  057D  0225               	subwf	?_abs,w
  4121  057E                     u2475:	
  4122  057E  1C03               	skipc
  4123  057F  2E11               	goto	l1921
  4124  0580  1283               	bcf	3,5	;RP0=0, select bank0
  4125  0581  1303               	bcf	3,6	;RP1=0, select bank0
  4126  0582  0866               	movf	_ee+1,w
  4127  0583  3A80               	xorlw	128
  4128  0584  00FF               	movwf	127
  4129  0585  3080               	movlw	128
  4130  0586  027F               	subwf	127,w
  4131  0587  1D03               	skipz
  4132  0588  2D8B               	goto	u2485
  4133  0589  301F               	movlw	31
  4134  058A  0265               	subwf	_ee,w
  4135  058B                     u2485:	
  4136  058B  1C03               	skipc
  4137  058C  2E11               	goto	l1921
  4138                           
  4139                           ;HPsystem.c: 30: {Judge.Working=NoWork;
  4140  058D  30E3               	movlw	-29
  4141  058E  1283               	bcf	3,5	;RP0=0, select bank0
  4142  058F  1303               	bcf	3,6	;RP1=0, select bank0
  4143  0590  05DF               	andwf	_Judge,f
  4144                           
  4145                           ;HPsystem.c: 31: UART_SendByte(0xee); UART_SendByte(0xe6);
  4146  0591  30EE               	movlw	238
  4147  0592  118A  20F6  118A   	fcall	_UART_SendByte
  4148  0595  30E6               	movlw	230
  4149  0596  2E0E               	goto	L2
  4150  0597                     l1891:	
  4151                           ;HPsystem.c: 32: }
  4152                           ;HPsystem.c: 33: }
  4153                           
  4154                           
  4155                           ;HPsystem.c: 34: else
  4156                           ;HPsystem.c: 35: {
  4157                           ;HPsystem.c: 36: Judge.Working=WorkH;ee=0;}
  4158  0597  1283               	bcf	3,5	;RP0=0, select bank0
  4159  0598  1303               	bcf	3,6	;RP1=0, select bank0
  4160  0599  085F               	movf	_Judge,w
  4161  059A  39E3               	andlw	-29
  4162  059B  3808               	iorlw	8
  4163  059C  00DF               	movwf	_Judge
  4164  059D  01E5               	clrf	_ee
  4165  059E  01E6               	clrf	_ee+1
  4166                           
  4167                           ;HPsystem.c: 37: }
  4168  059F  2E11               	goto	l1921
  4169  05A0                     l327:	
  4170                           
  4171                           ;HPsystem.c: 38: else if(RB0==1) {
  4172  05A0  1283               	bcf	3,5	;RP0=0, select bank0
  4173  05A1  1303               	bcf	3,6	;RP1=0, select bank0
  4174  05A2  1C06               	btfss	6,0	;volatile
  4175  05A3  2E11               	goto	l1921
  4176                           
  4177                           ;HPsystem.c: 39: delay2ms(1);
  4178  05A4  3001               	movlw	1
  4179  05A5  00A5               	movwf	delay2ms@x
  4180  05A6  3000               	movlw	0
  4181  05A7  00A6               	movwf	delay2ms@x+1
  4182  05A8  158A  22AE  118A   	fcall	_delay2ms
  4183                           
  4184                           ;HPsystem.c: 41: if(ff==0)
  4185  05AB  1283               	bcf	3,5	;RP0=0, select bank0
  4186  05AC  1303               	bcf	3,6	;RP1=0, select bank0
  4187  05AD  0867               	movf	_ff,w
  4188  05AE  0468               	iorwf	_ff+1,w
  4189  05AF  1D03               	btfss	3,2
  4190  05B0  2DCC               	goto	l1907
  4191                           
  4192                           ;HPsystem.c: 42: {t1=Clock;ff++;UART_SendByte(0xee);UART_SendByte(0xFF);UART_SendByte(t1
      +                          );}
  4193  05B1  0873               	movf	_Clock,w
  4194  05B2  00AB               	movwf	??_HPstart
  4195  05B3  01AC               	clrf	??_HPstart+1
  4196  05B4  082B               	movf	??_HPstart,w
  4197  05B5  00EB               	movwf	_t1
  4198  05B6  082C               	movf	??_HPstart+1,w
  4199  05B7  00EC               	movwf	_t1+1
  4200  05B8  3001               	movlw	1
  4201  05B9  07E7               	addwf	_ff,f
  4202  05BA  1803               	skipnc
  4203  05BB  0AE8               	incf	_ff+1,f
  4204  05BC  3000               	movlw	0
  4205  05BD  07E8               	addwf	_ff+1,f
  4206  05BE  30EE               	movlw	238
  4207  05BF  118A  20F6  118A   	fcall	_UART_SendByte
  4208  05C2  30FF               	movlw	255
  4209  05C3  118A  20F6  118A   	fcall	_UART_SendByte
  4210  05C6  1283               	bcf	3,5	;RP0=0, select bank0
  4211  05C7  1303               	bcf	3,6	;RP1=0, select bank0
  4212  05C8  086B               	movf	_t1,w
  4213  05C9  118A  20F6  118A   	fcall	_UART_SendByte
  4214  05CC                     l1907:	
  4215                           
  4216                           ;HPsystem.c: 43: ff++;
  4217  05CC  3001               	movlw	1
  4218  05CD  1283               	bcf	3,5	;RP0=0, select bank0
  4219  05CE  1303               	bcf	3,6	;RP1=0, select bank0
  4220  05CF  07E7               	addwf	_ff,f
  4221  05D0  1803               	skipnc
  4222  05D1  0AE8               	incf	_ff+1,f
  4223  05D2  3000               	movlw	0
  4224  05D3  07E8               	addwf	_ff+1,f
  4225                           
  4226                           ;HPsystem.c: 44: if((abs(Clock-t1)>10)&&(ff>30))
  4227  05D4  096B               	comf	_t1,w
  4228  05D5  00AB               	movwf	??_HPstart
  4229  05D6  096C               	comf	_t1+1,w
  4230  05D7  00AC               	movwf	??_HPstart+1
  4231  05D8  0AAB               	incf	??_HPstart,f
  4232  05D9  1903               	skipnz
  4233  05DA  0AAC               	incf	??_HPstart+1,f
  4234  05DB  0873               	movf	_Clock,w
  4235  05DC  072B               	addwf	??_HPstart,w
  4236  05DD  00A5               	movwf	abs@a
  4237  05DE  082C               	movf	??_HPstart+1,w
  4238  05DF  1803               	skipnc
  4239  05E0  0A2C               	incf	??_HPstart+1,w
  4240  05E1  00A6               	movwf	abs@a+1
  4241  05E2  158A  2201  118A   	fcall	_abs
  4242  05E5  1283               	bcf	3,5	;RP0=0, select bank0
  4243  05E6  1303               	bcf	3,6	;RP1=0, select bank0
  4244  05E7  0826               	movf	?_abs+1,w
  4245  05E8  3A80               	xorlw	128
  4246  05E9  00FF               	movwf	127
  4247  05EA  3080               	movlw	128
  4248  05EB  027F               	subwf	127,w
  4249  05EC  1D03               	skipz
  4250  05ED  2DF0               	goto	u2515
  4251  05EE  300B               	movlw	11
  4252  05EF  0225               	subwf	?_abs,w
  4253  05F0                     u2515:	
  4254  05F0  1C03               	skipc
  4255  05F1  2E11               	goto	l1921
  4256  05F2  1283               	bcf	3,5	;RP0=0, select bank0
  4257  05F3  1303               	bcf	3,6	;RP1=0, select bank0
  4258  05F4  0868               	movf	_ff+1,w
  4259  05F5  3A80               	xorlw	128
  4260  05F6  00FF               	movwf	127
  4261  05F7  3080               	movlw	128
  4262  05F8  027F               	subwf	127,w
  4263  05F9  1D03               	skipz
  4264  05FA  2DFD               	goto	u2525
  4265  05FB  301F               	movlw	31
  4266  05FC  0267               	subwf	_ff,w
  4267  05FD                     u2525:	
  4268  05FD  1C03               	skipc
  4269  05FE  2E11               	goto	l1921
  4270                           
  4271                           ;HPsystem.c: 45: {Judge.Working=NoWork;
  4272  05FF  30E3               	movlw	-29
  4273  0600  1283               	bcf	3,5	;RP0=0, select bank0
  4274  0601  1303               	bcf	3,6	;RP1=0, select bank0
  4275  0602  05DF               	andwf	_Judge,f
  4276                           
  4277                           ;HPsystem.c: 46: UART_SendByte(0xee); UART_SendByte(0x1);UART_SendByte(Clock);
  4278  0603  30EE               	movlw	238
  4279  0604  118A  20F6  118A   	fcall	_UART_SendByte
  4280  0607  3001               	movlw	1
  4281  0608  118A  20F6  118A   	fcall	_UART_SendByte
  4282  060B  1283               	bcf	3,5	;RP0=0, select bank0
  4283  060C  1303               	bcf	3,6	;RP1=0, select bank0
  4284  060D  0873               	movf	_Clock,w
  4285  060E                     L2:	
  4286  060E  118A  20F6  118A   	fcall	_UART_SendByte
  4287  0611                     l1921:	
  4288                           
  4289                           ;HPsystem.c: 47: }
  4290                           ;HPsystem.c: 48: }
  4291                           ;HPsystem.c: 49: if(T[3]>50||T[4]>115)
  4292  0611  1683               	bsf	3,5	;RP0=1, select bank1
  4293  0612  1303               	bcf	3,6	;RP1=0, select bank1
  4294  0613  0827               	movf	((_T+1)^(0+128)+6),w
  4295  0614  3A80               	xorlw	128
  4296  0615  00FF               	movwf	127
  4297  0616  3080               	movlw	128
  4298  0617  027F               	subwf	127,w
  4299  0618  1D03               	skipz
  4300  0619  2E1C               	goto	u2535
  4301  061A  3033               	movlw	51
  4302  061B  0226               	subwf	(_T^(0+128)+6),w
  4303  061C                     u2535:	
  4304  061C  1803               	skipnc
  4305  061D  2E2B               	goto	l1925
  4306  061E  1683               	bsf	3,5	;RP0=1, select bank1
  4307  061F  1303               	bcf	3,6	;RP1=0, select bank1
  4308  0620  0829               	movf	((_T+1)^(0+128)+8),w
  4309  0621  3A80               	xorlw	128
  4310  0622  00FF               	movwf	127
  4311  0623  3080               	movlw	128
  4312  0624  027F               	subwf	127,w
  4313  0625  1D03               	skipz
  4314  0626  2E29               	goto	u2545
  4315  0627  3074               	movlw	116
  4316  0628  0228               	subwf	(_T^(0+128)+8),w
  4317  0629                     u2545:	
  4318  0629  1C03               	skipc
  4319  062A  0008               	return
  4320  062B                     l1925:	
  4321                           
  4322                           ;HPsystem.c: 50: { Judge.Working=NoWork;
  4323  062B  30E3               	movlw	-29
  4324  062C  1283               	bcf	3,5	;RP0=0, select bank0
  4325  062D  1303               	bcf	3,6	;RP1=0, select bank0
  4326  062E  05DF               	andwf	_Judge,f
  4327                           
  4328                           ;HPsystem.c: 51: UART_SendByte(0xee); UART_SendByte(0x2);
  4329  062F  30EE               	movlw	238
  4330  0630  118A  20F6  118A   	fcall	_UART_SendByte
  4331  0633  3002               	movlw	2
  4332  0634  118A  20F6         	fcall	_UART_SendByte
  4333  0636  0008               	return
  4334  0637                     __end_of_HPstart:	
  4335                           
  4336                           	psect	text17
  4337  0A01                     __ptext17:	
  4338 ;; *************** function _abs *****************
  4339 ;; Defined at:
  4340 ;;		line 4 in file "G:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\abs.c"
  4341 ;; Parameters:    Size  Location     Type
  4342 ;;  a               2    5[BANK0 ] int 
  4343 ;; Auto vars:     Size  Location     Type
  4344 ;;		None
  4345 ;; Return value:  Size  Location     Type
  4346 ;;                  2    5[BANK0 ] int 
  4347 ;; Registers used:
  4348 ;;		wreg, status,2, status,0
  4349 ;; Tracked objects:
  4350 ;;		On entry : 0/0
  4351 ;;		On exit  : 0/0
  4352 ;;		Unchanged: 0/0
  4353 ;; Data sizes:     COMMON   BANK0   BANK1
  4354 ;;      Params:         0       2       0
  4355 ;;      Locals:         0       0       0
  4356 ;;      Temps:          0       2       0
  4357 ;;      Totals:         0       4       0
  4358 ;;Total ram usage:        4 bytes
  4359 ;; Hardware stack levels used:    1
  4360 ;; Hardware stack levels required when called:    1
  4361 ;; This function calls:
  4362 ;;		Nothing
  4363 ;; This function is called by:
  4364 ;;		_HPstart
  4365 ;; This function uses a non-reentrant model
  4366 ;;
  4367                           
  4368                           
  4369                           ;psect for function _abs
  4370  0A01                     _abs:	
  4371                           
  4372                           ;incstack = 0
  4373                           ; Regs used in _abs: [wreg+status,2+status,0]
  4374  0A01  1283               	bcf	3,5	;RP0=0, select bank0
  4375  0A02  1303               	bcf	3,6	;RP1=0, select bank0
  4376  0A03  1FA6               	btfss	abs@a+1,7
  4377  0A04  0008               	return
  4378  0A05  0925               	comf	abs@a,w
  4379  0A06  00A7               	movwf	??_abs
  4380  0A07  0926               	comf	abs@a+1,w
  4381  0A08  00A8               	movwf	??_abs+1
  4382  0A09  0AA7               	incf	??_abs,f
  4383  0A0A  1903               	skipnz
  4384  0A0B  0AA8               	incf	??_abs+1,f
  4385  0A0C  0827               	movf	??_abs,w
  4386  0A0D  00A5               	movwf	?_abs
  4387  0A0E  0828               	movf	??_abs+1,w
  4388  0A0F  00A6               	movwf	?_abs+1
  4389  0A10  0008               	return
  4390  0A11                     __end_of_abs:	
  4391                           
  4392                           	psect	text18
  4393  0036                     __ptext18:	
  4394 ;; *************** function _HPOuUnit *****************
  4395 ;; Defined at:
  4396 ;;		line 60 in file "../HPsystem.c"
  4397 ;; Parameters:    Size  Location     Type
  4398 ;;		None
  4399 ;; Auto vars:     Size  Location     Type
  4400 ;;		None
  4401 ;; Return value:  Size  Location     Type
  4402 ;;                  1    wreg      void 
  4403 ;; Registers used:
  4404 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4405 ;; Tracked objects:
  4406 ;;		On entry : 0/0
  4407 ;;		On exit  : 0/0
  4408 ;;		Unchanged: 0/0
  4409 ;; Data sizes:     COMMON   BANK0   BANK1
  4410 ;;      Params:         0       0       0
  4411 ;;      Locals:         0       0       0
  4412 ;;      Temps:          0       1       0
  4413 ;;      Totals:         0       1       0
  4414 ;;Total ram usage:        1 bytes
  4415 ;; Hardware stack levels used:    1
  4416 ;; Hardware stack levels required when called:    2
  4417 ;; This function calls:
  4418 ;;		_HPShut
  4419 ;;		_UART_SendByte
  4420 ;; This function is called by:
  4421 ;;		_HPSystem
  4422 ;; This function uses a non-reentrant model
  4423 ;;
  4424                           
  4425                           
  4426                           ;psect for function _HPOuUnit
  4427  0036                     _HPOuUnit:	
  4428                           
  4429                           ;HPsystem.c: 62: if (Judge.Working==NoWork)
  4430                           
  4431                           ;incstack = 0
  4432                           ; Regs used in _HPOuUnit: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4433  0036  1283               	bcf	3,5	;RP0=0, select bank0
  4434  0037  1303               	bcf	3,6	;RP1=0, select bank0
  4435  0038  0C5F               	rrf	_Judge,w
  4436  0039  00A6               	movwf	??_HPOuUnit
  4437  003A  0C26               	rrf	??_HPOuUnit,w
  4438  003B  3907               	andlw	7
  4439  003C  3A00               	xorlw	0
  4440  003D  1D03               	skipz
  4441  003E  2842               	goto	l1935
  4442                           
  4443                           ;HPsystem.c: 63: {HPShut();}
  4444  003F  158A  2461         	fcall	_HPShut
  4445  0041  0008               	return
  4446  0042                     l1935:	
  4447                           
  4448                           ;HPsystem.c: 64: else if (Judge.Working)
  4449  0042  1283               	bcf	3,5	;RP0=0, select bank0
  4450  0043  1303               	bcf	3,6	;RP1=0, select bank0
  4451  0044  0C5F               	rrf	_Judge,w
  4452  0045  00A6               	movwf	??_HPOuUnit
  4453  0046  0C26               	rrf	??_HPOuUnit,w
  4454  0047  3907               	andlw	7
  4455  0048  3A00               	xorlw	0
  4456  0049  1903               	skipnz
  4457  004A  0008               	return
  4458                           
  4459                           ;HPsystem.c: 65: {
  4460                           ;HPsystem.c: 67: if (Judge.Defog)
  4461  004B  1D60               	btfss	_Judge+1,2
  4462  004C  28A7               	goto	l1973
  4463                           
  4464                           ;HPsystem.c: 68: {UART_SendByte(0xee); UART_SendByte(0xDF);
  4465  004D  30EE               	movlw	238
  4466  004E  118A  20F6  118A   	fcall	_UART_SendByte
  4467  0051  30DF               	movlw	223
  4468  0052  118A  20F6  118A   	fcall	_UART_SendByte
  4469                           
  4470                           ;HPsystem.c: 70: if (Judge.DefogStop)
  4471  0055  1283               	bcf	3,5	;RP0=0, select bank0
  4472  0056  1303               	bcf	3,6	;RP1=0, select bank0
  4473  0057  1E60               	btfss	_Judge+1,4
  4474  0058  286B               	goto	l1955
  4475                           
  4476                           ;HPsystem.c: 71: {
  4477                           ;HPsystem.c: 72: if (TM.DefogStop>=30)
  4478  0059  301E               	movlw	30
  4479  005A  025B               	subwf	_TM+5,w
  4480  005B  1C03               	skipc
  4481  005C  2862               	goto	l1951
  4482                           
  4483                           ;HPsystem.c: 73: {
  4484                           ;HPsystem.c: 74: Judge.DefogStop=0;Judge.Defog=0;
  4485  005D  1260               	bcf	_Judge+1,4
  4486  005E  1160               	bcf	_Judge+1,2
  4487                           
  4488                           ;HPsystem.c: 75: TM.DefogStop=0;RelayS.Com=1;
  4489  005F  01DB               	clrf	_TM+5
  4490  0060  146F               	bsf	_RelayS,0
  4491                           
  4492                           ;HPsystem.c: 76: }
  4493  0061  0008               	return
  4494  0062                     l1951:	
  4495                           
  4496                           ;HPsystem.c: 77: else if (TM.DefogStop>=25)
  4497  0062  3019               	movlw	25
  4498  0063  025B               	subwf	_TM+5,w
  4499  0064  1C03               	skipc
  4500  0065  2868               	goto	l349
  4501                           
  4502                           ;HPsystem.c: 78: {RelayS.Fway=0;}
  4503  0066  11EF               	bcf	_RelayS,3
  4504  0067  0008               	return
  4505  0068                     l349:	
  4506                           
  4507                           ;HPsystem.c: 79: else {RelayS.Com=0;RelayS.Fan=1;}
  4508  0068  106F               	bcf	_RelayS,0
  4509  0069  156F               	bsf	_RelayS,2
  4510                           
  4511                           ;HPsystem.c: 80: }
  4512  006A  0008               	return
  4513  006B                     l1955:	
  4514                           
  4515                           ;HPsystem.c: 82: else if (TM.Defoging>4800)
  4516  006B  3012               	movlw	18
  4517  006C  025D               	subwf	_TM+7,w
  4518  006D  30C1               	movlw	193
  4519  006E  1903               	skipnz
  4520  006F  025C               	subwf	_TM+6,w
  4521  0070  1C03               	skipc
  4522  0071  2876               	goto	l1959
  4523                           
  4524                           ;HPsystem.c: 83: {Judge.DefogStop=1;TM.DefogStop=1;}
  4525  0072  1660               	bsf	_Judge+1,4
  4526  0073  01DB               	clrf	_TM+5
  4527  0074  0ADB               	incf	_TM+5,f
  4528  0075  0008               	return
  4529  0076                     l1959:	
  4530                           
  4531                           ;HPsystem.c: 84: else if ((TM.Defoging>120)&&(T[UP]>10))
  4532  0076  3000               	movlw	0
  4533  0077  025D               	subwf	_TM+7,w
  4534  0078  3079               	movlw	121
  4535  0079  1903               	skipnz
  4536  007A  025C               	subwf	_TM+6,w
  4537  007B  1C03               	skipc
  4538  007C  2890               	goto	l1965
  4539  007D  1683               	bsf	3,5	;RP0=1, select bank1
  4540  007E  1303               	bcf	3,6	;RP1=0, select bank1
  4541  007F  0821               	movf	(_T+1)^(0+128),w
  4542  0080  3A80               	xorlw	128
  4543  0081  00FF               	movwf	127
  4544  0082  3080               	movlw	128
  4545  0083  027F               	subwf	127,w
  4546  0084  1D03               	skipz
  4547  0085  2888               	goto	u2635
  4548  0086  300B               	movlw	11
  4549  0087  0220               	subwf	_T^(0+128),w
  4550  0088                     u2635:	
  4551  0088  1C03               	skipc
  4552  0089  2890               	goto	l1965
  4553                           
  4554                           ;HPsystem.c: 85: {Judge.DefogStop=1;TM.DefogStop=1;}
  4555  008A  1283               	bcf	3,5	;RP0=0, select bank0
  4556  008B  1303               	bcf	3,6	;RP1=0, select bank0
  4557  008C  1660               	bsf	_Judge+1,4
  4558  008D  01DB               	clrf	_TM+5
  4559  008E  0ADB               	incf	_TM+5,f
  4560  008F  0008               	return
  4561  0090                     l1965:	
  4562                           
  4563                           ;HPsystem.c: 87: else if (TM.Defoging>60)
  4564  0090  3000               	movlw	0
  4565  0091  1283               	bcf	3,5	;RP0=0, select bank0
  4566  0092  1303               	bcf	3,6	;RP1=0, select bank0
  4567  0093  025D               	subwf	_TM+7,w
  4568  0094  303D               	movlw	61
  4569  0095  1903               	skipnz
  4570  0096  025C               	subwf	_TM+6,w
  4571  0097  1C03               	skipc
  4572  0098  289B               	goto	l1969
  4573                           
  4574                           ;HPsystem.c: 88: {
  4575                           ;HPsystem.c: 89: RelayS.Com=1;}
  4576  0099  146F               	bsf	_RelayS,0
  4577  009A  0008               	return
  4578  009B                     l1969:	
  4579                           
  4580                           ;HPsystem.c: 90: else if (TM.Defoging>30)
  4581  009B  3000               	movlw	0
  4582  009C  025D               	subwf	_TM+7,w
  4583  009D  301F               	movlw	31
  4584  009E  1903               	skipnz
  4585  009F  025C               	subwf	_TM+6,w
  4586  00A0  1C03               	skipc
  4587  00A1  28A4               	goto	l358
  4588                           
  4589                           ;HPsystem.c: 91: {RelayS.Fway=1;}
  4590  00A2  15EF               	bsf	_RelayS,3
  4591  00A3  0008               	return
  4592  00A4                     l358:	
  4593                           
  4594                           ;HPsystem.c: 92: else {RelayS.Com=0;RelayS.Fan=0;}
  4595  00A4  106F               	bcf	_RelayS,0
  4596  00A5  116F               	bcf	_RelayS,2
  4597                           
  4598                           ;HPsystem.c: 93: }
  4599  00A6  0008               	return
  4600  00A7                     l1973:	
  4601                           
  4602                           ;HPsystem.c: 95: else if((TM.ComStop>=180)||(!TM.ComStop))
  4603  00A7  30B4               	movlw	180
  4604  00A8  025A               	subwf	_TM+4,w
  4605  00A9  1803               	skipnc
  4606  00AA  28AE               	goto	l363
  4607  00AB  085A               	movf	_TM+4,w
  4608  00AC  1D03               	btfss	3,2
  4609  00AD  0008               	return
  4610  00AE                     l363:	
  4611                           
  4612                           ;HPsystem.c: 96: {
  4613                           ;HPsystem.c: 97: RelayS.Fway=0;
  4614  00AE  11EF               	bcf	_RelayS,3
  4615                           
  4616                           ;HPsystem.c: 98: if (TM.DefogScan>=40)
  4617  00AF  085E               	movf	_TM+8,w
  4618  00B0  393F               	andlw	63
  4619  00B1  00A6               	movwf	??_HPOuUnit
  4620  00B2  3028               	movlw	40
  4621  00B3  0226               	subwf	??_HPOuUnit,w
  4622  00B4  1C03               	skipc
  4623  00B5  28D2               	goto	l1987
  4624                           
  4625                           ;HPsystem.c: 99: {
  4626                           ;HPsystem.c: 100: if ((T[UP]<-1)&&(T[E]<0))
  4627  00B6  1683               	bsf	3,5	;RP0=1, select bank1
  4628  00B7  1303               	bcf	3,6	;RP1=0, select bank1
  4629  00B8  0821               	movf	(_T+1)^(0+128),w
  4630  00B9  3A80               	xorlw	128
  4631  00BA  00FF               	movwf	127
  4632  00BB  307F               	movlw	127
  4633  00BC  027F               	subwf	127,w
  4634  00BD  1D03               	skipz
  4635  00BE  28C1               	goto	u2695
  4636  00BF  30FF               	movlw	255
  4637  00C0  0220               	subwf	_T^(0+128),w
  4638  00C1                     u2695:	
  4639  00C1  1803               	skipnc
  4640  00C2  0008               	return
  4641  00C3  3002               	movlw	2
  4642  00C4  3EA0               	addlw	(low (_T| 0))& (0+255)
  4643  00C5  0084               	movwf	4
  4644  00C6  0A84               	incf	4,f
  4645  00C7  1383               	bcf	3,7	;select IRP bank1
  4646  00C8  1F80               	btfss	0,7
  4647  00C9  0008               	return
  4648                           
  4649                           ;HPsystem.c: 101: {Judge.Defog=1;TM.Defoging=1;}
  4650  00CA  1283               	bcf	3,5	;RP0=0, select bank0
  4651  00CB  1303               	bcf	3,6	;RP1=0, select bank0
  4652  00CC  1560               	bsf	_Judge+1,2
  4653  00CD  3001               	movlw	1
  4654  00CE  00DC               	movwf	_TM+6
  4655  00CF  3000               	movlw	0
  4656  00D0  00DD               	movwf	_TM+7
  4657                           
  4658                           ;HPsystem.c: 102: }
  4659  00D1  0008               	return
  4660  00D2                     l1987:	
  4661                           
  4662                           ;HPsystem.c: 103: else if (TM.PumpRun>=30)
  4663  00D2  301E               	movlw	30
  4664  00D3  0256               	subwf	_TM,w
  4665  00D4  1C03               	skipc
  4666  00D5  28E7               	goto	l2001
  4667                           
  4668                           ;HPsystem.c: 104: {
  4669                           ;HPsystem.c: 105: RelayS.Com=1;
  4670  00D6  146F               	bsf	_RelayS,0
  4671                           
  4672                           ;HPsystem.c: 106: if(!TM.ComRun)
  4673  00D7  0859               	movf	_TM+3,w
  4674  00D8  1D03               	btfss	3,2
  4675  00D9  28DC               	goto	l1995
  4676                           
  4677                           ;HPsystem.c: 107: TM.ComRun=1;
  4678  00DA  01D9               	clrf	_TM+3
  4679  00DB  0AD9               	incf	_TM+3,f
  4680  00DC                     l1995:	
  4681                           
  4682                           ;HPsystem.c: 108: TM.ComStop=0;
  4683  00DC  01DA               	clrf	_TM+4
  4684                           
  4685                           ;HPsystem.c: 109: if(!TM.DefogScan)
  4686  00DD  085E               	movf	_TM+8,w
  4687  00DE  393F               	andlw	63
  4688  00DF  3A00               	xorlw	0
  4689  00E0  1D03               	skipz
  4690  00E1  0008               	return
  4691                           
  4692                           ;HPsystem.c: 110: TM.DefogScan=1;
  4693  00E2  085E               	movf	_TM+8,w
  4694  00E3  39C0               	andlw	-64
  4695  00E4  3801               	iorlw	1
  4696  00E5  00DE               	movwf	_TM+8
  4697                           
  4698                           ;HPsystem.c: 111: }
  4699  00E6  0008               	return
  4700  00E7                     l2001:	
  4701                           
  4702                           ;HPsystem.c: 112: else if (TM.PumpRun>=25)
  4703  00E7  3019               	movlw	25
  4704  00E8  0256               	subwf	_TM,w
  4705  00E9  1C03               	skipc
  4706  00EA  28ED               	goto	l371
  4707                           
  4708                           ;HPsystem.c: 113: {RelayS.Fan=1;}
  4709  00EB  156F               	bsf	_RelayS,2
  4710  00EC  0008               	return
  4711  00ED                     l371:	
  4712                           
  4713                           ;HPsystem.c: 114: else
  4714                           ;HPsystem.c: 115: {
  4715                           ;HPsystem.c: 116: RelayS.Pump=1;
  4716  00ED  14EF               	bsf	_RelayS,1
  4717                           
  4718                           ;HPsystem.c: 117: TM.PumpStop=0;
  4719  00EE  01D7               	clrf	_TM+1
  4720  00EF  01D8               	clrf	_TM+2
  4721                           
  4722                           ;HPsystem.c: 118: if (!TM.PumpRun)
  4723  00F0  0856               	movf	_TM,w
  4724  00F1  1D03               	btfss	3,2
  4725  00F2  0008               	return
  4726                           
  4727                           ;HPsystem.c: 119: {TM.PumpRun=1;}
  4728  00F3  01D6               	clrf	_TM
  4729  00F4  0AD6               	incf	_TM,f
  4730  00F5  0008               	return
  4731  00F6                     __end_of_HPOuUnit:	
  4732                           
  4733                           	psect	text19
  4734  0C61                     __ptext19:	
  4735 ;; *************** function _HPShut *****************
  4736 ;; Defined at:
  4737 ;;		line 124 in file "../HPsystem.c"
  4738 ;; Parameters:    Size  Location     Type
  4739 ;;		None
  4740 ;; Auto vars:     Size  Location     Type
  4741 ;;		None
  4742 ;; Return value:  Size  Location     Type
  4743 ;;                  1    wreg      void 
  4744 ;; Registers used:
  4745 ;;		wreg, status,2, status,0, btemp+1
  4746 ;; Tracked objects:
  4747 ;;		On entry : 0/0
  4748 ;;		On exit  : 0/0
  4749 ;;		Unchanged: 0/0
  4750 ;; Data sizes:     COMMON   BANK0   BANK1
  4751 ;;      Params:         0       0       0
  4752 ;;      Locals:         0       0       0
  4753 ;;      Temps:          0       0       0
  4754 ;;      Totals:         0       0       0
  4755 ;;Total ram usage:        0 bytes
  4756 ;; Hardware stack levels used:    1
  4757 ;; Hardware stack levels required when called:    1
  4758 ;; This function calls:
  4759 ;;		Nothing
  4760 ;; This function is called by:
  4761 ;;		_HPOuUnit
  4762 ;; This function uses a non-reentrant model
  4763 ;;
  4764                           
  4765                           
  4766                           ;psect for function _HPShut
  4767  0C61                     _HPShut:	
  4768                           
  4769                           ;HPsystem.c: 126: if (TM.PumpStop>=360)
  4770                           
  4771                           ;incstack = 0
  4772                           ; Regs used in _HPShut: [wreg+status,2+status,0+btemp+1]
  4773  0C61  3001               	movlw	1
  4774  0C62  1283               	bcf	3,5	;RP0=0, select bank0
  4775  0C63  1303               	bcf	3,6	;RP1=0, select bank0
  4776  0C64  0258               	subwf	_TM+2,w
  4777  0C65  3068               	movlw	104
  4778  0C66  1903               	skipnz
  4779  0C67  0257               	subwf	_TM+1,w
  4780  0C68  1C03               	skipc
  4781  0C69  2C91               	goto	l1725
  4782                           
  4783                           ;HPsystem.c: 127: {
  4784                           ;HPsystem.c: 129: if (T[E]>1)
  4785  0C6A  1683               	bsf	3,5	;RP0=1, select bank1
  4786  0C6B  1303               	bcf	3,6	;RP1=0, select bank1
  4787  0C6C  0823               	movf	((_T+1)^(0+128)+2),w
  4788  0C6D  3A80               	xorlw	128
  4789  0C6E  00FF               	movwf	127
  4790  0C6F  3080               	movlw	128
  4791  0C70  027F               	subwf	127,w
  4792  0C71  1D03               	skipz
  4793  0C72  2C75               	goto	u1985
  4794  0C73  3002               	movlw	2
  4795  0C74  0222               	subwf	(_T^(0+128)+2),w
  4796  0C75                     u1985:	
  4797  0C75  1C03               	skipc
  4798  0C76  2C7E               	goto	l378
  4799                           
  4800                           ;HPsystem.c: 130: {TM.PumpStop=1;}
  4801  0C77  3001               	movlw	1
  4802  0C78  1283               	bcf	3,5	;RP0=0, select bank0
  4803  0C79  1303               	bcf	3,6	;RP1=0, select bank0
  4804  0C7A  00D7               	movwf	_TM+1
  4805  0C7B  3000               	movlw	0
  4806  0C7C  00D8               	movwf	_TM+2
  4807  0C7D  0008               	return
  4808  0C7E                     l378:	
  4809                           
  4810                           ;HPsystem.c: 131: else
  4811                           ;HPsystem.c: 132: {
  4812                           ;HPsystem.c: 133: RelayS.Pump=1;
  4813  0C7E  1283               	bcf	3,5	;RP0=0, select bank0
  4814  0C7F  1303               	bcf	3,6	;RP1=0, select bank0
  4815  0C80  14EF               	bsf	_RelayS,1
  4816                           
  4817                           ;HPsystem.c: 134: if (!TM.PumpRun)
  4818  0C81  0856               	movf	_TM,w
  4819  0C82  1D03               	btfss	3,2
  4820  0C83  2C87               	goto	l1719
  4821                           
  4822                           ;HPsystem.c: 135: {TM.PumpRun=1;}
  4823  0C84  01D6               	clrf	_TM
  4824  0C85  0AD6               	incf	_TM,f
  4825  0C86  0008               	return
  4826  0C87                     l1719:	
  4827                           
  4828                           ;HPsystem.c: 136: else if (TM.PumpRun>=60)
  4829  0C87  303C               	movlw	60
  4830  0C88  0256               	subwf	_TM,w
  4831  0C89  1C03               	skipc
  4832  0C8A  0008               	return
  4833                           
  4834                           ;HPsystem.c: 137: {TM.PumpRun=0;TM.PumpStop=1;}
  4835  0C8B  01D6               	clrf	_TM
  4836  0C8C  3001               	movlw	1
  4837  0C8D  00D7               	movwf	_TM+1
  4838  0C8E  3000               	movlw	0
  4839  0C8F  00D8               	movwf	_TM+2
  4840                           
  4841                           ;HPsystem.c: 138: }
  4842                           ;HPsystem.c: 139: }
  4843  0C90  0008               	return
  4844  0C91                     l1725:	
  4845                           
  4846                           ;HPsystem.c: 140: else if(TM.ComRun>=120)
  4847  0C91  3078               	movlw	120
  4848  0C92  0259               	subwf	_TM+3,w
  4849  0C93  1C03               	skipc
  4850  0C94  2C9D               	goto	l1735
  4851                           
  4852                           ;HPsystem.c: 141: {
  4853                           ;HPsystem.c: 144: RelayS.Com=0;TM.ComRun=0;
  4854  0C95  106F               	bcf	_RelayS,0
  4855  0C96  01D9               	clrf	_TM+3
  4856                           
  4857                           ;HPsystem.c: 146: if (!TM.ComStop)
  4858  0C97  085A               	movf	_TM+4,w
  4859  0C98  1D03               	btfss	3,2
  4860  0C99  0008               	return
  4861                           
  4862                           ;HPsystem.c: 147: {TM.ComStop=1;}
  4863  0C9A  01DA               	clrf	_TM+4
  4864  0C9B  0ADA               	incf	_TM+4,f
  4865                           
  4866                           ;HPsystem.c: 149: }
  4867  0C9C  0008               	return
  4868  0C9D                     l1735:	
  4869                           
  4870                           ;HPsystem.c: 152: else if (TM.ComStop>=35||(TM.ComRun==0&&TM.ComStop==0))
  4871  0C9D  3023               	movlw	35
  4872  0C9E  025A               	subwf	_TM+4,w
  4873  0C9F  1803               	skipnc
  4874  0CA0  2CA7               	goto	l389
  4875  0CA1  0859               	movf	_TM+3,w
  4876  0CA2  1D03               	btfss	3,2
  4877  0CA3  0008               	return
  4878  0CA4  085A               	movf	_TM+4,w
  4879  0CA5  1D03               	btfss	3,2
  4880  0CA6  0008               	return
  4881  0CA7                     l389:	
  4882                           
  4883                           ;HPsystem.c: 153: { RelayS.Pump=0;TM.PumpRun=0;
  4884  0CA7  10EF               	bcf	_RelayS,1
  4885  0CA8  01D6               	clrf	_TM
  4886                           
  4887                           ;HPsystem.c: 154: if (!TM.PumpStop)
  4888  0CA9  0857               	movf	_TM+1,w
  4889  0CAA  0458               	iorwf	_TM+2,w
  4890  0CAB  1D03               	btfss	3,2
  4891  0CAC  2CB1               	goto	l390
  4892                           
  4893                           ;HPsystem.c: 155: {TM.PumpStop=1;}
  4894  0CAD  3001               	movlw	1
  4895  0CAE  00D7               	movwf	_TM+1
  4896  0CAF  3000               	movlw	0
  4897  0CB0  00D8               	movwf	_TM+2
  4898  0CB1                     l390:	
  4899                           
  4900                           ;HPsystem.c: 156: if (TM.ComStop>=40||(TM.ComRun==0&&TM.ComStop==0))
  4901  0CB1  3028               	movlw	40
  4902  0CB2  025A               	subwf	_TM+4,w
  4903  0CB3  1803               	skipnc
  4904  0CB4  2CBB               	goto	l393
  4905  0CB5  0859               	movf	_TM+3,w
  4906  0CB6  1D03               	btfss	3,2
  4907  0CB7  0008               	return
  4908  0CB8  085A               	movf	_TM+4,w
  4909  0CB9  1D03               	btfss	3,2
  4910  0CBA  0008               	return
  4911  0CBB                     l393:	
  4912                           
  4913                           ;HPsystem.c: 158: {
  4914                           ;HPsystem.c: 159: RelayS.Fan=0;
  4915  0CBB  116F               	bcf	_RelayS,2
  4916  0CBC  0008               	return
  4917  0CBD                     __end_of_HPShut:	
  4918                           
  4919                           	psect	text20
  4920  0F2E                     __ptext20:	
  4921 ;; *************** function _DriveTime *****************
  4922 ;; Defined at:
  4923 ;;		line 64 in file "../DriveTime.c"
  4924 ;; Parameters:    Size  Location     Type
  4925 ;;		None
  4926 ;; Auto vars:     Size  Location     Type
  4927 ;;  i               2   17[BANK0 ] int 
  4928 ;; Return value:  Size  Location     Type
  4929 ;;                  1    wreg      void 
  4930 ;; Registers used:
  4931 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4932 ;; Tracked objects:
  4933 ;;		On entry : 0/0
  4934 ;;		On exit  : 0/0
  4935 ;;		Unchanged: 0/0
  4936 ;; Data sizes:     COMMON   BANK0   BANK1
  4937 ;;      Params:         0       0       0
  4938 ;;      Locals:         0       2       0
  4939 ;;      Temps:          0       1       0
  4940 ;;      Totals:         0       3       0
  4941 ;;Total ram usage:        3 bytes
  4942 ;; Hardware stack levels used:    1
  4943 ;; Hardware stack levels required when called:    4
  4944 ;; This function calls:
  4945 ;;		_CountClk
  4946 ;;		_CountMin
  4947 ;;		_DriveEEV
  4948 ;;		_UART_SendByte
  4949 ;; This function is called by:
  4950 ;;		_main
  4951 ;; This function uses a non-reentrant model
  4952 ;;
  4953                           
  4954                           
  4955                           ;psect for function _DriveTime
  4956  0F2E                     _DriveTime:	
  4957                           
  4958                           ;DriveTime.c: 66: if (Judge.Interrupt)
  4959                           
  4960                           ;incstack = 0
  4961                           ; Regs used in _DriveTime: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4962  0F2E  1283               	bcf	3,5	;RP0=0, select bank0
  4963  0F2F  1303               	bcf	3,6	;RP1=0, select bank0
  4964  0F30  1C5F               	btfss	_Judge,0
  4965  0F31  0008               	return
  4966                           
  4967                           ;DriveTime.c: 67: {
  4968                           ;DriveTime.c: 68: Judge.Interrupt=0;
  4969  0F32  105F               	bcf	_Judge,0
  4970                           
  4971                           ;DriveTime.c: 69: InterTimes--;
  4972  0F33  3001               	movlw	1
  4973  0F34  02F4               	subwf	_InterTimes,f
  4974                           
  4975                           ;DriveTime.c: 71: if(InterTimes==31)
  4976  0F35  301F               	movlw	31
  4977  0F36  0674               	xorwf	_InterTimes,w
  4978  0F37  1D03               	btfss	3,2
  4979  0F38  2F80               	goto	l59
  4980                           
  4981                           ;DriveTime.c: 72: {
  4982                           ;DriveTime.c: 74: RC4=~RC4;
  4983  0F39  3010               	movlw	16
  4984  0F3A  0687               	xorwf	7,f
  4985                           
  4986                           ;DriveTime.c: 75: UART_SendByte(RB7);
  4987  0F3B  3000               	movlw	0
  4988  0F3C  1B86               	btfsc	6,7	;volatile
  4989  0F3D  3001               	movlw	1
  4990  0F3E  118A  20F6  158A   	fcall	_UART_SendByte
  4991                           
  4992                           ;DriveTime.c: 76: UART_SendByte(RB4);
  4993  0F41  3000               	movlw	0
  4994  0F42  1283               	bcf	3,5	;RP0=0, select bank0
  4995  0F43  1303               	bcf	3,6	;RP1=0, select bank0
  4996  0F44  1A06               	btfsc	6,4	;volatile
  4997  0F45  3001               	movlw	1
  4998  0F46  118A  20F6  158A   	fcall	_UART_SendByte
  4999                           
  5000                           ;DriveTime.c: 77: UART_SendByte(RB5);
  5001  0F49  3000               	movlw	0
  5002  0F4A  1283               	bcf	3,5	;RP0=0, select bank0
  5003  0F4B  1303               	bcf	3,6	;RP1=0, select bank0
  5004  0F4C  1A86               	btfsc	6,5	;volatile
  5005  0F4D  3001               	movlw	1
  5006  0F4E  118A  20F6  158A   	fcall	_UART_SendByte
  5007                           
  5008                           ;DriveTime.c: 78: UART_SendByte(RB0);
  5009  0F51  3000               	movlw	0
  5010  0F52  1283               	bcf	3,5	;RP0=0, select bank0
  5011  0F53  1303               	bcf	3,6	;RP1=0, select bank0
  5012  0F54  1806               	btfsc	6,0	;volatile
  5013  0F55  3001               	movlw	1
  5014  0F56  118A  20F6  158A   	fcall	_UART_SendByte
  5015                           
  5016                           ;DriveTime.c: 79: UART_SendByte(RB1);
  5017  0F59  3000               	movlw	0
  5018  0F5A  1283               	bcf	3,5	;RP0=0, select bank0
  5019  0F5B  1303               	bcf	3,6	;RP1=0, select bank0
  5020  0F5C  1886               	btfsc	6,1	;volatile
  5021  0F5D  3001               	movlw	1
  5022  0F5E  118A  20F6  158A   	fcall	_UART_SendByte
  5023                           
  5024                           ;DriveTime.c: 80: UART_SendByte(RB2);
  5025  0F61  3000               	movlw	0
  5026  0F62  1283               	bcf	3,5	;RP0=0, select bank0
  5027  0F63  1303               	bcf	3,6	;RP1=0, select bank0
  5028  0F64  1906               	btfsc	6,2	;volatile
  5029  0F65  3001               	movlw	1
  5030  0F66  118A  20F6  158A   	fcall	_UART_SendByte
  5031                           
  5032                           ;DriveTime.c: 81: UART_SendByte(PORTB);
  5033  0F69  1283               	bcf	3,5	;RP0=0, select bank0
  5034  0F6A  1303               	bcf	3,6	;RP1=0, select bank0
  5035  0F6B  0806               	movf	6,w	;volatile
  5036  0F6C  118A  20F6  158A   	fcall	_UART_SendByte
  5037                           
  5038                           ;DriveTime.c: 82: UART_SendByte(EEVSTEP);
  5039  0F6F  1283               	bcf	3,5	;RP0=0, select bank0
  5040  0F70  1303               	bcf	3,6	;RP1=0, select bank0
  5041  0F71  0871               	movf	_EEVSTEP,w
  5042  0F72  118A  20F6  158A   	fcall	_UART_SendByte
  5043                           
  5044                           ;DriveTime.c: 83: UART_SendByte(EEVSTEP>>8);
  5045  0F75  1283               	bcf	3,5	;RP0=0, select bank0
  5046  0F76  1303               	bcf	3,6	;RP1=0, select bank0
  5047  0F77  0872               	movf	_EEVSTEP+1,w
  5048  0F78  118A  20F6  158A   	fcall	_UART_SendByte
  5049                           
  5050                           ;DriveTime.c: 84: UART_SendByte(0xff);
  5051  0F7B  30FF               	movlw	255
  5052  0F7C  118A  20F6  158A   	fcall	_UART_SendByte
  5053                           
  5054                           ;DriveTime.c: 87: }
  5055  0F7F  2F88               	goto	l2323
  5056  0F80                     l59:	
  5057                           
  5058                           ;DriveTime.c: 88: else if(!RelayS.Com&&(InterTimes==31))RC4=~RC4;
  5059  0F80  186F               	btfsc	_RelayS,0
  5060  0F81  2F88               	goto	l2323
  5061  0F82  301F               	movlw	31
  5062  0F83  0674               	xorwf	_InterTimes,w
  5063  0F84  1D03               	btfss	3,2
  5064  0F85  2F88               	goto	l2323
  5065  0F86  3010               	movlw	16
  5066  0F87  0687               	xorwf	7,f
  5067  0F88                     l2323:	
  5068                           ;DriveTime.c: 90: {
  5069                           
  5070                           
  5071                           ;DriveTime.c: 95: }
  5072                           ;DriveTime.c: 96: if (!InterTimes)
  5073  0F88  1283               	bcf	3,5	;RP0=0, select bank0
  5074  0F89  1303               	bcf	3,6	;RP1=0, select bank0
  5075  0F8A  0874               	movf	_InterTimes,w
  5076  0F8B  1D03               	btfss	3,2
  5077  0F8C  0008               	return
  5078                           
  5079                           ;DriveTime.c: 97: {
  5080                           ;DriveTime.c: 98: for(int i=0;i<=4;i++)
  5081  0F8D  01B1               	clrf	DriveTime@i
  5082  0F8E  01B2               	clrf	DriveTime@i+1
  5083  0F8F  0832               	movf	DriveTime@i+1,w
  5084  0F90  3A80               	xorlw	128
  5085  0F91  00FF               	movwf	127
  5086  0F92  3080               	movlw	128
  5087  0F93  027F               	subwf	127,w
  5088  0F94  1D03               	skipz
  5089  0F95  2F98               	goto	u3525
  5090  0F96  3005               	movlw	5
  5091  0F97  0231               	subwf	DriveTime@i,w
  5092  0F98                     u3525:	
  5093  0F98  1803               	btfsc	3,0
  5094  0F99  2FC3               	goto	l2341
  5095  0F9A                     l2331:	
  5096                           
  5097                           ;DriveTime.c: 99: {
  5098                           ;DriveTime.c: 100: UART_SendByte(i);
  5099  0F9A  1283               	bcf	3,5	;RP0=0, select bank0
  5100  0F9B  1303               	bcf	3,6	;RP1=0, select bank0
  5101  0F9C  0831               	movf	DriveTime@i,w
  5102  0F9D  118A  20F6  158A   	fcall	_UART_SendByte
  5103                           
  5104                           ;DriveTime.c: 101: UART_SendByte(T[i]);
  5105  0FA0  1283               	bcf	3,5	;RP0=0, select bank0
  5106  0FA1  1303               	bcf	3,6	;RP1=0, select bank0
  5107  0FA2  0831               	movf	DriveTime@i,w
  5108  0FA3  00B0               	movwf	??_DriveTime
  5109  0FA4  0730               	addwf	??_DriveTime,w
  5110  0FA5  3EA0               	addlw	(low (_T| 0))& (0+255)
  5111  0FA6  0084               	movwf	4
  5112  0FA7  1383               	bcf	3,7	;select IRP bank1
  5113  0FA8  0800               	movf	0,w
  5114  0FA9  118A  20F6  158A   	fcall	_UART_SendByte
  5115                           
  5116                           ;DriveTime.c: 103: UART_SendByte(0x00);
  5117  0FAC  3000               	movlw	0
  5118  0FAD  118A  20F6  158A   	fcall	_UART_SendByte
  5119  0FB0  3001               	movlw	1
  5120  0FB1  1283               	bcf	3,5	;RP0=0, select bank0
  5121  0FB2  1303               	bcf	3,6	;RP1=0, select bank0
  5122  0FB3  07B1               	addwf	DriveTime@i,f
  5123  0FB4  1803               	skipnc
  5124  0FB5  0AB2               	incf	DriveTime@i+1,f
  5125  0FB6  3000               	movlw	0
  5126  0FB7  07B2               	addwf	DriveTime@i+1,f
  5127  0FB8  0832               	movf	DriveTime@i+1,w
  5128  0FB9  3A80               	xorlw	128
  5129  0FBA  00FF               	movwf	127
  5130  0FBB  3080               	movlw	128
  5131  0FBC  027F               	subwf	127,w
  5132  0FBD  1D03               	skipz
  5133  0FBE  2FC1               	goto	u3535
  5134  0FBF  3005               	movlw	5
  5135  0FC0  0231               	subwf	DriveTime@i,w
  5136  0FC1                     u3535:	
  5137  0FC1  1C03               	skipc
  5138  0FC2  2F9A               	goto	l2331
  5139  0FC3                     l2341:	
  5140                           
  5141                           ;DriveTime.c: 104: }
  5142                           ;DriveTime.c: 106: UART_SendByte(Judge.Working);
  5143  0FC3  1283               	bcf	3,5	;RP0=0, select bank0
  5144  0FC4  1303               	bcf	3,6	;RP1=0, select bank0
  5145  0FC5  0C5F               	rrf	_Judge,w
  5146  0FC6  00B0               	movwf	??_DriveTime
  5147  0FC7  0C30               	rrf	??_DriveTime,w
  5148  0FC8  3907               	andlw	7
  5149  0FC9  118A  20F6  158A   	fcall	_UART_SendByte
  5150                           
  5151                           ;DriveTime.c: 107: UART_SendByte(SysErr.P6);
  5152  0FCC  1283               	bcf	3,5	;RP0=0, select bank0
  5153  0FCD  1303               	bcf	3,6	;RP1=0, select bank0
  5154  0FCE  0E61               	swapf	_SysErr,w
  5155  0FCF  00B0               	movwf	??_DriveTime
  5156  0FD0  0CB0               	rrf	??_DriveTime,f
  5157  0FD1  0C30               	rrf	??_DriveTime,w
  5158  0FD2  3901               	andlw	1
  5159  0FD3  118A  20F6  158A   	fcall	_UART_SendByte
  5160                           
  5161                           ;DriveTime.c: 110: InterTimes=61;
  5162  0FD6  303D               	movlw	61
  5163  0FD7  1283               	bcf	3,5	;RP0=0, select bank0
  5164  0FD8  1303               	bcf	3,6	;RP1=0, select bank0
  5165  0FD9  00B0               	movwf	??_DriveTime
  5166  0FDA  0830               	movf	??_DriveTime,w
  5167  0FDB  00F4               	movwf	_InterTimes
  5168                           
  5169                           ;DriveTime.c: 111: Clock--;
  5170  0FDC  3001               	movlw	1
  5171  0FDD  02F3               	subwf	_Clock,f
  5172                           
  5173                           ;DriveTime.c: 113: CountClk();
  5174  0FDE  158A  235C  158A   	fcall	_CountClk
  5175                           
  5176                           ;DriveTime.c: 117: if (!Clock)
  5177  0FE1  1283               	bcf	3,5	;RP0=0, select bank0
  5178  0FE2  1303               	bcf	3,6	;RP1=0, select bank0
  5179  0FE3  0873               	movf	_Clock,w
  5180  0FE4  1D03               	btfss	3,2
  5181  0FE5  0008               	return
  5182                           
  5183                           ;DriveTime.c: 118: {if(RelayS.Com)DriveEEV();
  5184  0FE6  1C6F               	btfss	_RelayS,0
  5185  0FE7  2FEB               	goto	l2355
  5186  0FE8  158A  2670  158A   	fcall	_DriveEEV
  5187  0FEB                     l2355:	
  5188                           
  5189                           ;DriveTime.c: 119: Clock = 60;Minutes--;
  5190  0FEB  303C               	movlw	60
  5191  0FEC  1283               	bcf	3,5	;RP0=0, select bank0
  5192  0FED  1303               	bcf	3,6	;RP1=0, select bank0
  5193  0FEE  00B0               	movwf	??_DriveTime
  5194  0FEF  0830               	movf	??_DriveTime,w
  5195  0FF0  00F3               	movwf	_Clock
  5196  0FF1  3001               	movlw	1
  5197  0FF2  02F5               	subwf	_Minutes,f
  5198                           
  5199                           ;DriveTime.c: 120: CountMin();
  5200  0FF3  158A  2221  158A   	fcall	_CountMin
  5201                           
  5202                           ;DriveTime.c: 122: if (!Minutes)
  5203  0FF6  1283               	bcf	3,5	;RP0=0, select bank0
  5204  0FF7  1303               	bcf	3,6	;RP1=0, select bank0
  5205  0FF8  0875               	movf	_Minutes,w
  5206  0FF9  1D03               	btfss	3,2
  5207  0FFA  0008               	return
  5208                           
  5209                           ;DriveTime.c: 123: {
  5210                           ;DriveTime.c: 124: Minutes = 60;
  5211  0FFB  303C               	movlw	60
  5212  0FFC  00B0               	movwf	??_DriveTime
  5213  0FFD  0830               	movf	??_DriveTime,w
  5214  0FFE  00F5               	movwf	_Minutes
  5215  0FFF  0008               	return
  5216  1000                     __end_of_DriveTime:	
  5217                           
  5218                           	psect	text21
  5219  00F6                     __ptext21:	
  5220 ;; *************** function _UART_SendByte *****************
  5221 ;; Defined at:
  5222 ;;		line 50 in file "../main.c"
  5223 ;; Parameters:    Size  Location     Type
  5224 ;;  dat             1    wreg     unsigned char 
  5225 ;; Auto vars:     Size  Location     Type
  5226 ;;  dat             1    5[BANK0 ] unsigned char 
  5227 ;; Return value:  Size  Location     Type
  5228 ;;                  1    wreg      void 
  5229 ;; Registers used:
  5230 ;;		wreg
  5231 ;; Tracked objects:
  5232 ;;		On entry : 0/0
  5233 ;;		On exit  : 0/0
  5234 ;;		Unchanged: 0/0
  5235 ;; Data sizes:     COMMON   BANK0   BANK1
  5236 ;;      Params:         0       0       0
  5237 ;;      Locals:         0       1       0
  5238 ;;      Temps:          0       0       0
  5239 ;;      Totals:         0       1       0
  5240 ;;Total ram usage:        1 bytes
  5241 ;; Hardware stack levels used:    1
  5242 ;; Hardware stack levels required when called:    1
  5243 ;; This function calls:
  5244 ;;		Nothing
  5245 ;; This function is called by:
  5246 ;;		_DriveTime
  5247 ;;		_HPstart
  5248 ;;		_HPOuUnit
  5249 ;; This function uses a non-reentrant model
  5250 ;;
  5251                           
  5252                           
  5253                           ;psect for function _UART_SendByte
  5254  00F6                     _UART_SendByte:	
  5255                           
  5256                           ;incstack = 0
  5257                           ; Regs used in _UART_SendByte: [wreg]
  5258                           ;UART_SendByte@dat stored from wreg
  5259  00F6  1283               	bcf	3,5	;RP0=0, select bank0
  5260  00F7  1303               	bcf	3,6	;RP1=0, select bank0
  5261  00F8  00A5               	movwf	UART_SendByte@dat
  5262                           
  5263                           ;main.c: 52: TXREG=dat;
  5264  00F9  0825               	movf	UART_SendByte@dat,w
  5265  00FA  0099               	movwf	25	;volatile
  5266  00FB                     l212:	
  5267                           ;main.c: 53: while(TRMT==0);
  5268                           
  5269  00FB  1683               	bsf	3,5	;RP0=1, select bank1
  5270  00FC  1303               	bcf	3,6	;RP1=0, select bank1
  5271  00FD  1898               	btfsc	24,1	;volatile
  5272  00FE  0008               	return
  5273  00FF  28FB               	goto	l212
  5274  0100                     __end_of_UART_SendByte:	
  5275                           
  5276                           	psect	text22
  5277  0E70                     __ptext22:	
  5278 ;; *************** function _DriveEEV *****************
  5279 ;; Defined at:
  5280 ;;		line 92 in file "../eev.c"
  5281 ;; Parameters:    Size  Location     Type
  5282 ;;		None
  5283 ;; Auto vars:     Size  Location     Type
  5284 ;;  x               2   14[BANK0 ] int 
  5285 ;; Return value:  Size  Location     Type
  5286 ;;                  1    wreg      void 
  5287 ;; Registers used:
  5288 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5289 ;; Tracked objects:
  5290 ;;		On entry : 0/0
  5291 ;;		On exit  : 0/0
  5292 ;;		Unchanged: 0/0
  5293 ;; Data sizes:     COMMON   BANK0   BANK1
  5294 ;;      Params:         0       0       0
  5295 ;;      Locals:         0       2       0
  5296 ;;      Temps:          0       2       0
  5297 ;;      Totals:         0       4       0
  5298 ;;Total ram usage:        4 bytes
  5299 ;; Hardware stack levels used:    1
  5300 ;; Hardware stack levels required when called:    3
  5301 ;; This function calls:
  5302 ;;		_delay2ms
  5303 ;;		_eevdriver
  5304 ;; This function is called by:
  5305 ;;		_DriveTime
  5306 ;; This function uses a non-reentrant model
  5307 ;;
  5308                           
  5309                           
  5310                           ;psect for function _DriveEEV
  5311  0E70                     _DriveEEV:	
  5312                           
  5313                           ;eev.c: 94: if((EEVSTEP>160)&&(EEVSTEP<420))
  5314                           
  5315                           ;incstack = 0
  5316                           ; Regs used in _DriveEEV: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5317  0E70  1283               	bcf	3,5	;RP0=0, select bank0
  5318  0E71  1303               	bcf	3,6	;RP1=0, select bank0
  5319  0E72  0872               	movf	_EEVSTEP+1,w
  5320  0E73  3A80               	xorlw	128
  5321  0E74  00FF               	movwf	127
  5322  0E75  3080               	movlw	128
  5323  0E76  027F               	subwf	127,w
  5324  0E77  1D03               	skipz
  5325  0E78  2E7B               	goto	u2365
  5326  0E79  30A1               	movlw	161
  5327  0E7A  0271               	subwf	_EEVSTEP,w
  5328  0E7B                     u2365:	
  5329  0E7B  1C03               	skipc
  5330  0E7C  0008               	return
  5331  0E7D  1283               	bcf	3,5	;RP0=0, select bank0
  5332  0E7E  1303               	bcf	3,6	;RP1=0, select bank0
  5333  0E7F  0872               	movf	_EEVSTEP+1,w
  5334  0E80  3A80               	xorlw	128
  5335  0E81  00FF               	movwf	127
  5336  0E82  3081               	movlw	129
  5337  0E83  027F               	subwf	127,w
  5338  0E84  1D03               	skipz
  5339  0E85  2E88               	goto	u2375
  5340  0E86  30A4               	movlw	164
  5341  0E87  0271               	subwf	_EEVSTEP,w
  5342  0E88                     u2375:	
  5343  0E88  1803               	skipnc
  5344  0E89  0008               	return
  5345                           
  5346                           ;eev.c: 95: { int x=T[2]-T[0]-5;
  5347  0E8A  1683               	bsf	3,5	;RP0=1, select bank1
  5348  0E8B  1303               	bcf	3,6	;RP1=0, select bank1
  5349  0E8C  0820               	movf	_T^(0+128),w
  5350  0E8D  3E05               	addlw	5
  5351  0E8E  1283               	bcf	3,5	;RP0=0, select bank0
  5352  0E8F  1303               	bcf	3,6	;RP1=0, select bank0
  5353  0E90  00AC               	movwf	??_DriveEEV
  5354  0E91  1683               	bsf	3,5	;RP0=1, select bank1
  5355  0E92  1303               	bcf	3,6	;RP1=0, select bank1
  5356  0E93  0821               	movf	(_T+1)^(0+128),w
  5357  0E94  1803               	skipnc
  5358  0E95  3E01               	addlw	1
  5359  0E96  3E00               	addlw	0
  5360  0E97  1283               	bcf	3,5	;RP0=0, select bank0
  5361  0E98  1303               	bcf	3,6	;RP1=0, select bank0
  5362  0E99  00AD               	movwf	??_DriveEEV+1
  5363  0E9A  09AC               	comf	??_DriveEEV,f
  5364  0E9B  09AD               	comf	??_DriveEEV+1,f
  5365  0E9C  0AAC               	incf	??_DriveEEV,f
  5366  0E9D  1903               	skipnz
  5367  0E9E  0AAD               	incf	??_DriveEEV+1,f
  5368  0E9F  1683               	bsf	3,5	;RP0=1, select bank1
  5369  0EA0  1303               	bcf	3,6	;RP1=0, select bank1
  5370  0EA1  0824               	movf	(_T^(0+128)+4),w
  5371  0EA2  1283               	bcf	3,5	;RP0=0, select bank0
  5372  0EA3  1303               	bcf	3,6	;RP1=0, select bank0
  5373  0EA4  072C               	addwf	??_DriveEEV,w
  5374  0EA5  00AE               	movwf	DriveEEV@x
  5375  0EA6  1683               	bsf	3,5	;RP0=1, select bank1
  5376  0EA7  1303               	bcf	3,6	;RP1=0, select bank1
  5377  0EA8  0825               	movf	((_T+1)^(0+128)+4),w
  5378  0EA9  1803               	skipnc
  5379  0EAA  0A25               	incf	((_T+1)^(0+128)+4),w
  5380  0EAB  1283               	bcf	3,5	;RP0=0, select bank0
  5381  0EAC  1303               	bcf	3,6	;RP1=0, select bank0
  5382  0EAD  072D               	addwf	??_DriveEEV+1,w
  5383  0EAE  00AF               	movwf	DriveEEV@x+1
  5384                           
  5385                           ;eev.c: 96: if(x>0)
  5386  0EAF  082F               	movf	DriveEEV@x+1,w
  5387  0EB0  3A80               	xorlw	128
  5388  0EB1  00FF               	movwf	127
  5389  0EB2  3080               	movlw	128
  5390  0EB3  027F               	subwf	127,w
  5391  0EB4  1D03               	skipz
  5392  0EB5  2EB8               	goto	u2385
  5393  0EB6  3001               	movlw	1
  5394  0EB7  022E               	subwf	DriveEEV@x,w
  5395  0EB8                     u2385:	
  5396  0EB8  1803               	btfsc	3,0
  5397  0EB9  2ED5               	goto	l1833
  5398  0EBA  2EDC               	goto	l1835
  5399  0EBB                     l1827:	
  5400                           ;eev.c: 97: for(;!x;x--)
  5401                           
  5402                           
  5403                           ;eev.c: 98: { eevdriver(1);
  5404  0EBB  3001               	movlw	1
  5405  0EBC  1283               	bcf	3,5	;RP0=0, select bank0
  5406  0EBD  1303               	bcf	3,6	;RP1=0, select bank0
  5407  0EBE  00A5               	movwf	eevdriver@x
  5408  0EBF  3000               	movlw	0
  5409  0EC0  00A6               	movwf	eevdriver@x+1
  5410  0EC1  158A  23AB  158A   	fcall	_eevdriver
  5411                           
  5412                           ;eev.c: 99: delay2ms(8);}
  5413  0EC4  3008               	movlw	8
  5414  0EC5  1283               	bcf	3,5	;RP0=0, select bank0
  5415  0EC6  1303               	bcf	3,6	;RP1=0, select bank0
  5416  0EC7  00A5               	movwf	delay2ms@x
  5417  0EC8  3000               	movlw	0
  5418  0EC9  00A6               	movwf	delay2ms@x+1
  5419  0ECA  158A  22AE  158A   	fcall	_delay2ms
  5420  0ECD  30FF               	movlw	255
  5421  0ECE  1283               	bcf	3,5	;RP0=0, select bank0
  5422  0ECF  1303               	bcf	3,6	;RP1=0, select bank0
  5423  0ED0  07AE               	addwf	DriveEEV@x,f
  5424  0ED1  1803               	skipnc
  5425  0ED2  0AAF               	incf	DriveEEV@x+1,f
  5426  0ED3  30FF               	movlw	255
  5427  0ED4  07AF               	addwf	DriveEEV@x+1,f
  5428  0ED5                     l1833:	
  5429  0ED5  1283               	bcf	3,5	;RP0=0, select bank0
  5430  0ED6  1303               	bcf	3,6	;RP1=0, select bank0
  5431  0ED7  082E               	movf	DriveEEV@x,w
  5432  0ED8  042F               	iorwf	DriveEEV@x+1,w
  5433  0ED9  1D03               	btfss	3,2
  5434  0EDA  2F09               	goto	l1847
  5435  0EDB  2EBB               	goto	l1827
  5436  0EDC                     l1835:	
  5437                           
  5438                           ;eev.c: 100: else if(T[4]<95)
  5439  0EDC  1683               	bsf	3,5	;RP0=1, select bank1
  5440  0EDD  1303               	bcf	3,6	;RP1=0, select bank1
  5441  0EDE  0829               	movf	((_T+1)^(0+128)+8),w
  5442  0EDF  3A80               	xorlw	128
  5443  0EE0  00FF               	movwf	127
  5444  0EE1  3080               	movlw	128
  5445  0EE2  027F               	subwf	127,w
  5446  0EE3  1D03               	skipz
  5447  0EE4  2EE7               	goto	u2405
  5448  0EE5  305F               	movlw	95
  5449  0EE6  0228               	subwf	(_T^(0+128)+8),w
  5450  0EE7                     u2405:	
  5451  0EE7  1C03               	btfss	3,0
  5452  0EE8  2F03               	goto	l1845
  5453  0EE9  2F09               	goto	l1847
  5454  0EEA                     l1839:	
  5455                           ;eev.c: 101: for(;!x;x++)
  5456                           
  5457                           
  5458                           ;eev.c: 102: { eevdriver(0);
  5459  0EEA  3000               	movlw	0
  5460  0EEB  1283               	bcf	3,5	;RP0=0, select bank0
  5461  0EEC  1303               	bcf	3,6	;RP1=0, select bank0
  5462  0EED  00A5               	movwf	eevdriver@x
  5463  0EEE  00A6               	movwf	eevdriver@x+1
  5464  0EEF  158A  23AB  158A   	fcall	_eevdriver
  5465                           
  5466                           ;eev.c: 103: delay2ms(8);}
  5467  0EF2  3008               	movlw	8
  5468  0EF3  1283               	bcf	3,5	;RP0=0, select bank0
  5469  0EF4  1303               	bcf	3,6	;RP1=0, select bank0
  5470  0EF5  00A5               	movwf	delay2ms@x
  5471  0EF6  3000               	movlw	0
  5472  0EF7  00A6               	movwf	delay2ms@x+1
  5473  0EF8  158A  22AE  158A   	fcall	_delay2ms
  5474  0EFB  3001               	movlw	1
  5475  0EFC  1283               	bcf	3,5	;RP0=0, select bank0
  5476  0EFD  1303               	bcf	3,6	;RP1=0, select bank0
  5477  0EFE  07AE               	addwf	DriveEEV@x,f
  5478  0EFF  1803               	skipnc
  5479  0F00  0AAF               	incf	DriveEEV@x+1,f
  5480  0F01  3000               	movlw	0
  5481  0F02  07AF               	addwf	DriveEEV@x+1,f
  5482  0F03                     l1845:	
  5483  0F03  1283               	bcf	3,5	;RP0=0, select bank0
  5484  0F04  1303               	bcf	3,6	;RP1=0, select bank0
  5485  0F05  082E               	movf	DriveEEV@x,w
  5486  0F06  042F               	iorwf	DriveEEV@x+1,w
  5487  0F07  1903               	btfsc	3,2
  5488  0F08  2EEA               	goto	l1839
  5489  0F09                     l1847:	
  5490                           
  5491                           ;eev.c: 104: PORTCBIT.LBIT= STEP[stepcount];
  5492  0F09  1283               	bcf	3,5	;RP0=0, select bank0
  5493  0F0A  1303               	bcf	3,6	;RP1=0, select bank0
  5494  0F0B  0869               	movf	_stepcount,w
  5495  0F0C  00AC               	movwf	??_DriveEEV
  5496  0F0D  072C               	addwf	??_DriveEEV,w
  5497  0F0E  3EE4               	addlw	low (_STEP| (0+32768))
  5498  0F0F  0084               	movwf	4
  5499  0F10  3082               	movlw	high (_STEP| (0+32768))
  5500  0F11  1803               	skipnc
  5501  0F12  3E01               	addlw	1
  5502  0F13  00FF               	movwf	127
  5503  0F14  118A  2100  158A   	fcall	stringtab
  5504  0F17  00AD               	movwf	??_DriveEEV+1
  5505  0F18  0807               	movf	7,w	;volatile
  5506  0F19  062D               	xorwf	??_DriveEEV+1,w
  5507  0F1A  39F0               	andlw	-16
  5508  0F1B  062D               	xorwf	??_DriveEEV+1,w
  5509  0F1C  0087               	movwf	7	;volatile
  5510                           
  5511                           ;eev.c: 106: delay2ms(240);
  5512  0F1D  30F0               	movlw	240
  5513  0F1E  00A5               	movwf	delay2ms@x
  5514  0F1F  3000               	movlw	0
  5515  0F20  00A6               	movwf	delay2ms@x+1
  5516  0F21  158A  22AE         	fcall	_delay2ms
  5517                           
  5518                           ;eev.c: 107: PORTCBIT.LBIT=0x0;
  5519  0F23  30F0               	movlw	-16
  5520  0F24  1283               	bcf	3,5	;RP0=0, select bank0
  5521  0F25  1303               	bcf	3,6	;RP1=0, select bank0
  5522  0F26  0587               	andwf	7,f	;volatile
  5523                           
  5524                           ;eev.c: 108: EEVSTEP+=x;
  5525  0F27  082E               	movf	DriveEEV@x,w
  5526  0F28  07F1               	addwf	_EEVSTEP,f
  5527  0F29  1803               	skipnc
  5528  0F2A  0AF2               	incf	_EEVSTEP+1,f
  5529  0F2B  082F               	movf	DriveEEV@x+1,w
  5530  0F2C  07F2               	addwf	_EEVSTEP+1,f
  5531  0F2D  0008               	return
  5532  0F2E                     __end_of_DriveEEV:	
  5533                           
  5534                           	psect	text23
  5535  0BAB                     __ptext23:	
  5536 ;; *************** function _eevdriver *****************
  5537 ;; Defined at:
  5538 ;;		line 16 in file "../eev.c"
  5539 ;; Parameters:    Size  Location     Type
  5540 ;;  x               2    5[BANK0 ] int 
  5541 ;; Auto vars:     Size  Location     Type
  5542 ;;  stepx           2   10[BANK0 ] unsigned int 
  5543 ;; Return value:  Size  Location     Type
  5544 ;;                  1    wreg      void 
  5545 ;; Registers used:
  5546 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  5547 ;; Tracked objects:
  5548 ;;		On entry : 0/0
  5549 ;;		On exit  : 0/0
  5550 ;;		Unchanged: 0/0
  5551 ;; Data sizes:     COMMON   BANK0   BANK1
  5552 ;;      Params:         0       2       0
  5553 ;;      Locals:         0       2       0
  5554 ;;      Temps:          0       3       0
  5555 ;;      Totals:         0       7       0
  5556 ;;Total ram usage:        7 bytes
  5557 ;; Hardware stack levels used:    2
  5558 ;; Hardware stack levels required when called:    1
  5559 ;; This function calls:
  5560 ;;		Nothing
  5561 ;; This function is called by:
  5562 ;;		_eevinit
  5563 ;;		_DriveEEV
  5564 ;; This function uses a non-reentrant model
  5565 ;;
  5566                           
  5567                           
  5568                           ;psect for function _eevdriver
  5569  0BAB                     _eevdriver:	
  5570                           
  5571                           ;incstack = 0
  5572                           ; Regs used in _eevdriver: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  5573  0BAB  1283               	bcf	3,5	;RP0=0, select bank0
  5574  0BAC  1303               	bcf	3,6	;RP1=0, select bank0
  5575  0BAD  01AA               	clrf	eevdriver@stepx
  5576  0BAE  01AB               	clrf	eevdriver@stepx+1
  5577                           
  5578                           ;eev.c: 18: if(x){
  5579  0BAF  0825               	movf	eevdriver@x,w
  5580  0BB0  0426               	iorwf	eevdriver@x+1,w
  5581  0BB1  1903               	btfsc	3,2
  5582  0BB2  2BDB               	goto	l1673
  5583                           
  5584                           ;eev.c: 19: stepx|=STEP[stepcount++];
  5585  0BB3  0869               	movf	_stepcount,w
  5586  0BB4  00A7               	movwf	??_eevdriver
  5587  0BB5  0727               	addwf	??_eevdriver,w
  5588  0BB6  3EE4               	addlw	low (_STEP| (0+32768))
  5589  0BB7  0084               	movwf	4
  5590  0BB8  3082               	movlw	high (_STEP| (0+32768))
  5591  0BB9  1803               	skipnc
  5592  0BBA  3E01               	addlw	1
  5593  0BBB  00FF               	movwf	127
  5594  0BBC  118A  2100  158A   	fcall	stringtab
  5595  0BBF  00A8               	movwf	??_eevdriver+1
  5596  0BC0  118A  2100  158A   	fcall	stringtab
  5597  0BC3  00A9               	movwf	??_eevdriver+2
  5598  0BC4  0828               	movf	??_eevdriver+1,w
  5599  0BC5  04AA               	iorwf	eevdriver@stepx,f
  5600  0BC6  0829               	movf	??_eevdriver+2,w
  5601  0BC7  04AB               	iorwf	eevdriver@stepx+1,f
  5602  0BC8  3001               	movlw	1
  5603  0BC9  07E9               	addwf	_stepcount,f
  5604  0BCA  1803               	skipnc
  5605  0BCB  0AEA               	incf	_stepcount+1,f
  5606  0BCC  3000               	movlw	0
  5607  0BCD  07EA               	addwf	_stepcount+1,f
  5608                           
  5609                           ;eev.c: 21: PORTCBIT.LBIT=stepx;
  5610  0BCE  0807               	movf	7,w	;volatile
  5611  0BCF  062A               	xorwf	eevdriver@stepx,w
  5612  0BD0  39F0               	andlw	-16
  5613  0BD1  062A               	xorwf	eevdriver@stepx,w
  5614  0BD2  0087               	movwf	7	;volatile
  5615                           
  5616                           ;eev.c: 22: if(stepcount==8)
  5617  0BD3  3008               	movlw	8
  5618  0BD4  0669               	xorwf	_stepcount,w
  5619  0BD5  046A               	iorwf	_stepcount+1,w
  5620  0BD6  1D03               	btfss	3,2
  5621  0BD7  0008               	return
  5622                           
  5623                           ;eev.c: 23: stepcount=0;
  5624  0BD8  01E9               	clrf	_stepcount
  5625  0BD9  01EA               	clrf	_stepcount+1
  5626                           
  5627                           ;eev.c: 24: }
  5628  0BDA  0008               	return
  5629  0BDB                     l1673:	
  5630                           
  5631                           ;eev.c: 25: else
  5632                           ;eev.c: 26: {stepx|=STEP[stepcount--];
  5633  0BDB  0869               	movf	_stepcount,w
  5634  0BDC  00A7               	movwf	??_eevdriver
  5635  0BDD  0727               	addwf	??_eevdriver,w
  5636  0BDE  3EE4               	addlw	low (_STEP| (0+32768))
  5637  0BDF  0084               	movwf	4
  5638  0BE0  3082               	movlw	high (_STEP| (0+32768))
  5639  0BE1  1803               	skipnc
  5640  0BE2  3E01               	addlw	1
  5641  0BE3  00FF               	movwf	127
  5642  0BE4  118A  2100  158A   	fcall	stringtab
  5643  0BE7  00A8               	movwf	??_eevdriver+1
  5644  0BE8  118A  2100  158A   	fcall	stringtab
  5645  0BEB  00A9               	movwf	??_eevdriver+2
  5646  0BEC  0828               	movf	??_eevdriver+1,w
  5647  0BED  04AA               	iorwf	eevdriver@stepx,f
  5648  0BEE  0829               	movf	??_eevdriver+2,w
  5649  0BEF  04AB               	iorwf	eevdriver@stepx+1,f
  5650  0BF0  30FF               	movlw	255
  5651  0BF1  07E9               	addwf	_stepcount,f
  5652  0BF2  1803               	skipnc
  5653  0BF3  0AEA               	incf	_stepcount+1,f
  5654  0BF4  30FF               	movlw	255
  5655  0BF5  07EA               	addwf	_stepcount+1,f
  5656                           
  5657                           ;eev.c: 27: PORTCBIT.LBIT=stepx;
  5658  0BF6  0807               	movf	7,w	;volatile
  5659  0BF7  062A               	xorwf	eevdriver@stepx,w
  5660  0BF8  39F0               	andlw	-16
  5661  0BF9  062A               	xorwf	eevdriver@stepx,w
  5662  0BFA  0087               	movwf	7	;volatile
  5663                           
  5664                           ;eev.c: 28: if(stepcount==-1)
  5665  0BFB  0A69               	incf	_stepcount,w
  5666  0BFC  1D03               	skipz
  5667  0BFD  0008               	return
  5668  0BFE  0A6A               	incf	_stepcount+1,w
  5669  0BFF  1D03               	btfss	3,2
  5670  0C00  0008               	return
  5671                           
  5672                           ;eev.c: 29: stepcount=7;
  5673  0C01  3007               	movlw	7
  5674  0C02  00E9               	movwf	_stepcount
  5675  0C03  3000               	movlw	0
  5676  0C04  00EA               	movwf	_stepcount+1
  5677  0C05  0008               	return
  5678  0C06                     __end_of_eevdriver:	
  5679                           
  5680                           	psect	text24
  5681  0AAE                     __ptext24:	
  5682 ;; *************** function _delay2ms *****************
  5683 ;; Defined at:
  5684 ;;		line 108 in file "../main.c"
  5685 ;; Parameters:    Size  Location     Type
  5686 ;;  x               2    5[BANK0 ] unsigned int 
  5687 ;; Auto vars:     Size  Location     Type
  5688 ;;  b               2    9[BANK0 ] unsigned int 
  5689 ;;  a               2    7[BANK0 ] unsigned int 
  5690 ;; Return value:  Size  Location     Type
  5691 ;;                  1    wreg      void 
  5692 ;; Registers used:
  5693 ;;		wreg, status,2, status,0
  5694 ;; Tracked objects:
  5695 ;;		On entry : 0/0
  5696 ;;		On exit  : 0/0
  5697 ;;		Unchanged: 0/0
  5698 ;; Data sizes:     COMMON   BANK0   BANK1
  5699 ;;      Params:         0       2       0
  5700 ;;      Locals:         0       4       0
  5701 ;;      Temps:          0       0       0
  5702 ;;      Totals:         0       6       0
  5703 ;;Total ram usage:        6 bytes
  5704 ;; Hardware stack levels used:    1
  5705 ;; Hardware stack levels required when called:    1
  5706 ;; This function calls:
  5707 ;;		Nothing
  5708 ;; This function is called by:
  5709 ;;		_eevinit
  5710 ;;		_DriveEEV
  5711 ;;		_ADC
  5712 ;;		_HPstart
  5713 ;; This function uses a non-reentrant model
  5714 ;;
  5715                           
  5716                           
  5717                           ;psect for function _delay2ms
  5718  0AAE                     _delay2ms:	
  5719                           
  5720                           ;main.c: 110: unsigned int a,b;
  5721                           ;main.c: 111: for(a=x; a>0; a--)
  5722                           
  5723                           ;incstack = 0
  5724                           ; Regs used in _delay2ms: [wreg+status,2+status,0]
  5725  0AAE  1283               	bcf	3,5	;RP0=0, select bank0
  5726  0AAF  1303               	bcf	3,6	;RP1=0, select bank0
  5727  0AB0  0826               	movf	delay2ms@x+1,w
  5728  0AB1  00A8               	movwf	delay2ms@a+1
  5729  0AB2  0825               	movf	delay2ms@x,w
  5730  0AB3  00A7               	movwf	delay2ms@a
  5731  0AB4                     L3:	
  5732  0AB4  0827               	movf	delay2ms@a,w
  5733  0AB5  0428               	iorwf	delay2ms@a+1,w
  5734  0AB6  1903               	btfsc	3,2
  5735  0AB7  0008               	return
  5736                           
  5737                           ;main.c: 112: for(b=152; b>0; b--);
  5738  0AB8  3098               	movlw	152
  5739  0AB9  00A9               	movwf	delay2ms@b
  5740  0ABA  3000               	movlw	0
  5741  0ABB  00AA               	movwf	delay2ms@b+1
  5742  0ABC  0829               	movf	delay2ms@b,w
  5743  0ABD  042A               	iorwf	delay2ms@b+1,w
  5744  0ABE  1903               	btfsc	3,2
  5745  0ABF  2ACA               	goto	l1699
  5746  0AC0                     l1695:	
  5747  0AC0  3001               	movlw	1
  5748  0AC1  02A9               	subwf	delay2ms@b,f
  5749  0AC2  3000               	movlw	0
  5750  0AC3  1C03               	skipc
  5751  0AC4  03AA               	decf	delay2ms@b+1,f
  5752  0AC5  02AA               	subwf	delay2ms@b+1,f
  5753  0AC6  0829               	movf	delay2ms@b,w
  5754  0AC7  042A               	iorwf	delay2ms@b+1,w
  5755  0AC8  1D03               	btfss	3,2
  5756  0AC9  2AC0               	goto	l1695
  5757  0ACA                     l1699:	
  5758  0ACA  3001               	movlw	1
  5759  0ACB  02A7               	subwf	delay2ms@a,f
  5760  0ACC  3000               	movlw	0
  5761  0ACD  1C03               	skipc
  5762  0ACE  03A8               	decf	delay2ms@a+1,f
  5763  0ACF  02A8               	subwf	delay2ms@a+1,f
  5764  0AD0  2AB4               	goto	L3
  5765  0AD1                     __end_of_delay2ms:	
  5766                           
  5767                           	psect	text25
  5768  0A21                     __ptext25:	
  5769 ;; *************** function _CountMin *****************
  5770 ;; Defined at:
  5771 ;;		line 53 in file "../DriveTime.c"
  5772 ;; Parameters:    Size  Location     Type
  5773 ;;		None
  5774 ;; Auto vars:     Size  Location     Type
  5775 ;;		None
  5776 ;; Return value:  Size  Location     Type
  5777 ;;                  1    wreg      void 
  5778 ;; Registers used:
  5779 ;;		wreg, status,2, status,0
  5780 ;; Tracked objects:
  5781 ;;		On entry : 0/0
  5782 ;;		On exit  : 0/0
  5783 ;;		Unchanged: 0/0
  5784 ;; Data sizes:     COMMON   BANK0   BANK1
  5785 ;;      Params:         0       0       0
  5786 ;;      Locals:         0       0       0
  5787 ;;      Temps:          0       1       0
  5788 ;;      Totals:         0       1       0
  5789 ;;Total ram usage:        1 bytes
  5790 ;; Hardware stack levels used:    1
  5791 ;; Hardware stack levels required when called:    1
  5792 ;; This function calls:
  5793 ;;		Nothing
  5794 ;; This function is called by:
  5795 ;;		_DriveTime
  5796 ;; This function uses a non-reentrant model
  5797 ;;
  5798                           
  5799                           
  5800                           ;psect for function _CountMin
  5801  0A21                     _CountMin:	
  5802                           
  5803                           ;DriveTime.c: 62: if ((0<TM.DefogScan)&&(TM.DefogScan<40)) {TM.DefogScan++;}
  5804                           
  5805                           ;incstack = 0
  5806                           ; Regs used in _CountMin: [wreg+status,2+status,0]
  5807  0A21  1283               	bcf	3,5	;RP0=0, select bank0
  5808  0A22  1303               	bcf	3,6	;RP1=0, select bank0
  5809  0A23  085E               	movf	_TM+8,w
  5810  0A24  393F               	andlw	63
  5811  0A25  3A00               	xorlw	0
  5812  0A26  1903               	skipnz
  5813  0A27  0008               	return
  5814  0A28  085E               	movf	_TM+8,w
  5815  0A29  393F               	andlw	63
  5816  0A2A  00A5               	movwf	??_CountMin
  5817  0A2B  3028               	movlw	40
  5818  0A2C  0225               	subwf	??_CountMin,w
  5819  0A2D  1803               	skipnc
  5820  0A2E  0008               	return
  5821  0A2F  085E               	movf	_TM+8,w
  5822  0A30  393F               	andlw	63
  5823  0A31  00A5               	movwf	??_CountMin
  5824  0A32  0AA5               	incf	??_CountMin,f
  5825  0A33  085E               	movf	_TM+8,w
  5826  0A34  0625               	xorwf	??_CountMin,w
  5827  0A35  39C0               	andlw	-64
  5828  0A36  0625               	xorwf	??_CountMin,w
  5829  0A37  00DE               	movwf	_TM+8
  5830  0A38  0008               	return
  5831  0A39                     __end_of_CountMin:	
  5832                           
  5833                           	psect	text26
  5834  0B5C                     __ptext26:	
  5835 ;; *************** function _CountClk *****************
  5836 ;; Defined at:
  5837 ;;		line 39 in file "../DriveTime.c"
  5838 ;; Parameters:    Size  Location     Type
  5839 ;;		None
  5840 ;; Auto vars:     Size  Location     Type
  5841 ;;		None
  5842 ;; Return value:  Size  Location     Type
  5843 ;;                  1    wreg      void 
  5844 ;; Registers used:
  5845 ;;		wreg, status,2, status,0
  5846 ;; Tracked objects:
  5847 ;;		On entry : 0/0
  5848 ;;		On exit  : 0/0
  5849 ;;		Unchanged: 0/0
  5850 ;; Data sizes:     COMMON   BANK0   BANK1
  5851 ;;      Params:         0       0       0
  5852 ;;      Locals:         0       0       0
  5853 ;;      Temps:          0       1       0
  5854 ;;      Totals:         0       1       0
  5855 ;;Total ram usage:        1 bytes
  5856 ;; Hardware stack levels used:    1
  5857 ;; Hardware stack levels required when called:    1
  5858 ;; This function calls:
  5859 ;;		Nothing
  5860 ;; This function is called by:
  5861 ;;		_DriveTime
  5862 ;; This function uses a non-reentrant model
  5863 ;;
  5864                           
  5865                           
  5866                           ;psect for function _CountClk
  5867  0B5C                     _CountClk:	
  5868                           
  5869                           ;DriveTime.c: 44: if ((0<TM.PumpRun)&&(TM.PumpRun<30)) {TM.PumpRun++;}
  5870                           
  5871                           ;incstack = 0
  5872                           ; Regs used in _CountClk: [wreg+status,2+status,0]
  5873  0B5C  1283               	bcf	3,5	;RP0=0, select bank0
  5874  0B5D  1303               	bcf	3,6	;RP1=0, select bank0
  5875  0B5E  0856               	movf	_TM,w
  5876  0B5F  1903               	btfsc	3,2
  5877  0B60  2B69               	goto	l45
  5878  0B61  301E               	movlw	30
  5879  0B62  0256               	subwf	_TM,w
  5880  0B63  1803               	skipnc
  5881  0B64  2B69               	goto	l45
  5882  0B65  3001               	movlw	1
  5883  0B66  00A5               	movwf	??_CountClk
  5884  0B67  0825               	movf	??_CountClk,w
  5885  0B68  07D6               	addwf	_TM,f
  5886  0B69                     l45:	
  5887                           
  5888                           ;DriveTime.c: 45: if ((0<TM.PumpStop)&&(TM.PumpStop<360)) {TM.PumpStop++;}
  5889  0B69  0857               	movf	_TM+1,w
  5890  0B6A  0458               	iorwf	_TM+2,w
  5891  0B6B  1903               	btfsc	3,2
  5892  0B6C  2B7A               	goto	l1793
  5893  0B6D  3001               	movlw	1
  5894  0B6E  0258               	subwf	_TM+2,w
  5895  0B6F  3068               	movlw	104
  5896  0B70  1903               	skipnz
  5897  0B71  0257               	subwf	_TM+1,w
  5898  0B72  1803               	skipnc
  5899  0B73  2B7A               	goto	l1793
  5900  0B74  3001               	movlw	1
  5901  0B75  07D7               	addwf	_TM+1,f
  5902  0B76  1803               	skipnc
  5903  0B77  0AD8               	incf	_TM+2,f
  5904  0B78  3000               	movlw	0
  5905  0B79  07D8               	addwf	_TM+2,f
  5906  0B7A                     l1793:	
  5907                           
  5908                           ;DriveTime.c: 46: if ((0<TM.ComRun)&&(TM.ComRun<120)) {TM.ComRun++;}
  5909  0B7A  0859               	movf	_TM+3,w
  5910  0B7B  1903               	btfsc	3,2
  5911  0B7C  2B85               	goto	l47
  5912  0B7D  3078               	movlw	120
  5913  0B7E  0259               	subwf	_TM+3,w
  5914  0B7F  1803               	skipnc
  5915  0B80  2B85               	goto	l47
  5916  0B81  3001               	movlw	1
  5917  0B82  00A5               	movwf	??_CountClk
  5918  0B83  0825               	movf	??_CountClk,w
  5919  0B84  07D9               	addwf	_TM+3,f
  5920  0B85                     l47:	
  5921                           
  5922                           ;DriveTime.c: 47: if ((0<TM.ComStop)&&(TM.ComStop<180)) {TM.ComStop++;}
  5923  0B85  085A               	movf	_TM+4,w
  5924  0B86  1903               	btfsc	3,2
  5925  0B87  2B90               	goto	l48
  5926  0B88  30B4               	movlw	180
  5927  0B89  025A               	subwf	_TM+4,w
  5928  0B8A  1803               	skipnc
  5929  0B8B  2B90               	goto	l48
  5930  0B8C  3001               	movlw	1
  5931  0B8D  00A5               	movwf	??_CountClk
  5932  0B8E  0825               	movf	??_CountClk,w
  5933  0B8F  07DA               	addwf	_TM+4,f
  5934  0B90                     l48:	
  5935                           
  5936                           ;DriveTime.c: 50: if ((0<TM.DefogStop)&&(TM.DefogStop<30)) {TM.DefogStop++;}
  5937  0B90  085B               	movf	_TM+5,w
  5938  0B91  1903               	btfsc	3,2
  5939  0B92  2B9B               	goto	l49
  5940  0B93  301E               	movlw	30
  5941  0B94  025B               	subwf	_TM+5,w
  5942  0B95  1803               	skipnc
  5943  0B96  2B9B               	goto	l49
  5944  0B97  3001               	movlw	1
  5945  0B98  00A5               	movwf	??_CountClk
  5946  0B99  0825               	movf	??_CountClk,w
  5947  0B9A  07DB               	addwf	_TM+5,f
  5948  0B9B                     l49:	
  5949                           
  5950                           ;DriveTime.c: 51: if ((0<TM.Defoging)&&(TM.Defoging<4800)){TM.DefogStop++;}
  5951  0B9B  085C               	movf	_TM+6,w
  5952  0B9C  045D               	iorwf	_TM+7,w
  5953  0B9D  1903               	btfsc	3,2
  5954  0B9E  0008               	return
  5955  0B9F  3012               	movlw	18
  5956  0BA0  025D               	subwf	_TM+7,w
  5957  0BA1  30C0               	movlw	192
  5958  0BA2  1903               	skipnz
  5959  0BA3  025C               	subwf	_TM+6,w
  5960  0BA4  1803               	skipnc
  5961  0BA5  0008               	return
  5962  0BA6  3001               	movlw	1
  5963  0BA7  00A5               	movwf	??_CountClk
  5964  0BA8  0825               	movf	??_CountClk,w
  5965  0BA9  07DB               	addwf	_TM+5,f
  5966  0BAA  0008               	return
  5967  0BAB                     __end_of_CountClk:	
  5968                           
  5969                           	psect	text27
  5970  0A53                     __ptext27:	
  5971 ;; *************** function _DriveRelay *****************
  5972 ;; Defined at:
  5973 ;;		line 19 in file "../DriveRelay.c"
  5974 ;; Parameters:    Size  Location     Type
  5975 ;;		None
  5976 ;; Auto vars:     Size  Location     Type
  5977 ;;		None
  5978 ;; Return value:  Size  Location     Type
  5979 ;;                  1    wreg      void 
  5980 ;; Registers used:
  5981 ;;		None
  5982 ;; Tracked objects:
  5983 ;;		On entry : 0/0
  5984 ;;		On exit  : 0/0
  5985 ;;		Unchanged: 0/0
  5986 ;; Data sizes:     COMMON   BANK0   BANK1
  5987 ;;      Params:         0       0       0
  5988 ;;      Locals:         0       0       0
  5989 ;;      Temps:          0       0       0
  5990 ;;      Totals:         0       0       0
  5991 ;;Total ram usage:        0 bytes
  5992 ;; Hardware stack levels used:    1
  5993 ;; Hardware stack levels required when called:    1
  5994 ;; This function calls:
  5995 ;;		Nothing
  5996 ;; This function is called by:
  5997 ;;		_main
  5998 ;; This function uses a non-reentrant model
  5999 ;;
  6000                           
  6001                           
  6002                           ;psect for function _DriveRelay
  6003  0A53                     _DriveRelay:	
  6004                           
  6005                           ;DriveRelay.c: 21: if(RelayS.Com){if(RB7==0)RB7=1;}
  6006                           
  6007                           ;incstack = 0
  6008                           ; Regs used in _DriveRelay: []
  6009  0A53  1283               	bcf	3,5	;RP0=0, select bank0
  6010  0A54  1303               	bcf	3,6	;RP1=0, select bank0
  6011  0A55  1C6F               	btfss	_RelayS,0
  6012  0A56  2A5B               	goto	l277
  6013  0A57  1B86               	btfsc	6,7	;volatile
  6014  0A58  2A5C               	goto	l279
  6015  0A59  1786               	bsf	6,7	;volatile
  6016  0A5A  2A5C               	goto	l279
  6017  0A5B                     l277:	
  6018                           
  6019                           ;DriveRelay.c: 22: else {RB7=0;}
  6020  0A5B  1386               	bcf	6,7	;volatile
  6021  0A5C                     l279:	
  6022                           
  6023                           ;DriveRelay.c: 23: if(RelayS.Pump){RB4=1;}
  6024  0A5C  1CEF               	btfss	_RelayS,1
  6025  0A5D  2A60               	goto	l280
  6026  0A5E  1606               	bsf	6,4	;volatile
  6027  0A5F  2A61               	goto	l281
  6028  0A60                     l280:	
  6029                           
  6030                           ;DriveRelay.c: 24: else {RB4=0;}
  6031  0A60  1206               	bcf	6,4	;volatile
  6032  0A61                     l281:	
  6033                           
  6034                           ;DriveRelay.c: 25: if(RelayS.Fan){if(RB5==0)RB5=1;}
  6035  0A61  1D6F               	btfss	_RelayS,2
  6036  0A62  2A67               	goto	l282
  6037  0A63  1A86               	btfsc	6,5	;volatile
  6038  0A64  2A68               	goto	l284
  6039  0A65  1686               	bsf	6,5	;volatile
  6040  0A66  2A68               	goto	l284
  6041  0A67                     l282:	
  6042                           
  6043                           ;DriveRelay.c: 26: else {RB5=0;}
  6044  0A67  1286               	bcf	6,5	;volatile
  6045  0A68                     l284:	
  6046                           
  6047                           ;DriveRelay.c: 27: if(RelayS.Fway){if(RB6==0)RB6=1;}
  6048  0A68  1DEF               	btfss	_RelayS,3
  6049  0A69  2A6E               	goto	l285
  6050  0A6A  1B06               	btfsc	6,6	;volatile
  6051  0A6B  0008               	return
  6052  0A6C  1706               	bsf	6,6	;volatile
  6053  0A6D  0008               	return
  6054  0A6E                     l285:	
  6055                           
  6056                           ;DriveRelay.c: 28: else {RB6=0;}
  6057  0A6E  1306               	bcf	6,6	;volatile
  6058  0A6F  0008               	return
  6059  0A70                     __end_of_DriveRelay:	
  6060                           
  6061                           	psect	text28
  6062  0A39                     __ptext28:	
  6063 ;; *************** function _ISR *****************
  6064 ;; Defined at:
  6065 ;;		line 83 in file "../main.c"
  6066 ;; Parameters:    Size  Location     Type
  6067 ;;		None
  6068 ;; Auto vars:     Size  Location     Type
  6069 ;;		None
  6070 ;; Return value:  Size  Location     Type
  6071 ;;                  1    wreg      void 
  6072 ;; Registers used:
  6073 ;;		wreg, status,2, status,0
  6074 ;; Tracked objects:
  6075 ;;		On entry : 0/0
  6076 ;;		On exit  : 0/0
  6077 ;;		Unchanged: 0/0
  6078 ;; Data sizes:     COMMON   BANK0   BANK1
  6079 ;;      Params:         0       0       0
  6080 ;;      Locals:         0       0       0
  6081 ;;      Temps:          0       5       0
  6082 ;;      Totals:         0       5       0
  6083 ;;Total ram usage:        5 bytes
  6084 ;; Hardware stack levels used:    1
  6085 ;; This function calls:
  6086 ;;		Nothing
  6087 ;; This function is called by:
  6088 ;;		Interrupt level 1
  6089 ;; This function uses a non-reentrant model
  6090 ;;
  6091                           
  6092                           
  6093                           ;psect for function _ISR
  6094  0A39                     _ISR:	
  6095                           
  6096                           ;main.c: 86: if(TMR0IF==1)
  6097  0A39  1D0B               	btfss	11,2	;volatile
  6098  0A3A  2A48               	goto	i1l229
  6099                           
  6100                           ;main.c: 87: {
  6101                           ;main.c: 88: TMR0=0x0e;
  6102  0A3B  300E               	movlw	14
  6103  0A3C  0081               	movwf	1	;volatile
  6104                           
  6105                           ;main.c: 90: if(temp1>68)
  6106  0A3D  3045               	movlw	69
  6107  0A3E  0270               	subwf	_temp1,w
  6108  0A3F  1C03               	skipc
  6109  0A40  2A43               	goto	i1l2481
  6110                           
  6111                           ;main.c: 91: {
  6112                           ;main.c: 92: Judge.Interrupt=1;
  6113  0A41  145F               	bsf	_Judge,0
  6114                           
  6115                           ;main.c: 93: temp1=0;
  6116  0A42  01F0               	clrf	_temp1
  6117  0A43                     i1l2481:	
  6118                           
  6119                           ;main.c: 95: }
  6120                           ;main.c: 96: temp1++;
  6121  0A43  3001               	movlw	1
  6122  0A44  00A0               	movwf	??_ISR
  6123  0A45  0820               	movf	??_ISR,w
  6124  0A46  07F0               	addwf	_temp1,f
  6125                           
  6126                           ;main.c: 97: TMR0IF=0;
  6127  0A47  110B               	bcf	11,2	;volatile
  6128  0A48                     i1l229:	
  6129  0A48  0824               	movf	??_ISR+4,w
  6130  0A49  00FF               	movwf	127
  6131  0A4A  0823               	movf	??_ISR+3,w
  6132  0A4B  008A               	movwf	10
  6133  0A4C  0822               	movf	??_ISR+2,w
  6134  0A4D  0084               	movwf	4
  6135  0A4E  0E21               	swapf	(??_ISR+1)^0,w
  6136  0A4F  0083               	movwf	3
  6137  0A50  0EFE               	swapf	126,f
  6138  0A51  0E7E               	swapf	126,w
  6139  0A52  0009               	retfie
  6140  0A53                     __end_of_ISR:	
  6141  007E                     btemp	set	126	;btemp
  6142  007E                     wtemp	set	126
  6143  007E                     wtemp0	set	126
  6144  0080                     wtemp1	set	128
  6145  0082                     wtemp2	set	130
  6146  0084                     wtemp3	set	132
  6147  0086                     wtemp4	set	134
  6148  0088                     wtemp5	set	136
  6149  007F                     wtemp6	set	127
  6150  007E                     ttemp	set	126
  6151  007E                     ttemp0	set	126
  6152  0081                     ttemp1	set	129
  6153  0084                     ttemp2	set	132
  6154  0087                     ttemp3	set	135
  6155  007F                     ttemp4	set	127
  6156  007E                     ltemp	set	126
  6157  007E                     ltemp0	set	126
  6158  0082                     ltemp1	set	130
  6159  0086                     ltemp2	set	134
  6160  0080                     ltemp3	set	128
  6161                           
  6162                           	psect	intentry
  6163  0004                     __pintentry:	
  6164                           ;incstack = 0
  6165                           ; Regs used in _ISR: [wreg+status,2+status,0]
  6166                           
  6167  0004                     interrupt_function:	
  6168  007E                     saved_w	set	btemp
  6169  0004  00FE               	movwf	btemp
  6170  0005  0E03               	swapf	3,w
  6171  0006  1283               	bcf	3,5	;RP0=0, select bank0
  6172  0007  1303               	bcf	3,6	;RP1=0, select bank0
  6173  0008  00A1               	movwf	??_ISR+1
  6174  0009  0804               	movf	4,w
  6175  000A  00A2               	movwf	??_ISR+2
  6176  000B  080A               	movf	10,w
  6177  000C  00A3               	movwf	??_ISR+3
  6178  000D  087F               	movf	btemp+1,w
  6179  000E  00A4               	movwf	??_ISR+4
  6180  000F  158A  2A39         	ljmp	_ISR


Data Sizes:
    Strings     0
    Constant    482
    Data        5
    BSS         43
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            94     54      86
    BANK1            94      0      16

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_TEMPADC
    _eevinit->_eevdriver
    _TEMPADC->___fttol
    ___lbtoft->___ftpack
    ___fttol->___ftadd
    ___ftmul->___ftpack
    ___ftdiv->___lbtoft
    ___ftadd->___ftpack
    ___awtoft->___ftpack
    ___awdiv->___wmul
    _ADC->_delay2ms
    _HPSystem->_HPstart
    _HPstart->_delay2ms
    _HPOuUnit->_UART_SendByte
    _DriveTime->_DriveEEV
    _DriveEEV->_eevdriver

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   18984
                         _DriveRelay
                          _DriveTime
                           _HPSystem
                            _TEMPADC
                            _eevinit
                        _serial_init
                        _timer0_init
 ---------------------------------------------------------------------------------
 (1) _timer0_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _serial_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _eevinit                                              7     7      0    1343
                                             12 BANK0      7     7      0
                           _delay2ms
                          _eevdriver
 ---------------------------------------------------------------------------------
 (1) _TEMPADC                                             14    14      0   15047
                                             40 BANK0     14    14      0
                                _ADC
                            ___awdiv
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___fttol
                           ___lbtoft
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     348
                                              5 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lbtoft                                             8     5      3    2131
                                             13 BANK0      8     5      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             14    10      4     316
                                             26 BANK0     14    10      4
                            ___ftadd (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             16    10      6    2563
                                             13 BANK0     16    10      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             16    10      6    2645
                                             21 BANK0     16    10      6
                           ___ftpack
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftadd                                             13     7      6    3179
                                             13 BANK0     13     7      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___awtoft                                             6     3      3    2264
                                             13 BANK0      6     3      3
                           ___ftpack
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    2109
                                              5 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     428
                                             11 BANK0      9     5      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _ADC                                                  3     1      2     968
                                             11 BANK0      3     1      2
                           _delay2ms
 ---------------------------------------------------------------------------------
 (1) _HPSystem                                             0     0      0    1120
                           _HPOuUnit
                            _HPstart
 ---------------------------------------------------------------------------------
 (2) _HPstart                                              2     2      0    1098
                                             11 BANK0      2     2      0
                      _UART_SendByte
                                _abs
                           _delay2ms
 ---------------------------------------------------------------------------------
 (3) _abs                                                  4     2      2     194
                                              5 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _HPOuUnit                                             1     1      0      22
                                              6 BANK0      1     1      0
                             _HPShut
                      _UART_SendByte
 ---------------------------------------------------------------------------------
 (3) _HPShut                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DriveTime                                            3     3      0    1474
                                             16 BANK0      3     3      0
                           _CountClk
                           _CountMin
                           _DriveEEV
                      _UART_SendByte
 ---------------------------------------------------------------------------------
 (3) _UART_SendByte                                        1     1      0      22
                                              5 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _DriveEEV                                             4     4      0    1362
                                             12 BANK0      4     4      0
                           _delay2ms
                          _eevdriver
 ---------------------------------------------------------------------------------
 (3) _eevdriver                                            7     5      2     389
                                              5 BANK0      7     5      2
 ---------------------------------------------------------------------------------
 (2) _delay2ms                                             6     4      2     882
                                              5 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (2) _CountMin                                             1     1      0       0
                                              5 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _CountClk                                             1     1      0       0
                                              5 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _DriveRelay                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  5     5      0       0
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DriveRelay
   _DriveTime
     _CountClk
     _CountMin
     _DriveEEV
       _delay2ms
       _eevdriver
     _UART_SendByte
   _HPSystem
     _HPOuUnit
       _HPShut
       _UART_SendByte
     _HPstart
       _UART_SendByte
       _abs
       _delay2ms
   _TEMPADC
     _ADC
       _delay2ms
     ___awdiv
       ___wmul (ARG)
     ___awtoft
       ___ftpack
       ___wmul (ARG)
     ___ftadd
       ___ftpack
     ___ftdiv
       ___ftpack
       ___lbtoft (ARG)
         ___ftpack
     ___ftmul
       ___ftpack
     ___fttol
       ___ftadd (ARG)
         ___ftpack
     ___lbtoft
       ___ftpack
     ___wmul
   _eevinit
     _delay2ms
     _eevdriver
   _serial_init
   _timer0_init

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               5E      0      10       7       17.0%
BITBANK1            5E      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               5E     36      56       5       91.5%
BITBANK0            5E      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
BITCOMMON            0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      66       8        0.0%
ABS                  0      0      66       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%


Microchip Technology PIC Macro Assembler V1.37 build -260352376 
Symbol Table                                                                                   Thu Jun 16 04:31:18 2016

             __CFG_CP$ON 0000                        _T 00A0                        pc 0002  
                     l45 0B69                       l47 0B85                       l48 0B90  
                     l49 0B9B                       l59 0F80                       _GO 00FA  
                     _TM 0056             ___awdiv@sign 0031                       _t1 006B  
                     _t2 006D                       _ee 0065                       _ff 0067  
                     fsr 0004      ___wmul@multiplicand 0027               DriveTime@i 0031  
           ___ftadd@exp1 0039             ___ftadd@exp2 0038             ___ftadd@sign 0037  
                    l212 00FB                      l401 0ADD                      l218 0AAA  
                    l243 0B3E                      l327 05A0                      _ADC 0A8D  
                    l280 0A60                      l281 0A61                      l329 055C  
                    l282 0A67                      l371 00ED                      l363 00AE  
                    l284 0A68                      l285 0A6E                      l277 0A5B  
                    l349 0068                      l390 0CB1                      l358 00A4  
                    l279 0A5C                      l393 0CBB                      l378 0C7E  
                    l389 0CA7                      l573 0D0A                      l574 0D12  
                    l566 0CF5                      l657 0D9F                      l597 04D4  
                    _GIE 005F                      _RB0 0030                      _RB1 0031  
                    _RB2 0032                      _RB4 0034                      _RB5 0035  
                    _RC4 003C                      _RB6 0036                      _RB7 0037  
                    _ISR 0A39                      _PSA 040B                      _abs 0A01  
                    fsr0 0004                      indf 0000             __CFG_FOSC$XT 0000  
                   ADC@x 002B                     ?_ADC 002B                     ?_ISR 0020  
           ___ftdiv@cntr 003F             ___ftdiv@sign 0044                     l2001 00E7  
                   ?_abs 0025                     l2013 0AD5                     l2033 0C12  
                   l2121 04AF                     l2051 0C33                     l2115 049A  
                   l2061 0C54                     l2133 04E6                     l2117 04A6  
                   l2109 0485                     l2221 07A8                     l2205 0759  
                   l2039 0C1D                     l2127 04C4                     l2119 04AB  
                   l2065 0C5C                     l2057 0C49                     l2049 0C25  
                   l2137 04F8                     l2129 04D0                     l2233 07D0  
                   l2217 0798                     l2331 0F9A                     l2323 0F88  
                   l2147 051B                     l2091 045C                     l2163 0DE7  
                   l2341 0FC3                     l2077 0B00                     l2157 0DD1  
                   l2229 07C0                     l2087 0455                     l2407 06E5  
                   l2511 0B38                     l2097 046B                     l2185 0E4B  
                   l2177 0E2C                     l2281 0DB0                     l2249 0D45  
                   l2409 070C                     l2355 0FEB                     l2275 0D94  
                   l2267 0D77                     l2515 0B3F                     l2507 0B32  
                   l1725 0C91                     l2277 0DA2                     l2269 0D87  
                   l1735 0C9D                     l1719 0C87                     l2199 0743  
                   l2471 0403                     l2391 06A0                     l2527 0B5A  
                   l1673 0BDB                     l1833 0ED5                     l1921 0611  
                   l1761 0CDA                     l2457 034E                     l2393 06C5  
                   l1827 0EBB                     l1835 0EDC                     l1907 05CC  
                   l1771 0D04                     l1763 0CDF                     l1755 0CC7  
                   l2379 0681                     l1845 0F03                     l1925 062B  
                   l1695 0AC0                     l1839 0EEA                     l1847 0F09  
                   l1951 0062                     l1935 0042                     l1759 0CCE  
                   l1793 0B7A                     l1769 0CFA                     l1699 0ACA  
                   l1955 006B                     l1891 0597                     l1965 0090  
                   l1973 00A7                     l1959 0076                     l1969 009B  
                   l1995 00DC                     l1987 00D2                     _ADON 00F8  
                   _T0IE 005D                     _T0IF 005A                     _T0CS 040D  
                   u2205 0D19                     u2125 0CD3                     u3005 0486  
                   u2145 0CEE                     u3035 049B                     u2405 0EE7  
                   u2165 0CFD                     u3205 0E3E                     u3215 0E4C  
                   u3065 04B0                     u3305 07B1                     u2515 05F0  
                   u2365 0E7B                     u2525 05FD                     u2445 0543  
                   u2375 0E88                     u2535 061C                     u3095 04C5  
                   u3175 0DF9                     u3255 0765                     u3415 0D78  
                   u2385 0EB8                     u2545 0629                     u3185 0E0B  
                   u3345 07D1                     u3265 0777                     u2635 0088  
                   u2475 057E                     u3195 0E2D                     u3355 07D9  
                   u3525 0F98                     u2485 058B                     u3445 0D96  
                   u3535 0FC1                     u3295 07A9                     u3385 0D4C  
                   u2835 0C28                     _PEIE 005E                     _INTE 005C  
                   u2695 00C1                     u2855 0C34                     u2775 0ADE  
                   u3575 066C                     _RBIE 005B                     u1985 0C75  
                   u2865 0C40                     u2785 0AE5                     u3585 06AB  
                   u2875 0C4A                     u3595 06F1                     _RCIE 0465  
                   _TMR0 0001          __end_of_TEMPADC 042C                     _STEP 02E4  
                   _TRMT 04C1                     _adcc 0063                     abs@a 0025  
                   _main 0B18             ___ftpack@arg 0025             ___ftpack@exp 0028  
                   btemp 007E                     ltemp 007E          __end_of_HPstart 0637  
                   start 0011                     ttemp 007E                     wtemp 007E  
           ___ftmul@cntr 003B             ___ftmul@sign 003C                    ??_ADC 002D  
                  ??_ISR 0020             ___fttol@exp1 0047                    ??_abs 0027  
           ___fttol@lval 0043                    ?_main 0020          __end_of___awdiv 0C61  
                  _ADRES 001E          __end_of___ftadd 0534            __CFG_WDTE$OFF 0000  
        __end_of___ftdiv 0E70          __end_of___ftmul 07FD          ___awdiv@divisor 002B  
        __end_of___fttol 0DB9                    i1l229 0A48          ___awdiv@counter 0030  
                  _RCSTA 0018                    _SPBRG 0099                    _PORTB 0006  
                  _TRISA 0085                    _TRISB 0086                    _TRISC 0087  
                  _TXREG 0019                    _TXSTA 0098                    _Clock 0073  
       __end_of_HPOuUnit 00F6            __CFG_PWRTE$ON 0000                    _Judge 005F  
                  _nRBPU 040F          __end_of_eevinit 072B            ___awtoft@sign 0032  
       __end_of_HPSystem 09ED                    _temp1 0070            ___ftpack@sign 0029  
         __CFG_BOREN$OFF 0000                    pclath 000A                    ltemp0 007E  
                  ltemp1 0082                    ltemp2 0086                    ltemp3 0080  
             _DriveRelay 0A53                    ttemp0 007E                    ttemp1 0081  
                  ttemp2 0084                    ttemp3 0087                    ttemp4 007F  
                  status 0003                    wtemp0 007E                    wtemp1 0080  
                  wtemp2 0082                    wtemp3 0084                    wtemp4 0086  
                  wtemp5 0088                    wtemp6 007F             __end_of_STEP 02F4  
        __initialization 0013         __end_of_DriveEEV 0F2E             __end_of_main 0B5C  
       __end_of_CountClk 0BAB         __end_of_CountMin 0A39                   ??_main 0000  
          ___fttol@sign1 0042           eevdriver@stepx 002A               _InterTimes 0074  
              ??_TEMPADC 0048            TEMPADC@temmp2 0053                   _ADCON0 001F  
                 _ADCON1 009F            TEMPADC@temmmp 0051         ___awdiv@dividend 002D  
       __end_of___awtoft 0B18         __end_of___ftpack 0D2B         __end_of___lbtoft 0A8D  
     __size_of_DriveTime 00D2                ??_HPstart 002B                   i1l2481 0A43  
                 _TMR0IF 005A                   _HPShut 0C61         __end_of_delay2ms 0AD1  
                 _RelayS 006F             ?_serial_init 0020                   _SysErr 0061  
                 ___wmul 0AD1                ??___awdiv 002F                ??___ftadd 0033  
              ??___ftdiv 003B                ??___ftmul 0033             ?_timer0_init 0020  
              ??___fttol 003E         ___awdiv@quotient 0032                ??_eevinit 002C  
  ___ftmul@f3_as_product 0038                   saved_w 007E    __end_of_UART_SendByte 0100  
            ?_DriveRelay 0020  __end_of__initialization 0033               ___ftadd@f1 002D  
             ___ftadd@f2 0030               ___ftdiv@f1 0038               ___ftdiv@f2 0035  
             ___ftdiv@f3 0040               ___awtoft@c 002D               ___lbtoft@c 0034  
             ___ftmul@f1 002D               ___ftmul@f2 0030               ___fttol@f1 003A  
         __pcstackCOMMON 0000                ?_HPOuUnit 0020             __pidataBANK0 09E2  
              ?_HPSystem 0020        __end_of_DriveTime 1000       __size_of_eevdriver 005B  
              ?_DriveEEV 0020               __pbssBANK0 0056               __pbssBANK1 00A0  
              ?_CountClk 0020                ?_CountMin 0020                  ?_HPShut 0020  
             __pmaintext 0B18               ??_HPOuUnit 0026                  ?___wmul 0025  
             __pintentry 0004               ??_HPSystem 0000                ?___awtoft 002D  
              ?___ftpack 0025                ?___lbtoft 002D      __size_of_DriveRelay 001D  
                _EEVSTEP 0071                ?_delay2ms 0025                  _TEMPADC 02F4  
             ??_DriveEEV 002C               __stringtab 0100               ??_CountClk 0025  
                _HPstart 0534               ??_CountMin 0025        __end_of_fkTempTab 02E4  
        __size_of_HPShut 005C                  _Minutes 0075        __end_of_eevdriver 0C06  
                ___awdiv 0C06                  ___ftadd 042C                  ___ftdiv 0DB9  
        __size_of___wmul 0023                  ___ftmul 072B                  ___fttol 0D2B  
   __size_of_serial_init 0010               ??___awtoft 0030               ??___ftpack 002A  
             ??___lbtoft 0030     __size_of_timer0_init 000C                  __ptext1 09F5  
                __ptext2 0A11                  __ptext3 0637                  __ptext4 02F4  
                __ptext5 0AD1                  __ptext6 0A70                  __ptext7 0D2B  
                __ptext8 072B                  __ptext9 0DB9                  _eevinit 0637  
           __size_of_ADC 0021             __size_of_ISR 001A             __size_of_abs 0010  
             ??_delay2ms 0000                  clrloop0 09EE     end_of_initialization 0033  
     TEMPADC@uwAdcSample 0052             __pstringtext 0100                DriveEEV@x 002E  
             eevdriver@x 0025             ??_DriveRelay 0000              ___ftdiv@exp 0043  
         __end_of_HPShut 0CBD              ___ftmul@exp 0037           __end_of___wmul 0AF4  
      __size_of_HPOuUnit 00C0        __size_of_HPSystem 0006       __end_of_DriveRelay 0A70  
              _DriveTime 0F2E      start_initialization 0013         UART_SendByte@dat 0025  
            __end_of_ADC 0AAE              __end_of_ISR 0A53              __end_of_abs 0A11  
               ??_HPShut 0000        __size_of_DriveEEV 00BE        __size_of_CountClk 004F  
      __size_of_CountMin 0018                 ??___wmul 0000              __pdataBANK0 0071  
 __size_of_UART_SendByte 000A               ?_DriveTime 0020        __size_of___awtoft 0024  
      __size_of___ftpack 006E        __size_of___lbtoft 001D                ___latbits 0001  
          __pcstackBANK0 0020                 ?_TEMPADC 0020        __size_of_delay2ms 0023  
               ?_HPstart 0020                _fkTempTab 0112                 ?___awdiv 002B  
               ?___ftadd 002D                 ?___ftdiv 0035                 ?___ftmul 002D  
               ?___fttol 003A                _eevdriver 0BAB                 ?_eevinit 0020  
              delay2ms@a 0027                delay2ms@b 0029                delay2ms@x 0025  
          _UART_SendByte 00F6        interrupt_function 0004           ___wmul@product 0029  
              clear_ram0 09ED            ??_serial_init 0000                 _HPOuUnit 0036  
               _PORTCBIT 0007            ??_timer0_init 0000                 _HPSystem 09E7  
             ?_eevdriver 0025               _ADCON0bits 001F              __stringbase 0112  
      ___wmul@multiplier 0025              ??_DriveTime 0030                _stepcount 0069  
       __size_of_TEMPADC 0138           ?_UART_SendByte 0020                 _DriveEEV 0E70  
               _CountClk 0B5C                 _CountMin 0A21         __size_of_HPstart 0103  
       __size_of___awdiv 005B         __size_of___ftadd 0108         __size_of___ftdiv 00B7  
       __size_of___ftmul 00D2         __size_of___fttol 008E                 ___awtoft 0AF4  
               ___ftpack 0CBD                 ___lbtoft 0A70      __end_of_serial_init 0A21  
     __end_of__stringtab 0112      __end_of_timer0_init 0A01         __size_of_eevinit 00F4  
               _delay2ms 0AAE                 __ptext10 042C                 __ptext11 0AF4  
               __ptext20 0F2E                 __ptext12 0CBD                 __ptext21 00F6  
               __ptext13 0C06                 __ptext22 0E70                 __ptext14 0A8D  
               __ptext23 0BAB                 __ptext15 09E7                 __ptext24 0AAE  
               __ptext16 0534                 __ptext25 0A21                 __ptext17 0A01  
               __ptext26 0B5C                 __ptext18 0036                 __ptext27 0A53  
               __ptext19 0C61                 __ptext28 0A39            __size_of_main 0044  
               eevinit@i 0031              ??_eevdriver 0027          ??_UART_SendByte 0000  
               intlevel1 0000                stringcode 010A              _serial_init 0A11  
            _timer0_init 09F5                 stringtab 0100  
